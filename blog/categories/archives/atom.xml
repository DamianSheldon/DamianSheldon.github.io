<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Archives | Hello World]]></title>
  <link href="http://DamianSheldon.github.io/blog/categories/archives/atom.xml" rel="self"/>
  <link href="http://DamianSheldon.github.io/"/>
  <updated>2015-03-23T11:34:00+08:00</updated>
  <id>http://DamianSheldon.github.io/</id>
  <author>
    <name><![CDATA[Sheldon]]></name>
    <email><![CDATA[dongmeilianghy@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux命令行整理]]></title>
    <link href="http://DamianSheldon.github.io/blog/linux-useful-command-line.html/"/>
    <updated>2015-03-18T21:12:56+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/linux-useful-command-line</id>
    <content type="html"><![CDATA[<h3>Create new account</h3>

<p><code>
sudo adduser --home /home/username --shell /bin/bash --ingroup git username
</code></p>

<h3>List all groups and the user names that were in each group</h3>

<p><code>``
for u in</code>cut -f1 -d: /etc/passwd`; do echo -n $u:; groups $u; done | sort</p>

<p>groups $(cut -f1 -d":&ldquo; /etc/passwd) | sort
```</p>

<h3>How to set up ssh so you aren&rsquo;t asked for a password</h3>

<p>You can create a RSA authentication key to be able to log into a remote site from your account, without having to type your password.</p>

<p>Note that once you&rsquo;ve set this up, if an intruder breaks into your account/site, they are given access to the site you are allowed in without a password, too! For this reason, this should never be done from root.</p>

<ul>
<li>Run ssh-keygen(1) on your machine, and just hit enter when asked for a password.
This will generate both a private and a public key. With older SSH versions, they will be stored in ~/.ssh/identity and ~/.ssh/identity.pub; with newer ones, they will be stored in ~/.ssh/id_rsa and ~/.ssh/id_rsa.pub.</li>
<li>Next, add the contents of the public key file into ~/.ssh/authorized_keys on the remote site (the file should be mode 600).
If you are a developer and you want to access debian.org systems with such a key, it&rsquo;s possible to have the developer database propagate your key to all of the debian.org machines. See the LDAP gateway documentation.
You should then be able to use ssh to log in to the remote server without being asked for a password.</li>
</ul>


<p>Reference:<a href="https://www.debian.org/devel/passwordlessssh">https://www.debian.org/devel/passwordlessssh</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS Thread笔记]]></title>
    <link href="http://DamianSheldon.github.io/blog/nsthread-thechnology-notes.html/"/>
    <updated>2015-03-16T16:27:17+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/nsthread-thechnology-notes</id>
    <content type="html"><![CDATA[<ol>
<li>Thread是什么？</li>
<li>iOS中怎么使用Thread？</li>
</ol>


<h3>Thread是什么</h3>

<blockquote><p>Threads are a relatively lightweight way to implement multiple paths of execution inside of an application. At the system level, programs run side by side, with the system doling out execution time to each program based on its needs and the needs of other programs. Inside each program, however, exists one or more threads of execution, which can be used to perform different tasks simultaneously or in a nearly simultaneous manner. The system itself actually manages these threads of execution, scheduling them to run on the available cores and preemptively interrupting them as needed to allow other threads to run.</p>

<p>From a technical standpoint, a thread is a combination of the kernel-level and application-level data structures needed to manage the execution of code. The kernel-level structures coordinate the dispatching of events to the thread and the preemptive scheduling of the thread on one of the available cores. The application-level structures include the call stack for storing function calls and the structures the application needs to manage and manipulate the thread’s attributes and state.</p></blockquote>

<h3>iOS中怎么使用Thread</h3>

<p>iOS中的Thread技术主要有以下两种：</p>

<table>
<thead>
<tr>
<th></th>
<th> Technology </th>
<th> Description </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> Cocoa threads </td>
<td> Cocoa implements threads using the NSThread class. Cocoa also provides methods on NSObject for spawning new threads and executing code on already-running threads. </td>
</tr>
<tr>
<td></td>
<td> POSIX threads </td>
<td> POSIX threads provide a C-based interface for creating threads. If you are not writing a Cocoa application, this is the best choice for creating threads. The POSIX interface is relatively simple to use and offers ample flexibility for configuring your threads.</td>
</tr>
</tbody>
</table>


<h4>Creating a Thread</h4>

<ol>
<li><p>Using NSThread</p>

<ul>
<li>Use the detachNewThreadSelector:toTarget:withObject: class method to spawn the new thread.</li>
<li>Create a new NSThread object and call its start method. (Supported only in iOS and OS X v10.5 and later.)</li>
</ul>
</li>
<li><p>Using POSIX Threads</p>

<ul>
<li>OS X and iOS provide C-based support for creating threads using the POSIX thread API. This technology can actually be used in any type of application (including Cocoa and Cocoa Touch applications) and might be more convenient if you are writing your software for multiple platforms. The POSIX routine you use to create threads is called, appropriately enough, pthread_create.</li>
</ul>
</li>
<li><p>Using NSObject to Spawn a Thread</p>

<ul>
<li>In iOS and OS X v10.5 and later, all objects have the ability to spawn a new thread and use it to execute one of their methods. The performSelectorInBackground:withObject: method creates a new detached thread and uses the specified method as the entry point for the new thread.</li>
</ul>
</li>
</ol>


<h4>Configuring Thread Attributes</h4>

<p>Thread的配置项有：</p>

<ul>
<li>Stack Size of a Thread</li>
<li>Thread-Local Storage</li>
<li>Detached State of a Thread</li>
<li>Thread Priority</li>
</ul>


<h4>Writing Your Thread Entry Routine</h4>

<p>编写Thread的入口程序通常需要做如下事项：</p>

<ul>
<li>Creating an Autorelease Pool</li>
<li>Setting Up an Exception Handler</li>
<li>Setting Up a Run Loop</li>
</ul>


<h4>Terminating a Thread</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS App 开发问题汇总（二）]]></title>
    <link href="http://DamianSheldon.github.io/blog/ios-app-problems-part-2.html/"/>
    <updated>2015-03-16T16:14:50+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/ios-app-problems-part-2</id>
    <content type="html"><![CDATA[<h3>问题描述：Ad Hoc分发应用</h3>

<p>导出Ad Hoc授权应用
Xcode > Product > Archive > Export</p>

<p>安装Ad Hoc分发的应用
Open iTunes > File > Add To Library&hellip; > select Ad Hoc provisioning profile and App.ipa > Sync</p>

<h3>问题描述：Xcode编译出现如下警告提示：</h3>

<p>[WARN]warning: no rule to process file xxx.h’ of type sourcecode.c.h for architecture armv7</p>

<p>解决办法:这是因为检查到有.h文件在编译列表中了。所以只要在列表中去掉就可以了。</p>

<p>点击你的xcode项目文件，然后点击[Build Phases]，确保在[Compile Sources]中没有.h文件。</p>

<p>Reference:<a href="http://hearrain.com/2014/01/774">http://hearrain.com/2014/01/774</a></p>

<h3>问题描述：iPhone每次连接Mac都会弹出iPhoto</h3>

<p>解决办法：</p>

<ol>
<li>Plug in your iPad/iPhone</li>
<li>Open Image Capture</li>
<li>Select your device (&ldquo;devMikePad&rdquo;)</li>
<li>Press the triangle in square symbol in the lower left corner.</li>
<li>Select &ldquo;No application&rdquo; in the menu.</li>
</ol>


<p>iPhoto:
Preferences > General > &ldquo;Connecting Camera Opens &hellip;&rdquo;
set it to &ldquo;No Application&rdquo;</p>

<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何创建私有的Pod]]></title>
    <link href="http://DamianSheldon.github.io/blog/private-pods.html/"/>
    <updated>2015-03-11T17:23:04+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/private-pods</id>
    <content type="html"><![CDATA[<p>公司的代码经常是需要保密的，我们可以创建私有的pod来方便我们的日常开发工作。</p>

<p>Cocoa Pods工作依赖于两个文件：<br/>
1. podspec:一个pod的配置是什么，pod的代码放在哪里
2. Podfile:项目依赖哪个pod，以何种方式依赖，它的podspec放在哪里</p>

<p>Cocoa Pods提供创建静态库pod的方法pod lib create [Pod name]，但这次我由于各种原因不是这样开始的，而是手动先创建了静态库，然后再新建开发工程的方式。于是我需要手动创建podspec文件:</p>

<p><code>
pod spec create --verbose project
</code></p>

<!--more-->


<p>然后编辑podspecs文件，这里有几个地方需要注意：</p>

<p>```
// s.source指定工程的源码地址,这里路径有些怪异是因为我的git server是布署在Windows上的。
s.source  = { :git => &ldquo;ssh://dongmeiliang@192.168.1.100:/git/ICW/Git/AJFrame.iOS&rdquo;, :tag => &ldquo;2.0.0&rdquo; }</p>

<p>// s.source_files指定哪些源文件需要包含在pod中
s.source_files  = &ldquo;AJFrame.iOS/*.{h,m}&rdquo;</p>

<p>// pod的依赖
s.dependency &ldquo;JSONKit&rdquo;, &ldquo;~> 1.4&rdquo;</p>

<p>```</p>

<p>podspecs完成之后, pod spec lint命令可以检查有没有错误。接下来在需要依赖这个pod的工程的Podfile文件中指定podspec的存放路径。</p>

<p><code>
pod 'AJFrame.iOS', :git =&gt; 'ssh://192.168.1.100:/git/ICW/Git/AJFrame.iOS', :tag =&gt; '2.0.0'
</code></p>

<h3>Reference</h3>

<p><a href="http://guides.cocoapods.org/making/using-pod-lib-create">Using Pod Lib Create</a><br/>
<a href="http://guides.cocoapods.org/using/the-podfile.html">The Podfile</a><br/>
<a href="http://www.iwangke.me/2013/04/18/advanced-cocoapods/">CocoaPods进阶：本地包管理</a><br/>
<a href="http://blog.devtang.com/blog/2014/05/25/use-cocoapod-to-manage-ios-lib-dependency/">用CocoaPods做iOS程序的依赖管理</a><br/>
<a href="http://studentdeng.github.io/blog/2013/09/13/cocoapods-tutorial/">Cocoapods 入门</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS Technical Interview Part 1]]></title>
    <link href="http://DamianSheldon.github.io/blog/ios-technical-interview-part-1.html/"/>
    <updated>2015-01-05T15:44:07+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/ios-technical-interview-part-1</id>
    <content type="html"><![CDATA[<h3>Explain method swizzling. When you would use it?</h3>

<h3>Take three objects: a grandparent, parent and child. The grandparent retains the parent, the parent retains the child and the child retains the parent. The grandparent releases the parent. Explain what happens.</h3>

<p>Answer:循环保留导致内存泄漏。</p>

<h3>What happens when you invoke a method on a nil pointer?</h3>

<p>Answer:返回0</p>

<p>Reference:<a href="http://nshipster.com/nil/">http://nshipster.com/nil/</a></p>

<h3>Give two separate and independent reasons why retainCount should never be used in shipping code.</h3>

<blockquote><p>There should be no reason to explicitly ask an object what its retain count is (see retainCount). The result is often misleading, as you may be unaware of what framework objects have retained an object in which you are interested. In debugging memory management issues, you should be concerned only with ensuring that your code adheres to the ownership rules.</p></blockquote>

<ol>
<li>结果不正确，因为你不知道框架中哪些对象已经引用了你感兴趣的对象;</li>
<li>产品代码中不应该包含无用代码。</li>
</ol>


<h3>Explain your process for tracing and fixing a memory leak.</h3>

<ol>
<li>Set the NSZombieEnabled argument in your executable options, which sometimes helps narrow down the cause</li>
<li>Run with Apple Instruments such as Leaks to look for memory issues</li>
</ol>


<p>Reference:<a href="http://www.raywenderlich.com/2696">http://www.raywenderlich.com/2696</a></p>

<h3>Explain how an autorelease pool works at the runtime level.</h3>

<h3>When dealing with property declarations, what is the difference between atomic and non-atomic?</h3>

<p>atomic是指存在竞争赋值时，我们会得到某次完整的赋值，而nonatomic则可能是几次赋值共同组合。</p>

<p>```
@property CGRect domain;</p>

<p><b>thread 1:</b> puppy.domain = CGRectMake (1.0, 2.0, 3.0, 4.0);
<b>thread 2:</b> puppy.domain = CGRectMake (10.0, 20.0, 30.0, 40.0);</p>

<p>atomic意味着在竞争赋值的情况下得到的结果是CGRectMake (1.0, 2.0, 3.0, 4.0)或者CGRectMake (10.0, 20.0, 30.0, 40.0)。</p>

<p>noatomic情况得到的结果可能是CGRectMake (1.0, 2.0, 30.0, 40.0)这种两次组合的乱码。</p>

<p>```
再进一步，atomic是不是意味着代码是线程安全的呢？不是。atomic修饰符可以保证property的读写操作是串行的，但如果对象的指针不是atomic修饰的，代码仍然不是线程安全的。</p>

<h3>In C, how would you reverse a string as quickly as possible?</h3>

<h3>Which is faster: to iterate through an NSArray or an NSSet?</h3>

<p>NSArray</p>

<p>Reference:<a href="http://www.cocoawithlove.com/2008/08/nsarray-or-nsset-nsdictionary-or.html">http://www.cocoawithlove.com/2008/08/nsarray-or-nsset-nsdictionary-or.html</a></p>

<h3>Explain how code signing works.</h3>

<h3>What is posing in Objective-C?</h3>

<h3>List six instruments that are part of the standard.</h3>

<ol>
<li>Allocations</li>
<li>Core Animation</li>
<li>Leaks</li>
<li></li>
</ol>


<h3>What are the differences between copy and retain?</h3>

<p>copy是新创建一个对象副本；retain则是对象引用计数加一。</p>

<h3>What is the difference between frames and bounds?</h3>

<blockquote><p>The frame property contains the frame rectangle, which specifies the size and location of the view in its superview’s coordinate system.
The bounds property contains the bounds rectangle, which specifies the size of the view (and its content origin) in the view’s own local coordinate system.</p></blockquote>

<h3>What happens when the following code executes? Ball *ball = [[[[Ball alloc] init] autorelease] autorelease];</h3>

<p>The object gets released twice when the autorelease pool is destroyed.</p>

<p>Reference:<a href="http://stackoverflow.com/questions/11291801/autoreleasing-twice-an-object">http://stackoverflow.com/questions/11291801/autoreleasing-twice-an-object</a></p>

<h3>List the five iOS app states.</h3>

<table>
<thead>
<tr>
<th></th>
<th> State </th>
<th> Description </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> Not Running </td>
<td> The app has not been launched or was running but was terminated by the system.</td>
</tr>
<tr>
<td></td>
<td> Inactive </td>
<td> The app is running in the foreground but is currently not receiving events. (It may be executing other code though.) An app usually stays in this state only briefly as it transitions to a different state.</td>
</tr>
<tr>
<td></td>
<td> Active </td>
<td> The app is running in the foreground and is receiving events. This is the normal mode for foreground apps.</td>
</tr>
<tr>
<td></td>
<td> Background </td>
<td> The app is in the background and executing code. Most apps enter this state briefly on their way to being suspended. However, an app that requests extra execution time may remain in this state for a period of time. In addition, an app being launched directly into the background enters this state instead of the inactive state. For information about how to execute code while in the background</td>
</tr>
<tr>
<td></td>
<td> Suspended </td>
<td> The app is in the background but is not executing code. The system moves apps to this state automatically and does not notify them before doing so. While suspended, an app remains in memory but does not execute any code.</td>
</tr>
</tbody>
</table>


<p>When a low-memory condition occurs, the system may purge suspended apps without notice to make more space for the foreground app.</p>
]]></content>
  </entry>
  
</feed>
