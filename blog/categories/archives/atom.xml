<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Archives | Hello World]]></title>
  <link href="http://DamianSheldon.github.io/blog/categories/archives/atom.xml" rel="self"/>
  <link href="http://DamianSheldon.github.io/"/>
  <updated>2015-11-04T20:56:48+08:00</updated>
  <id>http://DamianSheldon.github.io/</id>
  <author>
    <name><![CDATA[Sheldon]]></name>
    <email><![CDATA[dongmeilianghy@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS 项目持续集成和部署笔记]]></title>
    <link href="http://DamianSheldon.github.io/blog/continuous-integration-and-deployment-for-ios-projects.html/"/>
    <updated>2015-11-04T09:38:13+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/continuous-integration-and-deployment-for-ios-projects</id>
    <content type="html"><![CDATA[<p>本文是我做 iOS 项目持续集成和部署的笔记。</p>

<h3>安装工具</h3>

<ol>
<li><a href="http://jenkins-ci.org/">jenkins</a>;</li>
</ol>


<p><code>
$ brew update &amp;&amp; brew install jenkins
</code></p>

<ol>
<li><a href="https://github.com/fastlane/fastlane">fastlane</a>;</li>
</ol>


<p><code>
$ sudo gem install fastlane --verbose
</code></p>

<ol>
<li><a href="https://github.com/FIRHQ/fir-cli/blob/master/README.md">fir-cli</a>;</li>
</ol>


<p><code>
$ sudo gem install fir-cli
</code></p>

<h3>fastlane 自动构建</h3>

<ul>
<li>cd [your_project_folder]</li>
<li>fastlane init</li>
<li>Follow the setup assistant, which will set up fastlane for you</li>
<li>Edit Fastfile</li>
</ul>


<p>```
fastlane_version &ldquo;1.25.0&rdquo;</p>

<p>default_platform :ios</p>

<p>platform :ios do
  before_all do</p>

<pre><code>ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
#cocoapods

increment_build_number

gym(scheme: "srsApp") # Build your app - more options available

# xctool # run the tests of your app
</code></pre>

<p>  end</p>

<p>  desc &ldquo;Runs all the tests&rdquo;
  lane :test do</p>

<pre><code>snapshot
</code></pre>

<p>  end</p>

<p>  desc &ldquo;Submit a new Beta Build to fir&rdquo;
  desc &ldquo;This will also make sure the profile is up to date&rdquo;
  lane :fir do</p>

<pre><code>#snapshot
sh "sigh --team_id your_team_id"
#deliver(beta: true)

#"ipa distribute:pgyer -u USER_KEY -a APP_KEY" # 上传到蒲公英

#"ipa distribute:fir -u USER_TOKEN -a APP_ID" # 上传到fir.im

# sh"ipa distribute:fir -u USER_KEY -a APP_KEY"
# You can also use other beta testing services here
sh "fir p ../srsApp.ipa -T USER_TOKEN"
</code></pre>

<p>  end</p>

<p>  desc &ldquo;Submit a new Beta Build to pgyer &rdquo;
  desc &ldquo;This will also make sure the profile is up to date&rdquo;
  lane :pgyer do</p>

<pre><code>#snapshot
sh "sigh --team_id your_team_id"
#deliver(beta: true)

# You can also use other beta testing services here
sh "curl -F \"file=@/Users/dongmeiliang/Documents/HJKApp/srsApp/srsApp.ipa\" -F \"uKey=USER_TOKEN\" -F \"_api_key=APP_KEY\" http://www.pgyer.com/apiv1/app/upload"
</code></pre>

<p>  end</p>

<p>  # You can define as many lanes as you want</p>

<p>  after_all do |lane|</p>

<pre><code># This block is called, only if the executed lane was successful

 slack(
   message: "Successfully deployed new App Update."
 )
</code></pre>

<p>  end</p>

<p>  error do |lane, exception|</p>

<pre><code> slack(
   message: exception.message,
   success: false
 )
</code></pre>

<p>  end
end
<code>``
使用</code>fastlane fir`测试能否正常构建。</p>

<h3>自动测试</h3>

<p>可以利用 xcodebuild 命令来实现自动测试。
<code>
$ xcodebuild -project UI\ Testing\ In\ Xcode.xcodeproj -scheme UI\ Testing\ In\ Xcode -destination 'platform=iOS Simulator,name=iPhone 6s,OS=9.1' test
</code></p>

<h3>jenkins 持续集成</h3>

<ol>
<li><p>创建自动构建 job</p></li>
<li><p>Open <a href="http://localhost:8080">http://localhost:8080</a> with safari</p></li>
<li><p>Install plugins</p>

<ul>
<li>HTML Publisher Plugin</li>
<li>AnsiColor Plugin</li>
<li>Rebuild Plugin</li>
<li>GIT Plugin</li>
</ul>
</li>
<li><p>Create job > input item name > Freestyle project > OK</p></li>
<li><p>Configuration
  Source Code Management
  Git
  Repository URL /Users/dongmeiliang/Documents/HJKApp
  Branches to build */test
  Add build step > Execute shell</p>

<p>  <code>
  #!/bin/bash
  source ~/.bash_profile
  cd srsApp/
  fastlane  fir
 </code></p></li>
<li><p>Save > build</p></li>
<li><p>创建自动测试 job</p></li>
</ol>


<h2>Reference</h2>

<p>Testing with Xcode
<a href="https://github.com/fastlane/fastlane">fastlane</a><br/>
<a href="https://github.com/fastlane/fastlane/blob/master/docs/Jenkins.md">Jenkins Integration</a><br/>
<a href="http://blog.csdn.net/colorapp/article/details/47007329">iOS可持续化集成: Jenkins + bundler + cocoapods + shenzhen + fastlane + pgyer</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Mac 遇到的问题]]></title>
    <link href="http://DamianSheldon.github.io/blog/problems-when-use-mac.html/"/>
    <updated>2015-10-10T08:49:37+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/problems-when-use-mac</id>
    <content type="html"><![CDATA[<h2>1. How to enable the three finger drag on OS X 10.11</h2>

<p>Step 1: Open System Preferences</p>

<p>Step 2: Click Accessibility</p>

<p>Step 3: Click Mouse &amp; Trackpad</p>

<p>Step 4: Click Trackpad Options…</p>

<p>Step 5: Click Enable dragging</p>

<p>Step 6: Select “three finger drag” in the drop down box</p>

<p>Reference:<a href="http://www.idownloadblog.com/2015/06/25/three-finger-drag-gesture-os-x-el-capitan/">http://www.idownloadblog.com/2015/06/25/three-finger-drag-gesture-os-x-el-capitan/</a></p>

<!-- more -->


<h2>2. How to find computer name on Mac</h2>

<ol>
<li><p>GUI
System Preference > Sharing</p></li>
<li><p>Command Line
hostname</p></li>
</ol>


<p> ./configure &mdash;prefix=/usr/local/php &mdash;with-mysql=/usr/local/mysql &mdash;with-apxs=/usr/local/apache/bin/apxs &mdash;with-config-file-path=/usr/local/apache/conf &mdash;enable-mbstring</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 安装 OS X El Capitan]]></title>
    <link href="http://DamianSheldon.github.io/blog/note-of-install-os-x-el-capitan-and-set-up-development-enviroment.html/"/>
    <updated>2015-10-09T18:00:22+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/note-of-install-os-x-el-capitan-and-set-up-development-enviroment</id>
    <content type="html"><![CDATA[<p>最近 Apple 更新了 OS X，通过 App Store 更新下载下来 OS X El Capitan 的安装时遇到问题了 &mdash; 手头的这台 Mac 之前有人分区安装了 Windows, OS X 安装在第二个分区， OS X El Capitan 却不能安装在 OS X 所在的分区，而且格式化 Windows 所在的分区又报错，也是醉了，只好重装。</p>

<h2>备份数据</h2>

<p>我用 sftp 把数据备份到另一台 Mac 上, 之前也试过 Migration Assitant 都是卡在最后一分钟，不知道现在这个问题改善了没有。 用 sftp 备份中间也中断了好多次，但手头也没移动硬盘也只能这么将就着了。</p>

<h2>Install OS X El Capitan</h2>

<ol>
<li>需要一个 8GB 左右的 U 盘，因为 El Capitan 的大小超过 6GB ;</li>
<li>从 App Store 下载 El Capitan;</li>
<li>制作安装盘：
<code>
sudo /Applications/Install\ OS\ X\ Mavericks.app/Contents/Resources/createinstallmedia --volume /Volumes/Untitled --applicationpath /Applications/Install\ OS\ X\ Mavericks.app --nointeraction
</code></li>
<li>重新启动，按住 option 键，选择通过U盘启动，之后先进入磁盘工具里面把硬盘格式化了（你也可以选择不格式化，这样就是覆盖安装）;</li>
</ol>


<!-- more -->


<h2>安装常用软件</h2>

<ol>
<li>Download Xcode in App Store;</li>
<li>iTerm;</li>
<li>Chrome;</li>
<li>LibreOffice;</li>
<li>Microsoft Remote Desktop Connection;</li>
<li>Homebrew;</li>
<li>ruby;</li>
<li>Set up web development envrionment</li>
</ol>


<p>Reference:<a href="http://blog.devtang.com/blog/2014/04/12/install-mavericks-note/">http://blog.devtang.com/blog/2014/04/12/install-mavericks-note/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set up PHP development environment]]></title>
    <link href="http://DamianSheldon.github.io/blog/set-up-php-development-environment.html/"/>
    <updated>2015-09-19T22:25:19+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/set-up-php-development-environment</id>
    <content type="html"><![CDATA[<h3>Notes of Set up PHP development environment</h3>

<ol>
<li>Install <a href="https://eclipse.org/pdt/#download">Eclipse PDT</a>;</li>
<li><a href="http://jason.pureconcepts.net/2012/10/install-pear-pecl-mac-os-x/">Install PEAR and PECL on Mac OS X</a>, php.ini locate in /etc on Yosemite;</li>
<li><p><a href="http://www.xdebug.org/docs/install">Install Xdebug through PEAR/PECL</a>;
 Addition configure for Yosemite</p>

<ul>
<li><code>sudo cp /etc/php.ini.default /etc/php.ini</code></li>
<li>add &ldquo;zend_extension=/usr/lib/php/extensions/no-debug-non-zts-20121212/xdebug.so&rdquo; to php.ini</li>
</ul>
</li>
<li><p>Debugging Local PHP Files (PHP CLI Application)</p>

<ul>
<li>Create a PHP project;</li>
<li>Create a PHP file;</li>
<li>Set a breakpoint in PHP file;</li>
<li>Save file;</li>
<li>Create a new debug configuration;

<ul>
<li>Eclipse > Preference&hellip; > PHP Executables > Add (Executable path: <code>which php</code>)</li>
<li>Run > Debug Configurations > Select PHP CLI Application > New</li>
</ul>
</li>
</ul>
</li>
<li><p>Debugging PHP Web Applications (PHP Web Application)</p>

<ul>
<li>Create a PHP project;</li>
<li>Create a PHP file;</li>
<li>Create a new debug configuration;

<ul>
<li>Run > Debug Configurations > Select PHP Web Application > New</li>
</ul>
</li>
</ul>
</li>
<li><p>Test with PHPUnit</p>

<ul>
<li>Run > External Tools > External Tools Configurations&hellip; > Program > New
[Main]
Location:/usr/local/bin/phpunit
Working Directory:${workspace_loc:/Backend/tests}
Apply > Run
<a href="http://stackoverflow.com/questions/966673/eclipse-pdt-phpunit">Reference</a></li>
</ul>
</li>
<li><p>Integrate MakeGood (failure)</p>

<ul>
<li>Installing Prerequisite Software

<ul>
<li>PHP 5.5.27 (cli)</li>
<li>xdebug-2.3.2</li>
<li>eclipse mars(4.5.0)</li>
<li>PDT(3.5.0)</li>
<li>PHPUnit (4.8.6)</li>
</ul>
</li>
<li><p>Installing MakeGood
  Help &ndash;> Install New Software&hellip; &ndash;> Add&hellip; &ndash;> <a href="http://eclipse.piece-framework.com/">http://eclipse.piece-framework.com/</a></p></li>
<li><p>Selecting a Testing Framework</p></li>
<li><p>Resolving the Dependencies to the Testing Framework</p>

<pre><code>  * Defining User Libraries 
      Eclipse -&gt; Preferences... &gt; PHP -&gt; PHP Libraries &gt; New... &gt; OK
      Add External folder... &gt; [Verifying the include path](http://pear.php.net/manual/en/installation.checking.php)
  * Adding User Libraries to the Project
</code></pre>

<p>   fail with PHPUnit_Framework_TestCase class is not available. Fix&hellip;, I doubt that MakeGood doesn&rsquo;t support eclipse mars.</p></li>
</ul>


<p> *Testing Framework Specific Configuration<br/>
     PHPUnit</p>

<pre><code> * Open the properties for the project.
 * Select MakeGood.
 * Select PHPUnit.
 * Specify the XML Configuration File. [eg](http://beagile.biz/a-simple-phpunit-xml-configuration-example/)
</code></pre>

<p> <a href="http://piece-framework.com/projects/makegood/wiki/MakeGood_User_Guide_1_7_0">Reference</a></p></li>
</ol>


<h3>Throw java.lang.NullPointerException when create a new debug configuration</h3>

<p>Solution: Add a PHP Executable, Eclipse > Preference&hellip; > PHP Executables > Add (Executable path: <code>which php</code>)</p>

<h3>Wait for XDebug session</h3>

<p>Solution:Debugging PHP Web Applications时卡在这里，原因是XDebug remote debug没配置好，参考了<a href="http://www.xdebug.org/docs/remote">Remote Debugging</a>和<a href="https://wiki.eclipse.org/Debugging_using_XDebug">Debugging using XDebug</a>，发现phpinfo()输出的内容并没有XDebug。于是来开始配置php.ini,参考的<a href="http://stackoverflow.com/questions/27861720/how-to-set-default-php-ini-to-be-used-osx-yosemite">How to set default php.ini to be used, OSX Yosemite</a></p>

<p>```
sudo cp /etc/php.ini.default /etc/php.ini</p>

<p>// Add follow content to php.ini
[XDebug]
zend_extension=/usr/lib/php/extensions/no-debug-non-zts-20121212/xdebug.so
xdebug.remote_enable=On
xdebug.remote_handler=dbgp
xdebug.remote_host=helloworld.local
xdebug.remote_port=9000
;xdebug.remote_connect_back=1
xdebug.remote_mode=&ldquo;req&rdquo;
xdebug.remote_log=&ldquo;/var/log/xdebug.log&rdquo;</p>

<p>sudo apachectl restart
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim]]></title>
    <link href="http://DamianSheldon.github.io/blog/vim.html/"/>
    <updated>2015-09-10T21:09:05+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/vim</id>
    <content type="html"><![CDATA[<h3>1.查看帮助</h3>

<p>:help</p>

<h3>2.查看quickref</h3>

<p>：help quickref</p>

<h3>3.语法高亮</h3>

<p>|:syn-on|       :syntax on              start using syntax highlighting
|:syn-off|      :syntax off             stop using syntax highlighting</p>

<h3>4.Move cursor to its last position</h3>

<p>The quickest way is to hit either:</p>

<p>&lsquo;&rsquo;
(two apostrophes) or:</p>

<p>``
(two backticks).</p>

<h3>5.Multi-window commands</h3>

<p>Q_wi*          Multi-window commands</p>

<p>|CTRL-W_s|      CTRL-W s  or  :split    split window into two parts
|:split_f|      :split {file}           split window and edit {file} in one of</p>

<pre><code>                                       them
</code></pre>

<p>|:vsplit|       :vsplit {file}          same, but split vertically
|:vertical|     :vertical {cmd}         make {cmd} split vertically</p>

<p>|:sfind|        :sf[ind] {file}         split window, find {file} in &lsquo;path&rsquo;</p>

<pre><code>                                       and edit it
</code></pre>

<p>|CTRL-W_]|      CTRL-W ]                split window and jump to tag under</p>

<pre><code>                                       cursor
</code></pre>

<p>|CTRL-W_f|      CTRL-W f                split window and edit file name under</p>

<pre><code>                                       the cursor
</code></pre>

<p>|CTRL-W_^|      CTRL-W ^                split window and edit alternate file
|CTRL-W_n|      CTRL-W n  or  :new      create new empty window
|CTRL-W_q|      CTRL-W q  or  :q[uit]   quit editing and close window
|CTRL-W_c|      CTRL-W c  or  :cl[ose]  make buffer hidden and close window
|CTRL-W_o|      CTRL-W o  or  :on[ly]   make current window only one on the</p>

<pre><code>                                       screen
</code></pre>

<p>|CTRL-W_j|      CTRL-W j                move cursor to window below
|CTRL-W_k|      CTRL-W k                move cursor to window above
|CTRL-W_CTRL-W| CTRL-W CTRL-W           move cursor to window below (wrap)
|CTRL-W_W|      CTRL-W W                move cursor to window above (wrap)
|CTRL-W_t|      CTRL-W t                move cursor to top window
|CTRL-W_b|      CTRL-W b                move cursor to bottom window
|CTRL-W_p|      CTRL-W p                move cursor to previous active window</p>

<p>|CTRL-W_r|      CTRL-W r                rotate windows downwards
|CTRL-W_R|      CTRL-W R                rotate windows upwards
|CTRL-W_x|      CTRL-W x                exchange current window with next one</p>

<p>|CTRL-W<em>=|      CTRL-W =                make all windows equal height
|CTRL-W</em>&ndash;|      CTRL-W &ndash;                decrease current window height
|CTRL-W_+|      CTRL-W +                increase current window height
|CTRL-W__|      CTRL-W _                set current window height (default:</p>

<pre><code>                                       very high)
</code></pre>

<p>1, set number
2, set autoindent
4, set background=dark
5, set background=light</p>

<p>6, 0, ^ line head</p>

<p>7, $, g_ line foot</p>

<p>8, ctl + f forword page</p>

<p>9, ctl + b back page</p>
]]></content>
  </entry>
  
</feed>
