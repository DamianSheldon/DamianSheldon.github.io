<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: archives | Hello World]]></title>
  <link href="http://DamianSheldon.github.io/blog/categories/archives/atom.xml" rel="self"/>
  <link href="http://DamianSheldon.github.io/"/>
  <updated>2016-02-05T14:24:36+08:00</updated>
  <id>http://DamianSheldon.github.io/</id>
  <author>
    <name><![CDATA[Sheldon]]></name>
    <email><![CDATA[dongmeilianghy@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS Unit Testing With OCMock]]></title>
    <link href="http://DamianSheldon.github.io/blog/ios-unit-testing-with-ocmock.html"/>
    <updated>2016-01-22T14:19:12+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/ios-unit-testing-with-ocmock</id>
    <content type="html"><![CDATA[<p>单元测试是我们保障代码质量的重要手段， Apple 对此也十分重视，这点可以从 Xcode 新建工程时会自动创建单元测试的 Target 看出来。单元测试牵涉的内容很多，这篇文章是目前我对单元测试的理解。</p>

<p>既然是单元测试，那么什么是单元呢？我没有去考证，但我是这么理解的：面向对象编程范式里一切皆对象，而对象是由实例变量和方法组成，对象之间通过方法互相作用，我们的应用可以看作是一个对象图，对象图上的对象相互作用来实现我们的需求。这么看来我们的单元应该是对象的方法。</p>

<p>对象的方法在工作的时候可能要依赖其他对象，为了去除依赖对象对测试的影响，我们引入 Mock.</p>

<blockquote><p>Mocks are ‘fake’ objects with pre-defined behavior to stand-in for concrete objects during testing. &ndash; HackaZach</p></blockquote>

<p>引用 Mock 之后，我们在单元测试中如何使用它呢？</p>

<blockquote><p>The general recipe for using mocks in unit-tests is:</p>

<ol>
<li>Create the mock object</li>
<li>Specify the expected invocations and return values</li>
<li>Associate the mock object with the code under test</li>
<li>Execute the code under test</li>
<li>Validate that your assertions are correct</li>
</ol>
</blockquote>

<!-- more -->


<h3>Create the mock object</h3>

<p>OCMock 中创建 Mock 对象的方法如下：</p>

<table>
<thead>
<tr>
<th> Factory Method </th>
<th> Description </th>
</tr>
</thead>
<tbody>
<tr>
<td> +mockForClass: </td>
<td> Create a mock based on the given class </td>
</tr>
<tr>
<td> +mockForProtocol: </td>
<td> Create a mock based on the given protocol </td>
</tr>
<tr>
<td> +niceMockForClass: </td>
<td> Create a &ldquo;nice&rdquo; mock based on the given class </td>
</tr>
<tr>
<td> +niceMockForProtocol: </td>
<td> Create a &ldquo;nice&rdquo; mock based on the given protocol </td>
</tr>
<tr>
<td> +partialMockForObject: </td>
<td> Create a mock based on the given object </td>
</tr>
<tr>
<td> +observerMock: </td>
<td> Create a notification observer (more on this later) </td>
</tr>
</tbody>
</table>


<p>Mock 对象是只是一个空壳，只能调用预先定义的方法，调用没有预先定义的方法会抛出异常；
Nice Mock 对象也是一个空壳，只是它会忽略没有预先定义的方法不会抛出异常；
Partial Mock 对象是把一个已有的对象转成 Mock，调用没有预先定义的方法，它会把方法传给已存在的对象；<br/>
Observer Mock 对象是用来观察通知的。</p>

<h3>Specify the expected invocations and return values</h3>

<blockquote><p>Calling either the -expect or -stub method will return an object that you can use to setup your expectations.</p></blockquote>

<ul>
<li><p>Specify the expected invocations</p>

<ol>
<li>不带参数的方法</li>
</ol>
</li>
</ul>


<pre><code>
- (void)testInit {
  id mockService = [OCMockObject mockForProtocol:@protocol(AVQuoteService)];
  [[mockService expect] initiateConnection];

  AVStockPortfolio *portfolio = [[AVStockPortfolio alloc] initWithService:mockService];

  [mockService verify];
}
</code></pre>

<p></br>
    2. 带参数的方法</p>

<blockquote><p>You can use any of the following OCMArg class methods in place of a real argument when setting up your method expectations:</p></blockquote>

<table>
<thead>
<tr>
<th> OCMArg method </th>
<th> Description </th>
</tr>
</thead>
<tbody>
<tr>
<td> +any </td>
<td> Any argument is accepted. </td>
</tr>
<tr>
<td> +anyPointer </td>
<td> Accepts any pointer </td>
</tr>
<tr>
<td> +isNil     </td>
<td> The given argument must be nil </td>
</tr>
<tr>
<td> +isNotNil  </td>
<td> The given argument must not be nil </td>
</tr>
<tr>
<td> +isNotEqual:   </td>
<td> Given argument is not object-equivalent with expectation </td>
</tr>
<tr>
<td> +checkWithSelector: </td>
<td> onObject:   Check the argument with the given action/target pair </td>
</tr>
<tr>
<td> +checkWithBlock: </td>
<td> Check the argument with the given block (OS X 10.6 or iOS 4) </td>
</tr>
</tbody>
</table>


<blockquote><p>OCMock also provides a few handy macros for argument matching:</p></blockquote>

<table>
<thead>
<tr>
<th> Macro </th>
<th> Description </th>
</tr>
</thead>
<tbody>
<tr>
<td> OCMOCK_ANY()   </td>
<td> Equivalent to [OCMArg any] </td>
</tr>
<tr>
<td> OCMOCK_VALUE(value) </td>
<td> A quick way to match a non-object argument </td>
</tr>
<tr>
<td> CONSTRAINT(selector) </td>
<td> Validate with a given selector on self </td>
</tr>
<tr>
<td> CONSTRAINTV(selector,value) </td>
<td>     Validate with a given selector on self and an additional argument </td>
</tr>
</tbody>
</table>


<pre><code>id classMock = OCMClassMock([SomeClass class]);
OCMExpect([classMock someMethodWithArgument:[OCMArg isNotNil]]);

/* run code under test, which is assumed to call someMethod */

OCMVerifyAll(classMock)
</code></pre>

<p></br>
    3. 通知</p>

<pre><code>- (void)testSellSharesInStock {
  id mock = [OCMockObject observerMock];
  // OCMock adds a custom methods to NSNotificationCenter via a category
  [[NSNotificationCenter defaultCenter] addMockObserver:mock
                                                   name:AVStockSoldNotification
                                                 object:nil];

  [[mock expect] notificationWithName:AVStockSoldNotification object:[OCMArg any]];

  AVPortfolio *portfolio = [self createPortfolio]; // made-up factory method
  [portfolio sellShares:100 inStock:@"AAPL"];

  [mock verify];
}
</code></pre>

<ul>
<li>Specify the return values</li>
</ul>


<blockquote><p>If methods on your mocks need to return values, you have a variety of methods to call on the object returned by -expect or -stub.</p></blockquote>

<table>
<thead>
<tr>
<th> Method </th>
<th> Explanation </th>
</tr>
</thead>
<tbody>
<tr>
<td> -andReturn: </td>
<td> Return the given object </td>
</tr>
<tr>
<td> -andReturnValue: </td>
<td> Return a non-object value (wrapped in a NSValue) </td>
</tr>
<tr>
<td> -andThrow: </td>
<td> Throw the given exception </td>
</tr>
<tr>
<td> -andPost: </td>
<td>   Post the given notification </td>
</tr>
<tr>
<td> -andCall:onObject: </td>
<td> Call the selector on the given object </td>
</tr>
<tr>
<td> -andDo: </td>
<td> Invoke the given block (only on OS X 10.6 or iOS 4) </td>
</tr>
</tbody>
</table>


<h3>Execution &amp; Validation</h3>

<ul>
<li>Associate the mock object with the code under test</li>
<li>Execute the code under test</li>
<li>Validate that your assertions are correct</li>
</ul>


<pre><code>- (void)testSellSharesInStock {
  id quoteService = [[OCMockObject] mockForProtocol:@protocol(AVQuoteService)];
  [[[quoteService expect] andDo:^(NSInvocation *invocation) {
    // validate arguments, set return value on the invocation object
  }] priceForStock:@"AAPL"];

  // Associate the mock object with the code under test
  AVStockPortfolio *portfolio = [[AVStockPortfolio alloc] initWithService:quoteService];
  // Execute the code under test
  [portfolio sellShares:100 inStock:@"AAPL"];

  // Validate that your assertions are correct

  [quoteService verify];
}
</code></pre>

<p>Q:How to mocking singleton?
A:</p>

<pre><code>// we can replace it with a mock object
id mockManager = [OCMockObject mockForClass:[ArticleManager class]];
[ArticleManager setSharedInstance:mockManager];
// we can reset it so that it returns the actual ArticleManager
[ArticleManager setSharedInstance:nil];

// Objective-C Singleton Pattern Updated For Testability
@implementation ArticleManager

static ArticleManager *_sharedInstance = nil;
static dispatch_once_t once_token = 0;

+(instancetype)sharedInstance {
    dispatch_once(&amp;once_token, ^{
        if (_sharedInstance == nil) {
            _sharedInstance = [[ArticleManager alloc] init];
        }
    });
    return _sharedInstance;
}

+(void)setSharedInstance:(ArticleManager *)instance {
    once_token = 0; // resets the once_token so dispatch_once will run again
    _sharedInstance = instance;
}

@end
</code></pre>

<p>Reference:<a href="http://twobitlabs.com/2013/01/objective-c-singleton-pattern-unit-testing/">Objective-C Singleton Pattern Updated For Testability</a></p>

<h2>Reference:</h2>

<p><a href="http://ocmock.org">OCMock</a><br/>
<a href="http://www.archive.alexvollmer.com/posts/2010/06/28/making-fun-of-things-with-ocmock/">Making Fun of Things with OCMock</a><br/>
<a href="http://hackazach.net/code/2014/03/03/effective-testing-with-ocmock/">OCMock Test Origami</a><br/>
<a href="http://engineering.aweber.com/improving-ios-unit-tests-with-ocmock/">IMPROVING IOS UNIT TESTS WITH OCMOCK</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS App 开发问题汇总（五）]]></title>
    <link href="http://DamianSheldon.github.io/blog/ios-development-problems-part-5.html"/>
    <updated>2016-01-08T21:32:22+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/ios-development-problems-part-5</id>
    <content type="html"><![CDATA[<h3>1.On iOS 7 and later, how do I take a snapshot of my view and save the result in a UIImage?</h3>

<p>Solution:</p>

<pre><code>- (UIImage *)snapshot:(UIView *)view
{
    UIGraphicsBeginImageContextWithOptions(view.bounds.size, YES, 0);
    [view drawViewHierarchyInRect:view.bounds afterScreenUpdates:YES];
    UIImage *image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return image;
}
</code></pre>

<p>Reference:<a href="https://developer.apple.com/library/ios/qa/qa1817/_index.html">https://developer.apple.com/library/ios/qa/qa1817/_index.html</a></p>

<h3>2.How to present a view controller on iOS7 without the status bar overlapping?</h3>

<p>Solution:The easiest workaround I&rsquo;ve found is to wrap the view controller you want to present inside a navigation controller, and then present that navigation controller.</p>

<pre><code>MyViewController *vc = [MyViewController new];
UINavigationController *nvc = [[UINavigationController alloc] 
    initWithRootViewController:vc];
[self presentViewController:nvc animated:YES completion:nil];
</code></pre>

<h3>3.代码创建 UITableView 时如何使用各种系统样式的 UITableViewCell?</h3>

<p>Solution:</p>

<pre><code>- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *sCellID = @"CellID";

    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:sCellID];
    if (!cell) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:sCellID];
    }
    // Configure the cell...

    return cell;
}
</code></pre>

<!-- more -->


<h3>4.Settings bundle not showing up in iPhone settings</h3>

<p>Solution:iOS 9.0.x - 9.2 Settings App Bug, Using the App Switch UI (double-press Home button) to kill the Settings App.</p>

<p>Reference:<a href="http://stackoverflow.com/questions/2683793/settings-bundle-not-showing-up-in-iphone-settings">http://stackoverflow.com/questions/2683793/settings-bundle-not-showing-up-in-iphone-settings</a></p>

<h3>5.单元测试的 Target 在测试导航栏里是灰色的不能点击测试。</h3>

<p>Solution: Edit Scheme &hellip; > Test > + > Select your test target.</p>

<h3>6.How to change UITableViewCell Image to Circle in UITableView</h3>

<p>Solution:</p>

<pre><code>// Subclass UITableViewCell override layoutSubviews method

- (void)layoutSubviews
{
    [super layoutSubviews];

    self.imageView.layer.cornerRadius = CGRectGetHeight(self.imageView.frame) * 0.5;
    self.imageView.layer.masksToBounds = YES;
}
</code></pre>

<p>Reference:<a href="http://stackoverflow.com/questions/23350728/how-to-change-uitableviewcell-image-to-circle-in-uitableview">http://stackoverflow.com/questions/23350728/how-to-change-uitableviewcell-image-to-circle-in-uitableview</a></p>

<h3>7.How to downgrading Cocoapods?</h3>

<p>A:</p>

<pre><code>// First you can figure out which version of Cocoapods you are on with the command:
$ pod --version

// You can also see all the version of Cocoapods you have installed with this command:
$ sudo gem list cocoapods

// Next uninstall Cocoapods. If you have multiple version, you will have the choice of uninstalling all or a specific version.
$ sudo gem uninstall cocoapods

// Finally you can install the specific version with this command:
$ sudo gem install cocoapods -v 0.39.0
</code></pre>

<p>Reference:<a href="https://diego.org/2015/09/24/downgrading-cocoapods/">https://diego.org/2015/09/24/downgrading-cocoapods/</a></p>

<h3>8.How to get UISearchDisplayController to search only after search button is pressed？</h3>

<p>A:Setup a delegate for the search bar and implement the searchBarSearchButtonClicked: method. Do your searching from that method. Just return NO from the shouldReloadTableForSearchString method.</p>

<p>Reference:<a href="http://stackoverflow.com/questions/18563529/how-to-get-uisearchdisplaycontroller-to-search-only-after-search-button-is-press">http://stackoverflow.com/questions/18563529/how-to-get-uisearchdisplaycontroller-to-search-only-after-search-button-is-press</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Wireshark 抓 iPhone 网络请求的数据包]]></title>
    <link href="http://DamianSheldon.github.io/blog/capturing-iphone-traffic-on-wireshark.html"/>
    <updated>2016-01-04T14:43:00+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/capturing-iphone-traffic-on-wireshark</id>
    <content type="html"><![CDATA[<p>开发过程中经常可能遇到网络问题，这时候我们需要抓包来定位问题所在。那么如何用 Wireshark 抓取 iPhone 真机网络请求的数据包呢？</p>

<blockquote><p>iOS does not support packet tracing directly. However, if you&rsquo;re developing for iOS you can take a packet trace of your app in a number of different ways:</p>

<p>If the problem you&rsquo;re trying to debug occurs on Wi-Fi, you can put your iOS device on a test Wi-Fi network. See Wi-Fi Capture for details.<br/>
If your app uses HTTP, you can configure your iOS device to use a debugging HTTP proxy (such as Charles HTTP Proxy).<br/>
In iOS 5 and later you can use the remote virtual interface facility.</p></blockquote>

<!-- more -->


<p>这里我使用的是第三种方法：remote virtual interface。</p>

<p>iOS 5 added a remote virtual interface (RVI) facility that lets you use OS X packet trace programs to capture traces from an iOS device. The basic strategy is:</p>

<ol>
<li>Connect your iOS device to your Mac via USB.</li>
<li>Set up an RVI for that device. This creates a virtual network interface on your Mac that represents the iOS device&rsquo;s networking stack.</li>
<li>Run your OS X packet trace program, and point it at the RVI created in the previous step.</li>
</ol>


<pre><code>$ # First get the current list of interfaces.
$ ifconfig -l
lo0 gif0 stf0 en0 en1 p2p0 fw0 ppp0 utun0
$ # Get connected device's UDID follow: Xcode &gt; Window &gt; Devices &gt; Select connected device &gt; identifier
$ # Then run the tool with the UDID of the device.
$ rvictl -s 74bd53c647548234ddcef0ee3abee616005051ed

Starting device 74bd53c647548234ddcef0ee3abee616005051ed [SUCCEEDED]

$ # Get the list of interfaces again, and you can see the new virtual
$ # network interface, rvi0, added by the previous command.
$ ifconfig -l
lo0 gif0 stf0 en0 en1 p2p0 fw0 ppp0 utun0 rvi0
</code></pre>

<p>打开 Wireshark, 选择 rvi0 作为待抓包的接口。</p>

<h1>Reference</h1>

<p><a href="https://developer.apple.com/library/mac/qa/qa1176/_index.html">Getting a Packet Trace</a><br/>
<a href="http://stackoverflow.com/questions/9555403/capturing-mobile-phone-traffic-on-wireshark">Capturing mobile phone traffic on wireshark</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web Development Notes Part One]]></title>
    <link href="http://DamianSheldon.github.io/blog/web-development-notes-part-one.html"/>
    <updated>2015-12-12T22:27:22+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/web-development-notes-part-one</id>
    <content type="html"><![CDATA[<h3>1. What is href=“#” and why is it used?</h3>

<p>Solution:A hashtag - # within a hyperlink specifies an html element id to which the window should be scrolled.<br/>
href=&ldquo;#some-id&rdquo; would scroll to an element on the current page such as <div id="some-id">.</p>

<p>href=&ldquo;//site.com/#some-id&rdquo; would go to site.com and scroll to the id on that page.</p>

<p>href=&ldquo;#&rdquo; doesn&rsquo;t specify an id name, but does have a corresponding location - the top of the page. Clicking an anchor with href=&ldquo;#&rdquo; will move the scroll position to the top.</p>

<p>Reference:<a href="http://stackoverflow.com/questions/4855168/what-is-href-and-why-is-it-used">http://stackoverflow.com/questions/4855168/what-is-href-and-why-is-it-used</a></p>

<h3>2. How to debug your web page, technology stack is LAMP.</h3>

<p>Solution:View log, figure out what cause problems.</p>

<pre><code>$ tail -f /var/log/apache2/error_log
[Fri Dec 11 21:34:57.003657 2015] [:error] [pid 17465] [client ::1:50505] PHP Parse error:  parse error, expecting `','' or `';'' in /Users/dongmeiliang/Sites/knowledgeispower/includes/header.html on line 7
[Fri Dec 11 21:34:57.003701 2015] [:error] [pid 17465] [client ::1:50505] PHP Stack trace:
[Fri Dec 11 21:34:57.003723 2015] [:error] [pid 17465] [client ::1:50505] PHP   1. {main}() /Users/dongmeiliang/Sites/knowledgeispower/index.php:0
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 项目持续集成和部署笔记]]></title>
    <link href="http://DamianSheldon.github.io/blog/continuous-integration-and-deployment-for-ios-projects.html"/>
    <updated>2015-11-04T09:38:13+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/continuous-integration-and-deployment-for-ios-projects</id>
    <content type="html"><![CDATA[<p>本文是我做 iOS 项目持续集成和部署的笔记。</p>

<h3>安装工具</h3>

<ol>
<li><p><a href="http://jenkins-ci.org/">jenkins</a>;</p>

<pre><code class="`"> $ brew update &amp;&amp; brew install jenkins
</code></pre></li>
<li><p><a href="https://github.com/fastlane/fastlane">fastlane</a>;</p>

<pre><code class="`"> $ sudo gem install fastlane --verbose
</code></pre></li>
<li><p><a href="https://github.com/FIRHQ/fir-cli/blob/master/README.md">fir-cli</a>;</p>

<pre><code class="`"> $ sudo gem install fir-cli
</code></pre></li>
</ol>


<!-- more -->


<h3>fastlane 自动构建</h3>

<ul>
<li>cd [your_project_folder]</li>
<li>fastlane init</li>
<li>Follow the setup assistant, which will set up fastlane for you</li>
<li>Edit Fastfile</li>
</ul>


<pre><code>fastlane_version "1.25.0"

default_platform :ios


platform :ios do
  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    #cocoapods

    increment_build_number

    gym(scheme: "srsApp") # Build your app - more options available

    # xctool # run the tests of your app
  end

  desc "Runs all the tests"
  lane :test do
    snapshot
  end

  desc "Submit a new Beta Build to fir"
  desc "This will also make sure the profile is up to date"
  lane :fir do
    #snapshot
    sh "sigh --team_id your_team_id"
    #deliver(beta: true)

    #"ipa distribute:pgyer -u USER_KEY -a APP_KEY" # 上传到蒲公英

    #"ipa distribute:fir -u USER_TOKEN -a APP_ID" # 上传到fir.im

    # sh"ipa distribute:fir -u USER_KEY -a APP_KEY"
    # You can also use other beta testing services here
    sh "fir p ../srsApp.ipa -T USER_TOKEN"
  end

  desc "Submit a new Beta Build to pgyer "
  desc "This will also make sure the profile is up to date"
  lane :pgyer do
    #snapshot
    sh "sigh --team_id your_team_id"
    #deliver(beta: true)

    # You can also use other beta testing services here
    sh "curl -F \"file=@/Users/dongmeiliang/Documents/HJKApp/srsApp/srsApp.ipa\" -F \"uKey=USER_TOKEN\" -F \"_api_key=APP_KEY\" http://www.pgyer.com/apiv1/app/upload"
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

     slack(
       message: "Successfully deployed new App Update."
     )
  end

  error do |lane, exception|
     slack(
       message: exception.message,
       success: false
     )
  end
end
</code></pre>

<p>使用 <code>fastlane fir</code>测试能否正常构建。</p>

<h3>自动测试</h3>

<p>可以利用 xcodebuild 命令来实现自动测试。
<code>
$ xcodebuild -project UI\ Testing\ In\ Xcode.xcodeproj -scheme UI\ Testing\ In\ Xcode -destination 'platform=iOS Simulator,name=iPhone 6s,OS=9.1' test
</code></p>

<h3>jenkins 持续集成</h3>

<ol>
<li><p>创建自动构建 job</p>

<ul>
<li>Open <a href="http://localhost:8080">http://localhost:8080</a> with safari</li>
<li><p>Install plugins</p>

<ul>
<li>HTML Publisher Plugin</li>
<li>AnsiColor Plugin</li>
<li>Rebuild Plugin</li>
<li>GIT Plugin</li>
</ul>
</li>
<li><p>Create job > input item name > Freestyle project > OK</p></li>
<li><p>Configuration
  Source Code Management
  Git
  Repository URL /Users/dongmeiliang/Documents/HJKApp
  Branches to build */test
  Add build step > Execute shell</p>

<pre><code class="``">  #!/bin/bash   
  source ~/.bash_profile  
  cd srsApp/  
  fastlane  fir  
</code></pre></li>
<li>Save > build</li>
</ul>
</li>
<li><p>创建自动测试 job</p>

<p> Add build step > Execute shell</p>

<pre><code class="`"> #!/bin/bash   
 source ~/.bash_profile  
 $ xcodebuild -project UI\ Testing\ In\ Xcode.xcodeproj -scheme UI\ Testing\ In\ Xcode -destination 'platform=iOS Simulator,name=iPhone 6s,OS=9.1' test
</code></pre></li>
</ol>


<h2>Reference</h2>

<p>Testing with Xcode
<a href="https://github.com/fastlane/fastlane">fastlane</a><br/>
<a href="https://github.com/fastlane/fastlane/blob/master/docs/Jenkins.md">Jenkins Integration</a><br/>
<a href="http://blog.csdn.net/colorapp/article/details/47007329">iOS可持续化集成: Jenkins + bundler + cocoapods + shenzhen + fastlane + pgyer</a></p>
]]></content>
  </entry>
  
</feed>
