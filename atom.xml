<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hello World]]></title>
  <link href="http://DamianSheldon.github.io/atom.xml" rel="self"/>
  <link href="http://DamianSheldon.github.io/"/>
  <updated>2018-09-13T09:31:56+08:00</updated>
  <id>http://DamianSheldon.github.io/</id>
  <author>
    <name><![CDATA[Sheldon]]></name>
    <email><![CDATA[dongmeilianghy@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Web 面试题汇总(二)]]></title>
    <link href="http://DamianSheldon.github.io/blog/web-technical-interview-part-2.html"/>
    <updated>2018-09-05T15:52:44+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/web-technical-interview-part-2</id>
    <content type="html"><![CDATA[<h3>1.介绍一下标准的CSS的盒子模型？低版本IE的盒子模型有什么不同的？</h3>

<p>A:每个元素被表示为一个矩形的方框，框的内容、内边距、边界和外边距像洋葱的膜那样，一层包着一层构建起来。</p>

<p>低版本IE的盒子模型的宽度包括框的内容、内边距和边界。</p>

<h3>2.CSS选择符有哪些？哪些属性可以继承？</h3>

<p>A:</p>

<ul>
<li><em>简单选择器</em>（Simple selectors）：通过元素类型、class 或 id 匹配一个或多个元素。</li>
<li><em>属性选择器</em>（Attribute selectors）：通过 属性 / 属性值 匹配一个或多个元素。</li>
<li><em>伪类</em>（Pseudo-classes）：匹配处于确定状态的一个或多个元素，比如被鼠标指针悬停的元素，或当前被选中或未选中的复选框，或元素是DOM树中一父节点的第一个子节点。</li>
<li><em>伪元素</em>（Pseudo-elements）:匹配处于相关的确定位置的一个或多个元素，例如每个段落的第一个字，或者某个元素之前生成的内容。 </li>
<li><em>组合器</em>（Combinators）：这里不仅仅是选择器本身，还有以有效的方式组合两个或更多的选择器用于非常特定的选择的方法。例如，你可以只选择divs的直系子节点的段落，或者直接跟在headings后面的段落。</li>
<li><em>多重选择器</em>（Multiple selectors）：这些也不是单独的选择器；这个思路是将以逗号分隔开的多个选择器放在一个CSS规则下面， 以将一组声明应用于由这些选择器选择的所有元素。</li>
</ul>


<p>哪些属性可以继承？</p>

<ul>
<li>所有元素可继承：visibility和cursor。</li>
<li>内联元素可继承：letter-spacing、word-spacing、white-space、line-height、color、font、font-family、font-size、font-style、font-variant、font-weight、text-decoration、text-transform、direction。</li>
<li>终端块状元素可继承：text-indent和text-align。</li>
<li>列表元素可继承：list-style、list-style-type、list-style-position、list-style-image。</li>
<li>表格元素可继承：border-collapse。</li>
</ul>


<h3>3.CSS优先级算法如何计算？</h3>

<p>A:CSS根据规则的重要性、专用性和源代码次序来计算优先级。</p>

<p>重要性和源代码次序相对简单，专用性是用四种不同的值（或组件）来衡量的，它们可以被认为是千位，百位，十位和个位:</p>

<ol>
<li>千位：如果声明是在style 属性中该列加1分（这样的声明没有选择器，所以它们的专用性总是1000。）否则为0。</li>
<li>百位：在整个选择器中每包含一个ID选择器就在该列中加1分。</li>
<li>十位：在整个选择器中每包含一个类选择器、属性选择器、或者伪类就在该列中加1分。</li>
<li>个位：在整个选择器中每包含一个元素选择器或伪元素就在该列中加1分。</li>
</ol>


<!--more-->


<h3>4.如何居中div？</h3>

<p>A:</p>

<ul>
<li>水平居中</li>
<li>水平垂直居中</li>
</ul>


<h4>水平居中</h4>

<p>给div设置一个宽度，然后添加margin:0 auto属性。</p>

<figure class='code'><figcaption><span>html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>div{
</span><span class='line'>      width:200px;
</span><span class='line'>      margin:0 auto;
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<h4>水平垂直居中</h4>

<ul>
<li>容器的宽高确定</li>
</ul>


<figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 确定容器的宽高 宽500 高 300 的层
</span><span class='line'>  // 设置层的外边距
</span><span class='line'>  
</span><span class='line'>  div {
</span><span class='line'>      position: relative;     /* 相对定位或绝对定位均可 */
</span><span class='line'>      width:500px;
</span><span class='line'>      height:300px;
</span><span class='line'>      top: 50%;
</span><span class='line'>      left: 50%;
</span><span class='line'>      margin: -150px 0 0 -250px;          /* 外边距为自身宽高的一半 */
</span><span class='line'>      background-color: pink;         /* 方便看效果 */
</span><span class='line'>   }</span></code></pre></td></tr></table></div></figure>


<ul>
<li>容器的宽高未知</li>
</ul>


<figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 未知容器的宽高，利用 `transform` 属性
</span><span class='line'>  
</span><span class='line'>  div {
</span><span class='line'>      position: absolute;     /* 相对定位或绝对定位均可 */
</span><span class='line'>      width:500px;
</span><span class='line'>      height:300px;
</span><span class='line'>      top: 50%;
</span><span class='line'>      left: 50%;
</span><span class='line'>      transform: translate(-50%, -50%);
</span><span class='line'>      background-color: pink;         /* 方便看效果 */
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<ul>
<li>利用 flex 布局</li>
</ul>


<figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 利用 flex 布局
</span><span class='line'>   // 实际使用时应考虑兼容性
</span><span class='line'>  
</span><span class='line'>  .container {
</span><span class='line'>      display: flex;
</span><span class='line'>      align-items: center;            /* 垂直居中 */
</span><span class='line'>      justify-content: center;        /* 水平居中 */
</span><span class='line'>  
</span><span class='line'>   }
</span><span class='line'>  .container div {
</span><span class='line'>      width: 100px;
</span><span class='line'>      height: 100px;
</span><span class='line'>      background-color: pink;         /* 方便看效果 */
</span><span class='line'>   }</span></code></pre></td></tr></table></div></figure>


<h3>5.display有哪些值？说明他们的作用。</h3>

<p>A:display 所有可能的值太多了，这里说下常见的:</p>

<table>
<thead>
<tr>
<th style="text-align:left;"> display </th>
<th style="text-align:left;"> 作用 </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> none </td>
<td style="text-align:left;"> 元素不显示，并从文档流中移除。 </td>
</tr>
<tr>
<td style="text-align:left;"> inline </td>
<td style="text-align:left;"> 行内元素类型。默认宽度为内容宽度，不可设置宽高，同行显示。 </td>
</tr>
<tr>
<td style="text-align:left;"> inline-block </td>
<td style="text-align:left;"> 默认宽度为内容宽度，可以设置宽高，同行显示。 </td>
</tr>
<tr>
<td style="text-align:left;"> block </td>
<td style="text-align:left;"> 块类型。默认宽度为父元素宽度，可设置宽高，换行显示。 </td>
</tr>
<tr>
<td style="text-align:left;"> list-item </td>
<td style="text-align:left;"> 象块类型元素一样显示，并添加样式列表标记。 </td>
</tr>
<tr>
<td style="text-align:left;"> table </td>
<td style="text-align:left;"> 元素会作为块级表格来显示。 </td>
</tr>
</tbody>
</table>


<h3>6.position的值? relative和absolute定位原点是？</h3>

<p>A: position  = static | relative | absolute | sticky | fixed</p>

<p>relative: The element is positioned according to the normal flow of the document, and then offset relative to itself based on the values of top, right, bottom, and left.</p>

<p>absolute: The element is removed from the normal document flow, and no space is created for the element in the page layout. It is positioned relative to its closest positioned ancestor, if any; otherwise, it is placed relative to the initial containing block. Its final position is determined by the values of top, right, bottom, and left.</p>

<h3>7.请解释一下CSS3的Flexbox（弹性盒布局模型），以及适用场景？</h3>

<p>A:Flexbox is a one-dimensional layout method for laying out items in rows or columns. Items flex to fill additional space and shrink to fit into smaller spaces. </p>

<p>适用场景:</p>

<ul>
<li>Vertically centering a block of content inside its parent.</li>
<li>Making all the children of a container take up an equal amount of the available width/height, regardless of how much width/height is available.</li>
<li>Making all columns in a multiple column layout adopt the same height even if they contain a different amount of content.</li>
</ul>


<h3>8.用纯CSS创建一个三角形的原理是什么？</h3>

<p>A:采用的是均分原理。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.triangle{  
</span><span class='line'>       width:0;  
</span><span class='line'>       height:0;  
</span><span class='line'>       margin:0 auto;  
</span><span class='line'>       border:6px solid transparent;  
</span><span class='line'>       border-top: 6px solid red;  
</span><span class='line'>   }
</span><span class='line'>     
</span><span class='line'>  // 第二种写法：
</span><span class='line'>  
</span><span class='line'>  .triangle{  
</span><span class='line'>       width:0;  
</span><span class='line'>       height:0;  
</span><span class='line'>       margin:0 auto;  
</span><span class='line'>       border-width:6px;
</span><span class='line'>       border-color:red transparent transparent transparent;
</span><span class='line'>       border-style:solid dashed dashed dashed;//为了兼容IE6，把没有的边框都设置为虚线
</span><span class='line'>   }</span></code></pre></td></tr></table></div></figure>


<h3>9.一个满屏 品 字布局 如何设计?</h3>

<p>A:方式一：上面的 div 宽100%，下面的两个 div 分别宽50%，然后用 float 或者 inline 使其不换行即可；方式二：上面的 div 宽100%，内含一个 div 水平居中，下面的div，内含两个 div,使用 absolute 定位。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 方式一
</span><span class='line'>  &lt;!DOCTYPE html>
</span><span class='line'>  &lt;html>
</span><span class='line'>  &lt;head>
</span><span class='line'>      &lt;meta charset="utf-8">
</span><span class='line'>      &lt;title>满屏品字布局&lt;/title>
</span><span class='line'>      &lt;style type="text/css">
</span><span class='line'>          *{
</span><span class='line'>              margin: 0;
</span><span class='line'>              padding: 0;
</span><span class='line'>          }
</span><span class='line'>  
</span><span class='line'>          html,body{
</span><span class='line'>              height: 100%;/*此设置非常关键，因为默认的body，HTML高度为0，所以后面设置的div的高度无法用百分比显示*/
</span><span class='line'>          }       
</span><span class='line'>  
</span><span class='line'>          .header{
</span><span class='line'>              height:50%; /*此步结合html,body高度为100%，解决元素相对窗口的定位问题*/
</span><span class='line'>              width: 50%;     
</span><span class='line'>              background: #ccc;           
</span><span class='line'>              margin:0 auto;
</span><span class='line'>          }
</span><span class='line'>  
</span><span class='line'>          .main{
</span><span class='line'>              width: 100%;
</span><span class='line'>              height: 50%;
</span><span class='line'>              background: #ddd;
</span><span class='line'>          }
</span><span class='line'>  
</span><span class='line'>          .main .left,.main .right{
</span><span class='line'>              float: left;/*采用float方式，对元素进行左右定位*/
</span><span class='line'>              width:50%;/*此步解决元素相对窗口的定位问题*/
</span><span class='line'>              height:100%;/*此步解决元素相对窗口的定位问题*/
</span><span class='line'>              background: yellow;
</span><span class='line'>          }
</span><span class='line'>  
</span><span class='line'>          .main .right{
</span><span class='line'>              background: green;
</span><span class='line'>          }
</span><span class='line'>      &lt;/style>
</span><span class='line'>  &lt;/head>
</span><span class='line'>  &lt;body>
</span><span class='line'>  &lt;div class="header">&lt;/div>
</span><span class='line'>  &lt;div class="main">
</span><span class='line'>      &lt;div class="left">&lt;/div>
</span><span class='line'>      &lt;div class="right">&lt;/div>
</span><span class='line'>  &lt;/div>
</span><span class='line'>  &lt;/body>
</span><span class='line'>  &lt;/html></span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!DOCTYPE html>
</span><span class='line'>  &lt;html>
</span><span class='line'>  &lt;head>
</span><span class='line'>  &lt;meta charset="utf-8">
</span><span class='line'>      &lt;title>满屏品字布局&lt;/title>
</span><span class='line'>      &lt;style type="text/css">
</span><span class='line'>          body{  
</span><span class='line'>            height: 1200px;  
</span><span class='line'>        }  
</span><span class='line'>        .main {  
</span><span class='line'>            position: fixed;  /*此步解决元素相对窗口的定位问题*/
</span><span class='line'>            left: 0;  
</span><span class='line'>            top: 0;  
</span><span class='line'>            height: 100%;  
</span><span class='line'>            width: 100%;  
</span><span class='line'>        }  
</span><span class='line'>        .wrapper-up {  
</span><span class='line'>            height: 50%;  
</span><span class='line'>        }  
</span><span class='line'>  
</span><span class='line'>        .wrapper-down {  
</span><span class='line'>            height: 50%;  
</span><span class='line'>            position: relative;  
</span><span class='line'>        }  
</span><span class='line'>        .div-square-up {  
</span><span class='line'>            width: 50%;  
</span><span class='line'>            margin: 0 auto;  
</span><span class='line'>            border: 2px solid red;  
</span><span class='line'>            height: 96%;  
</span><span class='line'>            box-sizing: border-box;  
</span><span class='line'>        }  
</span><span class='line'>  
</span><span class='line'>        .div-square-left {  
</span><span class='line'>            position: absolute;  /*此步解决元素左右定位问题*/
</span><span class='line'>            left: 0;  
</span><span class='line'>            width: 48%;  
</span><span class='line'>            height: 100%;  
</span><span class='line'>            box-sizing: border-box;  
</span><span class='line'>            border: 2px solid red;  
</span><span class='line'>        }  
</span><span class='line'>  
</span><span class='line'>        .div-square-right {  
</span><span class='line'>            position: absolute;   /*此步解决元素左右定位问题*/
</span><span class='line'>            right: 0;  
</span><span class='line'>            width: 48%;  
</span><span class='line'>            height: 100%;  
</span><span class='line'>            border: 2px solid red;  
</span><span class='line'>            box-sizing: border-box;  
</span><span class='line'>        }  
</span><span class='line'>      &lt;/style>
</span><span class='line'>  &lt;/head>
</span><span class='line'>  &lt;body>
</span><span class='line'>      &lt;div class="main">  
</span><span class='line'>           &lt;div class="wrapper-up">  
</span><span class='line'>             &lt;div class="div-square-up">&lt;/div>  
</span><span class='line'>           &lt;/div>  
</span><span class='line'>           &lt;div class="wrapper-down">  
</span><span class='line'>             &lt;div class="div-square-left">&lt;/div>  
</span><span class='line'>             &lt;div class="div-square-right">&lt;/div>  
</span><span class='line'>           &lt;/div>  
</span><span class='line'>      &lt;/div> 
</span><span class='line'>  &lt;/body>
</span><span class='line'>  &lt;/html></span></code></pre></td></tr></table></div></figure>


<h3>10.css多列等高如何实现？</h3>

<p>A:利用padding-bottom|margin-bottom正负值相抵；
设置父容器设置超出隐藏（overflow:hidden），这样子父容器的高度就还是它里面的列没有设定padding-bottom时的高度，当它里面的任 一列高度增加了，则父容器的高度被撑到里面最高那列的高度，其他比这列矮的列会用它们的padding-bottom补偿这部分高度差。</p>

<h3>11.经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么，常用hack的技巧？</h3>

<p>A:
经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么?</p>

<ul>
<li>png24位的图片在iE6浏览器上出现背景，解决方案是做成PNG8.</li>
<li>浏览器默认的margin和padding不同。解决方案是加一个全局的<code>*{margin:0;padding:0;}</code>来统一。</li>
<li>IE6双边距bug:块属性标签float后，又有横行的margin情况下，在ie6显示margin比设置的大。浮动ie产生的双倍距离 <code>#box{ float:left; width:10px; margin:0 0 0 100px;}</code>，这种情况之下IE会产生20px的距离，解决方案是在float的标签样式控制中加入 ——<code>_display:inline;</code>将其转化为行内属性。利用 <code>_</code> 这个符号只有ie6会识别的渐进识别的方式，从总体中逐渐排除局部。</li>
<li>IE下,可以使用获取常规属性的方法来获取自定义属性,也可以使用getAttribute()获取自定义属性;Firefox下,只能使用getAttribute()获取自定义属性。解决方法:统一通过getAttribute()获取自定义属性。</li>
<li>IE下,even对象有x,y属性,但是没有pageX,pageY属性;Firefox下,event对象有pageX,pageY属性,但是没有x,y属性。解决方法：（条件注释）缺点是在IE浏览器下可能会增加额外的HTTP请求数。</li>
<li>超链接访问过后hover样式就不出现了 被点击访问过的超链接样式不在具有hover和active了解决方法是改变CSS属性的排列顺序:L-V-H-A :  <code>a:link {} a:visited {} a:hover {} a:active {}</code></li>
</ul>


<p>常用hack的技巧？</p>

<p>由于不同厂商的流览器或某浏览器的不同版本（如IE6-IE11,Firefox/Safari/Opera/Chrome等），对CSS的支持、解析不一样，导致在不同浏览器的环境中呈现出不一致的页面展现效果。这时，我们为了获得统一的页面效果，就需要针对不同的浏览器或不同版本写特定的CSS样式，我们把这个针对不同的浏览器/不同版本写相应的CSS code的过程，叫做CSS hack!</p>

<p>CSS Hack大致有3种表现形式：CSS属性前缀法、选择器前缀法以及IE条件注释法（即HTML头部引用if IE）。</p>

<ul>
<li>属性前缀法(即类内部Hack)：例如 IE6能识别下划线和星号，IE7能识别星号，但不能识别下划线，IE6~IE10都认识"\9"，但firefox前述三个都不能认识。</li>
<li>选择器前缀法(即选择器Hack)：例如 IE6能识别<code>*html .class{}</code>，IE7能识别<code>*+html .class{}</code>或者<code>*:first-child+html .class{}</code>。</li>
<li>IE条件注释法(即HTML条件注释Hack)(注：IE10+已经不再支持条件注释)： 这类Hack不仅对CSS生效，对写在判断语句里面的所有代码都会生效。</li>
</ul>


<figure class='code'><figcaption><span>css</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.bb{
</span><span class='line'>      background-color:red;/*所有识别*/
</span><span class='line'>      background-color:#00deff\9; /*IE6、7、8识别*/
</span><span class='line'>      +background-color:#a200ff;/*IE6、7识别*/
</span><span class='line'>      _background-color:#1e0bd1;/*IE6识别*/
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<h3>12.li与li之间有看不见的空白间隔是什么原因引起的？有什么解决办法？</h3>

<p>A:浏览器的默认行为是把inline元素间的空白字符（空格换行tab）渲染成一个空格，也就是我们上面的代码<code>&lt;li&gt;</code>换行后会产生换行字符，而它会变成一个空格，当然空格就占用一个字符的宽度。</p>

<p>解决办法:可以将 ul 的字符间隔消除，将 li 内的字符间隔设为默认。</p>

<figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.wrap ul{letter-spacing: -5px;}
</span><span class='line'>  .wrap ul li{letter-spacing: normal;}</span></code></pre></td></tr></table></div></figure>


<h3>13.为什么要初始化CSS样式。</h3>

<p>A:因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面显示差异。</p>

<h3>14.absolute的containing block(容器块)计算方式跟正常流有什么不同？</h3>

<p>A:</p>

<p>The process for identifying the containing block depends entirely on the value of the element's position property:</p>

<ol>
<li>If the position property is static or relative, the containing block is formed by the edge of the content box of the nearest ancestor element that is a block container(such as an inline-block, block, or list-item element) or which establishes a formatting context (such as a table container, flex container, grid container, or the block container itself).</li>
<li>If the position property is absolute, the containing block is formed by the edge of the padding box of the nearest ancestor element that has a position value other than static (fixed, absolute, relative, or sticky).</li>
<li>If the position property is fixed, the containing block is established by the viewport (in the case of continuous media) or the page area (in the case of paged media).</li>
<li><p>If the position property is absolute or fixed, the containing block may also be formed by the edge of the padding box of the nearest ancestor element that has the following:</p>

<ol>
<li>A transform or perspective value other than none</li>
<li>A will-change value of transform or perspective</li>
<li>A filter  value other than none or a will-change value of filter (only works on Firefox).</li>
</ol>
</li>
</ol>


<p>Reference:<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block">Layout and the containing block</a></p>

<h3>15.CSS里的visibility属性有个collapse属性值是干嘛用的？在不同浏览器下有什么区别？</h3>

<p>A: 对于普通元素 visibility:collapse; 会将元素完全隐藏，不占据页面布局空间，与display:none;表现相同。如果目标元素为table，visibility:collapse;将table隐藏，但是会占据页面布局空间。</p>

<p>仅在Firefox下起作用,IE会显示元素,Chrome会将元素隐藏,但是占据空间.</p>

<h3>16.position跟display、margin collapse、overflow、float这些特性相互叠加后会怎么样？</h3>

<p>A:</p>

<ul>
<li>如果元素的display为none，那么元素不被渲染，position，float不起作用；</li>
<li>如果元素拥有<code>position:absolute;</code>或者<code>position:fixed;</code>属性那么元素将为绝对定位，float不起作用；</li>
<li>如果元素float属性不是none，元素会脱离文档流，根据float属性值来显示，有浮动；</li>
<li>绝对定位、inline-block属性的元素，margin不会和垂直方向上的其他元素margin折叠；</li>
</ul>


<h3>17.对BFC规范(块级格式化上下文：block formatting context)的理解？</h3>

<p>A:块格式化上下文（Block Formatting Context，BFC） 是Web页面的可视化CSS渲染的一部分，是布局过程中生成块级盒子的区域，也是浮动元素与其他元素的交互限定区域。</p>

<p>块格式化上下文包含创建它的元素内部的所有内容。块格式化上下文对浮动定位与清除浮动都很重要。浮动定位和清除浮动时只会应用于同一个BFC内的元素。浮动不会影响其它BFC中元素的布局，而清除浮动只能清除同一BFC中在它前面的元素的浮动。外边距折叠（Margin collapsing）也只会发生在属于同一BFC的块级元素之间。</p>

<p>Reference:<a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context">块格式化上下文</a></p>

<h3>18.css定义的权重</h3>

<p>A:</p>

<ol>
<li>Thousands: Score one in this column if the declaration is inside a style attribute (such declarations don&rsquo;t have selectors, so their specificity is always simply 1000.) Otherwise 0.</li>
<li>Hundreds: Score one in this column for each ID selector contained inside the overall selector.</li>
<li>Tens: Score one in this column for each class selector, attribute selector, or pseudo-class contained inside the overall selector.</li>
<li>Ones: Score one in this column for each element selector or pseudo-element contained inside the overall selector.</li>
</ol>


<h3>19.请解释一下为什么需要清除浮动？清除浮动的方式?</h3>

<p>A:清除浮动是为了清除使用浮动元素产生的影响。浮动的元素，高度会塌陷，而高度的塌陷使我们页面后面的布局不能正常显示。</p>

<p>清除浮动的方式:</p>

<ul>
<li>The clearfix hack</li>
<li>Using overflow</li>
<li>display: flow-root</li>
</ul>


<p>Reference:<a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Floats">Floats</a></p>

<h3>20.什么是外边距合并？</h3>

<p>A:外边距合并指的是，当两个垂直外边距相遇时，它们将形成一个外边距。合并后的外边距的高度等于两个发生合并的外边距的高度中的较大者。</p>

<h3>21.zoom:1的清除浮动原理?</h3>

<p>A:当设置了zoom的值之后，所设置的元素就会就会扩大或者缩小，高度宽度就会重新计算了，这里一旦改变zoom值时其实也会发生重新渲染，运用这个原理，也就解决了ie下子元素浮动时候父元素不随着自动扩大的问题。</p>

<h3>22.移动端的布局用过媒体查询吗？</h3>

<h3>23.使用 CSS 预处理器吗？喜欢那个？</h3>

<h3>24.CSS优化、提高性能的方法有哪些？</h3>

<p>A:</p>

<p>作者：赵望野
链接：<a href="https://www.zhihu.com/question/19886806/answer/50285495">https://www.zhihu.com/question/19886806/answer/50285495</a>
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>

<ul>
<li><strong>加载性能</strong>: 这个方面相关的 best practice 太多了，网上随便找一找就是一堆资料，比如不要用 import 啊，压缩啊等等，主要是从减少文件体积、减少阻塞加载、提高并发方面入手的，任何 hint 都逃不出这几个大方向。</li>
<li><strong>选择器性能</strong>: 可以参考 GitHub 的这个分享 <a href="https://speakerdeck.com/jonrohan/githubs-css-performance%EF%BC%8C%E4%BD%86">https://speakerdeck.com/jonrohan/githubs-css-performance%EF%BC%8C%E4%BD%86</a> selector 的对整体性能的影响可以忽略不计了，selector 的考察更多是规范化和可维护性、健壮性方面，很少有人在实际工作当中会把选择器性能作为重点关注对象的，但也像 GitHub 这个分享里面说的一样——知道总比不知道好。</li>
<li><strong>渲染性能</strong>: 渲染性能是 CSS 优化最重要的关注对象。页面渲染 junky 过多？看看是不是大量使用了 text-shadow？是不是开了字体抗锯齿？CSS 动画怎么实现的？合理利用 GPU 加速了吗？什么你用了 Flexible Box Model？有没有测试换个 layout 策略对 render performance 的影响？这个方面搜索一下 CSS render performance 或者 CSS animation performance 也会有一堆一堆的资料可供参考。</li>
<li><strong>可维护性、健壮性</strong>: 命名合理吗？结构层次设计是否足够健壮？对样式进行抽象复用了吗？优雅的 CSS 不仅仅会影响后期的维护成本，也会对加载性能等方面产生影响。这方面可以多找一些 OOCSS（不是说就要用 OOCSS，而是说多了解一下）等等不同 CSS Strategy 的信息，取长补短。</li>
</ul>


<h3>25.浏览器是怎样解析CSS选择器的？</h3>

<p>A:按照从上到下，从右到左的顺序解析。</p>

<h3>26.在网页中的应该使用奇数还是偶数的字体？为什么呢？</h3>

<p>A:一般来说，由于各种终端设备的分辨率是偶数的，设计上普遍采用偶数像素体系，奇数像素体系受到排挤，主要的冲突表现在：奇数像素宽度的东西，无法在偶数像素元素内居中显示，总是要差一个像素。</p>

<h3>27.margin和padding分别适合什么场景使用？</h3>

<p>A:margin是用来隔开元素与元素的间距；padding是用来隔开元素与内容的间隔。</p>

<h3>28.抽离样式模块怎么写，说出思路，有无实践经验？</h3>

<h3>29.元素竖向的百分比设定是相对于容器的高度吗？</h3>

<p>A:如果是height的话，是相对于容器高度，如果是padding-height,margin-height则是相对于容器的宽度。</p>

<h3>30.全屏滚动的原理是什么？用到了CSS的那些属性？</h3>

<p>A:可以利用css3和div的绝对定位来实现。用到了 position, transform.</p>

<p>Reference:<a href="http://www.alloyteam.com/2015/04/quan-ping-gun-dong-xiao-guo-h5fullscreenpage-js/">全屏滚动效果</a></p>

<h3>31.什么是响应式设计？响应式设计的基本原理是什么？如何兼容低版本的IE？</h3>

<p>A:Responsive web design (RWD) is an approach to web design that makes web pages render well on a variety of devices and window or screen sizes.</p>

<h3>32.视差滚动效果，如何给每页做不同的动画？（回到顶部，向下滑动要再次出现，和只出现一次分别怎么做？）</h3>

<p>A:</p>

<ul>
<li>利用background-attachment属性实现。 background-attachment: fixed || scroll || local 默认情况下，此属性取值scroll，页面滚动时，内容和背景一起运动，如果取值fixed，背景相对浏览器固定。</li>
<li>通过js控制 在页面滚动过程中，我们获取页面的scrollTop的值，根据不同参数值去设置各自scene的top值，这样滚动页面的时候，不同的速度就出来了</li>
</ul>


<p>Reference:<a href="http://www.alloyteam.com/2014/01/parallax-scrolling-love-story/">视差滚动的爱情故事</a></p>

<h3>33.<code>::before</code> 和 <code>:after</code>中双冒号和单冒号 有什么区别？解释一下这2个伪元素的作用。</h3>

<p>A: 单冒号(:)用于CSS3伪类，双冒号(::)用于CSS3伪元素。（伪元素由双冒号和伪元素名称组成）双冒号是在当前规范中引入的，用于区分伪类和伪元素。不过浏览器需要同时支持旧的已经存在的伪元素写法，比如:first-line、:first-letter、:before、:after等，而新的在CSS3中引入的伪元素则不允许再支持旧的单冒号的写法。</p>

<p>想让插入的内容出现在其它内容前，使用::before，否者，使用::after；</p>

<h3>34.如何修改chrome记住密码后自动填充表单的黄色背景 ？</h3>

<p>A:</p>

<figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>input:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill {
</span><span class='line'>      background-color: rgb(250, 255, 189); /* #FAFFBD; */
</span><span class='line'>      background-image: none;
</span><span class='line'>      color: rgb(0, 0, 0);
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<h3>35.你对line-height是如何理解的？</h3>

<p>A:“行高”顾名思意指一行文字的高度。具体来说是指两行文字间基线之间的距离。</p>

<p>Reference:<a href="https://www.zhangxinxu.com/wordpress/2009/11/css%E8%A1%8C%E9%AB%98line-height%E7%9A%84%E4%B8%80%E4%BA%9B%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8F%8A%E5%BA%94%E7%94%A8/">css行高line-height的一些深入理解及应用</a></p>

<h3>36.设置元素浮动后，该元素的display值是多少？</h3>

<p>A: 自动变成了 display:block.</p>

<h3>37.怎么让Chrome支持小于12px 的文字？</h3>

<p>A:目前Chrome浏览器已经取消了最小字体限制。</p>

<h3>38.让页面里的字体变清晰，变细用CSS怎么做？</h3>

<p>A: <code>-webkit-font-smoothing: antialiased;</code></p>

<h3>39.font-style属性可以让它赋值为“oblique” oblique是什么意思？</h3>

<p>A:倾斜的字体样式</p>

<h3>40.position:fixed;在android下无效怎么处理？</h3>

<h3>41.如果需要手动写动画，你认为最小时间间隔是多久，为什么？</h3>

<p>A:多数显示器默认频率是60Hz，即1秒刷新60次，所以理论上最小间隔为1/60＊1000ms ＝ 16.7ms</p>

<h3>42.display:inline-block 什么时候会显示间隙</h3>

<p>A:真正意义上的inline-block水平呈现的元素间，换行显示或空格分隔的情况下会有间距。</p>

<p>Reference:<a href="https://www.zhangxinxu.com/wordpress/2012/04/inline-block-space-remove-%E5%8E%BB%E9%99%A4%E9%97%B4%E8%B7%9D/">去除inline-block元素间间距的N种方法</a></p>

<h3>43.overflow: scroll时不能平滑滚动的问题怎么处理？</h3>

<p>A: <code>-webkit-overflow-scrolling: touch;</code> </p>

<h3>44.有一个高度自适应的div，里面有两个div，一个高度100px，希望另一个填满剩下的高度。</h3>

<p>A: <a href="https://www.whitebyte.info/programming/css/how-to-make-a-div-take-the-remaining-height">How to make a div take the remaining height</a></p>

<h3>45.png、jpg、gif 这些图片格式解释一下，分别什么时候用。有没有了解过webp？</h3>

<p>A:</p>

<p>png:
 优点:无损压缩，有透明选项，压缩效率高于bmp 缺点:一般体积比同尺寸的90%压缩率的jpg要大很多(通常是5倍以上),但人眼很难识别其中的区别 用途:最常见的无损压缩图片格式,如果是经常对某图片进行编辑保存,要求图片数据100%完整,或需要透明效果(给PS当素材或用作图标等)则推荐使用</p>

<p>jpg/jpeg:
 优点:体积比png小，打开速度比png快 缺点:属于有损压缩，每次保存都会产生数据损失(jpeg artifacts)，故不适合用于多次编辑保存。压缩率过高图像会失真 用途:网络上最最常见的格式，也是静态图片(不只是照片)就常用的保存格式，就算是同一小组开发的jp2(相当于jpg第2代)也无法取代它。一般如果肉眼无法识别与png的差别和没有特殊要求就用jpg。</p>

<p>gif:</p>

<p>优点:支持动画以及透明，文件小
缺点:色域不广，只有256色
用途:动态图</p>

<p>webp:WebP是谷歌开发的一种新图片格式，同时支持有损和无损压缩的、使用直接色的、点阵图。
从名字就可以看出来它是为Web而生的，什么叫为Web而生呢？就是说相同质量的图片，WebP具有更小的文件体积。现在网站上充满了大量的图片，如果能够降低每一个图片的文件大小，那么将大大减少浏览器和服务器之间的数据传输量，进而降低访问延迟，提升访问体验。</p>

<h3>46.什么是Cookie 隔离？（或者说：请求资源的时候不要让它带cookie怎么做）</h3>

<p>A:如果静态文件都放在主域名下，那静态文件请求的时候都带有的cookie的数据提交给server的，非常浪费流量，所以不如隔离开。</p>

<p>因为cookie有域的限制，因此不能跨域提交请求，利用这点，可以将静态文件放在非主要域名下，这样便隔开了。请求头中就不会带有cookie数据，这样可以降低请求头的大小，降低请求时间，从而达到降低整体请求延时的目的。</p>

<p>同时这种方式不会将cookie传入Web Server，也减少了Web Server对cookie的处理分析环节，提高了webserver的http请求的解析速度。</p>

<h3>47.style标签写在body后与body前有什么区别？</h3>

<p>A:从有html标准以来到目前为止（2017年5月），标准一直是规定style元素不应出现在body元素中。
不过网页浏览器一直有容错设计。如果style元素出现在body元素，最终效果和style元素出现在head里是一样的。但是可能引起界面闪烁、重绘或重新布局。</p>

<h3>48.什么是CSS 预处理器 / 后处理器？</h3>

<p>A:预处理器例如：LESS、Sass、Stylus，用来预编译Sass或less，增强css代码的复用性，提高工作效率。</p>

<p>后处理器例如：PostCSS，通常被视为在完成的样式表中根据CSS规范处理CSS，让其更有效；目前最常做的是给CSS属性添加浏览器私有前缀，实现跨浏览器兼容性的问题。</p>

<h3>49.rem布局的优缺点?</h3>

<p>A:</p>

<p>优点：大小不受层次元素字体影响<br/>
缺点：字体不会跟随缩放；需要使用像素值兼容部分浏览器，不便于维护。</p>

<h2>Reference:</h2>

<ul>
<li><a href="https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions/Questions-and-Answers">前端开发面试题</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web 面试题汇总(一)]]></title>
    <link href="http://DamianSheldon.github.io/blog/web-technical-interview-part-1.html"/>
    <updated>2018-09-03T17:26:10+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/web-technical-interview-part-1</id>
    <content type="html"><![CDATA[<h3>1.Doctype作用？标准模式与兼容模式各有什么区别?</h3>

<p>A: 告知浏览器的解析器用什么文档标准解析这个文档。DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。</p>

<h3>2.HTML5 为什么只需要写 &lt;!DOCTYPE HTML>？</h3>

<p>A: HTML5 不基于 SGML，因此不需要对DTD进行引用，但是需要doctype来规范浏览器的行为（让浏览器按照它们应该的方式来运行；而HTML4.01基于SGML,所以需要对DTD进行引用，才能告知浏览器文档所使用的文档类型。</p>

<h3>3.行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？</h3>

<p>A:</p>

<ul>
<li>行内元素有：a b span img input select strong（强调的语气）</li>
<li>块级元素有：div ul ol li dl dt dd h1 h2 h3 h4…p</li>
<li>常见的空元素：br hr img input link meta</li>
<li>鲜为人知的空元素：area base col command embed keygen param source track wbr</li>
</ul>


<h3>4.页面导入样式时，使用link和@import有什么区别？</h3>

<p>A:</p>

<ul>
<li>link属于XHTML标签，除了加载CSS外，还能用于定义RSS, 定义rel连接属性等作用；而@import是CSS提供的，只能用于加载CSS;</li>
<li>页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载;</li>
<li>import是CSS2.1 提出的，只在IE5以上才能被识别，而link是XHTML标签，无兼容问题;</li>
<li>link支持使用js控制DOM去改变样式，而@import不支持;</li>
</ul>


<h3>5.介绍一下你对浏览器内核的理解？</h3>

<h3>6.简述一下你对HTML语义化的理解？</h3>

<p>A:用正确的标签做正确的事情。</p>

<ul>
<li>html语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;</li>
<li>即使在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的;搜索引擎的爬虫也依赖于HTML标记</li>
<li>确定上下文和各个关键字的权重，利于SEO;</li>
<li>使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。</li>
</ul>


<h3>7.HTML5的离线储存怎么使用，工作原理能不能解释一下？</h3>

<h3>8.浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？</h3>

<!--more-->


<h3>9.请描述一下 cookies，sessionStorage 和 localStorage 的区别？</h3>

<h3>10.iframe有那些缺点？</h3>

<p>A:</p>

<ul>
<li>iframe会阻塞主页面的Onload事件；</li>
<li>搜索引擎的检索程序无法解读这种页面，不利于SEO；</li>
<li>iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。</li>
</ul>


<p>使用iframe之前需要考虑这两个缺点。如果需要使用iframe，最好是通过javascript 动态给iframe添加src属性值，这样可以绕开以上两个问题。</p>

<h3>11.HTML5的form如何关闭自动完成功能？</h3>

<p>A: 给不想要提示的 form 或某个 input 设置为 autocomplete=off。</p>

<h3>12.如何实现浏览器内多个标签页之间的通信?</h3>

<h3>13.webSocket如何兼容低浏览器？</h3>

<h3>14.页面可见性（Page Visibility API） 可以有哪些用途？</h3>

<p>A: 通过 visibilityState 的值检测页面当前是否可见，以及打开网页的时间等;在页面被切换到其他后台进程的时候，自动暂停音乐或视频的播放；</p>

<h3>15.如何在页面上实现一个圆形的可点击区域？</h3>

<p>A:</p>

<ol>
<li>map+area或者svg</li>
<li>border-radius</li>
<li>纯js实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等</li>
</ol>


<h3>16.实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果。</h3>

<p>A:</p>

<figure class='code'><figcaption><span>html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;div style="height:1px;overflow:hidden;background:red">&lt;/div></span></code></pre></td></tr></table></div></figure>


<h3>17.网页验证码是干嘛的，是为了解决什么安全问题?</h3>

<p>A:区分用户是计算机还是人。</p>

<p>可以防止恶意破解密码、刷票、论坛灌水；有效防止黑客对某一个特定注册用户用暴力破解方式进行不断的登陆尝试。</p>

<h3>18.title与h1的区别、b与strong的区别、i与em的区别？</h3>

<p>A:</p>

<ul>
<li>title属性没有明确意义只表示是个标题，h1则表示层次明确的标题，对页面信息的抓取也有很大的影响。</li>
<li>b 元素用来吸引读者的注意力到文本，却不表示该文本更重要；strong 元素表示内容更重要。</li>
<li>i 内容展示为斜体，em表示强调的文本。</li>
</ul>


<h3>19.Label的作用是什么？是怎么用的？</h3>

<p>A:label标签来定义表单控制间的关系,当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。</p>

<figure class='code'><figcaption><span>html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;label for="Name">Number:&lt;/label>
</span><span class='line'>  &lt;input type="text" name="Name" id="Name"/>
</span><span class='line'>  
</span><span class='line'>  &lt;label>Date:&lt;input type="text" name="B"/>&lt;/label></span></code></pre></td></tr></table></div></figure>


<h2>Reference:</h2>

<ul>
<li><a href="https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions/Questions-and-Answers">前端开发面试题</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blocks 的实现]]></title>
    <link href="http://DamianSheldon.github.io/blog/the-implementation-of-blocks.html"/>
    <updated>2018-09-01T15:42:34+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/the-implementation-of-blocks</id>
    <content type="html"><![CDATA[<p>Block 的实现是面试中高频出现的问题，背后的原因我想是希望借此考察面试者对 Block 的掌握程度，在日后的工作中能够用好它；同时能从侧面反映面试者有没有深入钻研技术，以及独立思考能力如何，可谓一举多得。</p>

<p>下面我们就来看看 ObjC 中的 Blocks 是如何实现。Clang 的 <code>-rewrite-objc</code> 选项可以将含有 Block 语法的源代码转换为 C++，说是 C++，其实也仅使用了 struct 结构，其本质是 C 语言。</p>

<p>下面我们先转换一个简单的文件试试:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span> <span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">@autoreleasepool</span> <span class="p">{</span>
</span><span class='line'>        <span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="n">blk</span><span class="p">)(</span><span class="kt">void</span><span class="p">)</span> <span class="o">=</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Block</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">blk</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 使用命令:</span>
</span><span class='line'><span class="err">$</span> <span class="n">clang</span> <span class="o">-</span><span class="n">fobjc</span><span class="o">-</span><span class="n">arc</span> <span class="o">-</span><span class="n">ObjC</span> <span class="o">-</span><span class="n">rewrite</span><span class="o">-</span><span class="n">objc</span> <span class="o">-</span><span class="n">mios</span><span class="o">-</span><span class="n">version</span><span class="o">-</span><span class="n">min</span><span class="o">=</span><span class="mf">6.0.0</span> <span class="o">-</span><span class="n">fobjc</span><span class="o">-</span><span class="n">runtime</span><span class="o">=</span><span class="n">ios</span><span class="o">-</span><span class="mf">6.0.0</span> <span class="o">-</span><span class="n">isysroot</span> <span class="o">/</span><span class="n">Applications</span><span class="o">/</span><span class="n">Xcode</span><span class="p">.</span><span class="n">app</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">Developer</span><span class="o">/</span><span class="n">Platforms</span><span class="o">/</span><span class="n">iPhoneOS</span><span class="p">.</span><span class="n">platform</span><span class="o">/</span><span class="n">Developer</span><span class="o">/</span><span class="n">SDKs</span><span class="o">/</span><span class="n">iPhoneOS11</span><span class="mf">.3</span><span class="p">.</span><span class="n">sdk</span> <span class="o">-</span><span class="n">arch</span> <span class="n">arm64</span> <span class="n">block</span><span class="o">-</span><span class="n">essense</span><span class="p">.</span><span class="n">m</span>  <span class="o">-</span><span class="n">o</span> <span class="n">block</span><span class="o">-</span><span class="n">essense</span><span class="o">-</span><span class="k">in</span><span class="o">-</span><span class="n">c</span><span class="p">.</span><span class="n">c</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//限于篇幅，省略不相关的部分，结果如下:</span>
</span><span class='line'><span class="k">struct</span> <span class="n">__block_impl</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">void</span> <span class="o">*</span><span class="n">isa</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">Flags</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">Reserved</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">void</span> <span class="o">*</span><span class="n">FuncPtr</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">__main_block_impl_0</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">__block_impl</span> <span class="n">impl</span><span class="p">;</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">__main_block_desc_0</span><span class="o">*</span> <span class="n">Desc</span><span class="p">;</span>
</span><span class='line'>  <span class="n">__main_block_impl_0</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="n">fp</span><span class="p">,</span> <span class="k">struct</span> <span class="n">__main_block_desc_0</span> <span class="o">*</span><span class="n">desc</span><span class="p">,</span> <span class="kt">int</span> <span class="n">flags</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">impl</span><span class="p">.</span><span class="n">isa</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">_NSConcreteStackBlock</span><span class="p">;</span>
</span><span class='line'>    <span class="n">impl</span><span class="p">.</span><span class="n">Flags</span> <span class="o">=</span> <span class="n">flags</span><span class="p">;</span>
</span><span class='line'>    <span class="n">impl</span><span class="p">.</span><span class="n">FuncPtr</span> <span class="o">=</span> <span class="n">fp</span><span class="p">;</span>
</span><span class='line'>    <span class="n">Desc</span> <span class="o">=</span> <span class="n">desc</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">__main_block_func_0</span><span class="p">(</span><span class="k">struct</span> <span class="n">__main_block_impl_0</span> <span class="o">*</span><span class="n">__cself</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Block</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="k">struct</span> <span class="n">__main_block_desc_0</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">size_t</span> <span class="n">reserved</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">size_t</span> <span class="n">Block_size</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="n">__main_block_desc_0_DATA</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">__main_block_impl_0</span><span class="p">)};</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span> <span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="cm">/* @autoreleasepool */</span> <span class="p">{</span> <span class="n">__AtAutoreleasePool</span> <span class="n">__autoreleasepool</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="n">blk</span><span class="p">)(</span><span class="kt">void</span><span class="p">)</span> <span class="o">=</span> <span class="p">((</span><span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="p">)())</span><span class="o">&amp;</span><span class="n">__main_block_impl_0</span><span class="p">((</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">__main_block_func_0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">__main_block_desc_0_DATA</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">((</span><span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="p">)(</span><span class="n">__block_impl</span> <span class="o">*</span><span class="p">))((</span><span class="n">__block_impl</span> <span class="o">*</span><span class="p">)</span><span class="n">blk</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">FuncPtr</span><span class="p">)((</span><span class="n">__block_impl</span> <span class="o">*</span><span class="p">)</span><span class="n">blk</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>可以看到持有 block 的变量实际上就是指针，而 block 本身则是结构体，在我们的例子中对应的是 <code>__main_block_impl_0</code>,功能代码则是通过函数来实现的，block 结构体内有成员变量指向该函数，这样我们对 block 的实现渐渐清晰起来了。</p>

<p>Block 有一个重要的特性&ndash;自动捕获变量。这又是怎么实现的呢？我们同样可以使用上述的方法来得到答案。我们构造一个捕获变量的例子，然后来查看它的结果：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span> <span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">@autoreleasepool</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">BOOL</span> <span class="n">flag</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">28</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">float</span> <span class="n">pi</span> <span class="o">=</span> <span class="mf">3.1415</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="sc">&#39;x&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="n">blk</span><span class="p">)(</span><span class="kt">void</span><span class="p">)</span> <span class="o">=</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Block</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;flag:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">flag</span><span class="p">);</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;i:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;pi:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">pi</span><span class="p">);</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;c:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">c</span><span class="p">);</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">blk</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 转换之后相关部分</span>
</span><span class='line'><span class="k">struct</span> <span class="n">__main_block_impl_0</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">__block_impl</span> <span class="n">impl</span><span class="p">;</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">__main_block_desc_0</span><span class="o">*</span> <span class="n">Desc</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">BOOL</span> <span class="n">flag</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">float</span> <span class="n">pi</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">c</span><span class="p">;</span>
</span><span class='line'>  <span class="n">__main_block_impl_0</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="n">fp</span><span class="p">,</span> <span class="k">struct</span> <span class="n">__main_block_desc_0</span> <span class="o">*</span><span class="n">desc</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="n">_flag</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_i</span><span class="p">,</span> <span class="kt">float</span> <span class="n">_pi</span><span class="p">,</span> <span class="kt">char</span> <span class="n">_c</span><span class="p">,</span> <span class="kt">int</span> <span class="n">flags</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span> <span class="o">:</span> <span class="n">flag</span><span class="p">(</span><span class="n">_flag</span><span class="p">),</span> <span class="n">i</span><span class="p">(</span><span class="n">_i</span><span class="p">),</span> <span class="n">pi</span><span class="p">(</span><span class="n">_pi</span><span class="p">),</span> <span class="n">c</span><span class="p">(</span><span class="n">_c</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">impl</span><span class="p">.</span><span class="n">isa</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">_NSConcreteStackBlock</span><span class="p">;</span>
</span><span class='line'>    <span class="n">impl</span><span class="p">.</span><span class="n">Flags</span> <span class="o">=</span> <span class="n">flags</span><span class="p">;</span>
</span><span class='line'>    <span class="n">impl</span><span class="p">.</span><span class="n">FuncPtr</span> <span class="o">=</span> <span class="n">fp</span><span class="p">;</span>
</span><span class='line'>    <span class="n">Desc</span> <span class="o">=</span> <span class="n">desc</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">__main_block_func_0</span><span class="p">(</span><span class="k">struct</span> <span class="n">__main_block_impl_0</span> <span class="o">*</span><span class="n">__cself</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">BOOL</span> <span class="n">flag</span> <span class="o">=</span> <span class="n">__cself</span><span class="o">-&gt;</span><span class="n">flag</span><span class="p">;</span> <span class="c1">// bound by copy</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">__cself</span><span class="o">-&gt;</span><span class="n">i</span><span class="p">;</span> <span class="c1">// bound by copy</span>
</span><span class='line'>  <span class="kt">float</span> <span class="n">pi</span> <span class="o">=</span> <span class="n">__cself</span><span class="o">-&gt;</span><span class="n">pi</span><span class="p">;</span> <span class="c1">// bound by copy</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="n">__cself</span><span class="o">-&gt;</span><span class="n">c</span><span class="p">;</span> <span class="c1">// bound by copy</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Block</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;flag:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">flag</span><span class="p">);</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;i:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;pi:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">pi</span><span class="p">);</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;c:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">c</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="k">struct</span> <span class="n">__main_block_desc_0</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">size_t</span> <span class="n">reserved</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">size_t</span> <span class="n">Block_size</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="n">__main_block_desc_0_DATA</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">__main_block_impl_0</span><span class="p">)};</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span> <span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="cm">/* @autoreleasepool */</span> <span class="p">{</span> <span class="n">__AtAutoreleasePool</span> <span class="n">__autoreleasepool</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">BOOL</span> <span class="n">flag</span> <span class="o">=</span> <span class="p">((</span><span class="kt">bool</span><span class="p">)</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">28</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">float</span> <span class="n">pi</span> <span class="o">=</span> <span class="mf">3.1415</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="sc">&#39;x&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="n">blk</span><span class="p">)(</span><span class="kt">void</span><span class="p">)</span> <span class="o">=</span> <span class="p">((</span><span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="p">)())</span><span class="o">&amp;</span><span class="n">__main_block_impl_0</span><span class="p">((</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">__main_block_func_0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">__main_block_desc_0_DATA</span><span class="p">,</span> <span class="n">flag</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">pi</span><span class="p">,</span> <span class="n">c</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">((</span><span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="p">)(</span><span class="n">__block_impl</span> <span class="o">*</span><span class="p">))((</span><span class="n">__block_impl</span> <span class="o">*</span><span class="p">)</span><span class="n">blk</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">FuncPtr</span><span class="p">)((</span><span class="n">__block_impl</span> <span class="o">*</span><span class="p">)</span><span class="n">blk</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到自动捕获的标量数据是直接声明为 block 结构体的成员变量。</p>

<p>除了读取捕获自动变量的值，block 还支持使用 <code>__block</code> 修饰符来修改自动捕获的变量。我们同样来看个例子：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span> <span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">@autoreleasepool</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">__block</span> <span class="kt">BOOL</span> <span class="n">flag</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'>        <span class="k">__block</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">28</span><span class="p">;</span>
</span><span class='line'>        <span class="k">__block</span> <span class="kt">float</span> <span class="n">pi</span> <span class="o">=</span> <span class="mf">3.1415</span><span class="p">;</span>
</span><span class='line'>        <span class="k">__block</span> <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="sc">&#39;x&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="n">blk</span><span class="p">)(</span><span class="kt">void</span><span class="p">)</span> <span class="o">=</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Block</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">flag</span> <span class="o">=</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'>            <span class="n">i</span> <span class="o">=</span> <span class="mi">88</span><span class="p">;</span>
</span><span class='line'>            <span class="n">pi</span> <span class="o">=</span> <span class="mf">3.1415926</span><span class="p">;</span>
</span><span class='line'>            <span class="n">c</span> <span class="o">=</span> <span class="sc">&#39;a&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;flag:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">flag</span><span class="p">);</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;i:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;pi:%f</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">pi</span><span class="p">);</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;c:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">c</span><span class="p">);</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">blk</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 转换之后相关部分的结果:</span>
</span><span class='line'><span class="k">struct</span> <span class="n">__Block_byref_flag_0</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">void</span> <span class="o">*</span><span class="n">__isa</span><span class="p">;</span>
</span><span class='line'><span class="n">__Block_byref_flag_0</span> <span class="o">*</span><span class="n">__forwarding</span><span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">__flags</span><span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">__size</span><span class="p">;</span>
</span><span class='line'> <span class="kt">BOOL</span> <span class="n">flag</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="k">struct</span> <span class="n">__Block_byref_i_1</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">void</span> <span class="o">*</span><span class="n">__isa</span><span class="p">;</span>
</span><span class='line'><span class="n">__Block_byref_i_1</span> <span class="o">*</span><span class="n">__forwarding</span><span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">__flags</span><span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">__size</span><span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="k">struct</span> <span class="n">__Block_byref_pi_2</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">void</span> <span class="o">*</span><span class="n">__isa</span><span class="p">;</span>
</span><span class='line'><span class="n">__Block_byref_pi_2</span> <span class="o">*</span><span class="n">__forwarding</span><span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">__flags</span><span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">__size</span><span class="p">;</span>
</span><span class='line'> <span class="kt">float</span> <span class="n">pi</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="k">struct</span> <span class="n">__Block_byref_c_3</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">void</span> <span class="o">*</span><span class="n">__isa</span><span class="p">;</span>
</span><span class='line'><span class="n">__Block_byref_c_3</span> <span class="o">*</span><span class="n">__forwarding</span><span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">__flags</span><span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">__size</span><span class="p">;</span>
</span><span class='line'> <span class="kt">char</span> <span class="n">c</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">__main_block_impl_0</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">__block_impl</span> <span class="n">impl</span><span class="p">;</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">__main_block_desc_0</span><span class="o">*</span> <span class="n">Desc</span><span class="p">;</span>
</span><span class='line'>  <span class="n">__Block_byref_flag_0</span> <span class="o">*</span><span class="n">flag</span><span class="p">;</span> <span class="c1">// by ref</span>
</span><span class='line'>  <span class="n">__Block_byref_i_1</span> <span class="o">*</span><span class="n">i</span><span class="p">;</span> <span class="c1">// by ref</span>
</span><span class='line'>  <span class="n">__Block_byref_pi_2</span> <span class="o">*</span><span class="n">pi</span><span class="p">;</span> <span class="c1">// by ref</span>
</span><span class='line'>  <span class="n">__Block_byref_c_3</span> <span class="o">*</span><span class="n">c</span><span class="p">;</span> <span class="c1">// by ref</span>
</span><span class='line'>  <span class="n">__main_block_impl_0</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="n">fp</span><span class="p">,</span> <span class="k">struct</span> <span class="n">__main_block_desc_0</span> <span class="o">*</span><span class="n">desc</span><span class="p">,</span> <span class="n">__Block_byref_flag_0</span> <span class="o">*</span><span class="n">_flag</span><span class="p">,</span> <span class="n">__Block_byref_i_1</span> <span class="o">*</span><span class="n">_i</span><span class="p">,</span> <span class="n">__Block_byref_pi_2</span> <span class="o">*</span><span class="n">_pi</span><span class="p">,</span> <span class="n">__Block_byref_c_3</span> <span class="o">*</span><span class="n">_c</span><span class="p">,</span> <span class="kt">int</span> <span class="n">flags</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span> <span class="o">:</span> <span class="n">flag</span><span class="p">(</span><span class="n">_flag</span><span class="o">-&gt;</span><span class="n">__forwarding</span><span class="p">),</span> <span class="n">i</span><span class="p">(</span><span class="n">_i</span><span class="o">-&gt;</span><span class="n">__forwarding</span><span class="p">),</span> <span class="n">pi</span><span class="p">(</span><span class="n">_pi</span><span class="o">-&gt;</span><span class="n">__forwarding</span><span class="p">),</span> <span class="n">c</span><span class="p">(</span><span class="n">_c</span><span class="o">-&gt;</span><span class="n">__forwarding</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">impl</span><span class="p">.</span><span class="n">isa</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">_NSConcreteStackBlock</span><span class="p">;</span>
</span><span class='line'>    <span class="n">impl</span><span class="p">.</span><span class="n">Flags</span> <span class="o">=</span> <span class="n">flags</span><span class="p">;</span>
</span><span class='line'>    <span class="n">impl</span><span class="p">.</span><span class="n">FuncPtr</span> <span class="o">=</span> <span class="n">fp</span><span class="p">;</span>
</span><span class='line'>    <span class="n">Desc</span> <span class="o">=</span> <span class="n">desc</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">__main_block_func_0</span><span class="p">(</span><span class="k">struct</span> <span class="n">__main_block_impl_0</span> <span class="o">*</span><span class="n">__cself</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">__Block_byref_flag_0</span> <span class="o">*</span><span class="n">flag</span> <span class="o">=</span> <span class="n">__cself</span><span class="o">-&gt;</span><span class="n">flag</span><span class="p">;</span> <span class="c1">// bound by ref</span>
</span><span class='line'>  <span class="n">__Block_byref_i_1</span> <span class="o">*</span><span class="n">i</span> <span class="o">=</span> <span class="n">__cself</span><span class="o">-&gt;</span><span class="n">i</span><span class="p">;</span> <span class="c1">// bound by ref</span>
</span><span class='line'>  <span class="n">__Block_byref_pi_2</span> <span class="o">*</span><span class="n">pi</span> <span class="o">=</span> <span class="n">__cself</span><span class="o">-&gt;</span><span class="n">pi</span><span class="p">;</span> <span class="c1">// bound by ref</span>
</span><span class='line'>  <span class="n">__Block_byref_c_3</span> <span class="o">*</span><span class="n">c</span> <span class="o">=</span> <span class="n">__cself</span><span class="o">-&gt;</span><span class="n">c</span><span class="p">;</span> <span class="c1">// bound by ref</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Block</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">(</span><span class="n">flag</span><span class="o">-&gt;</span><span class="n">__forwarding</span><span class="o">-&gt;</span><span class="n">flag</span><span class="p">)</span> <span class="o">=</span> <span class="p">((</span><span class="kt">bool</span><span class="p">)</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>            <span class="p">(</span><span class="n">i</span><span class="o">-&gt;</span><span class="n">__forwarding</span><span class="o">-&gt;</span><span class="n">i</span><span class="p">)</span> <span class="o">=</span> <span class="mi">88</span><span class="p">;</span>
</span><span class='line'>            <span class="p">(</span><span class="n">pi</span><span class="o">-&gt;</span><span class="n">__forwarding</span><span class="o">-&gt;</span><span class="n">pi</span><span class="p">)</span> <span class="o">=</span> <span class="mf">3.1415926</span><span class="p">;</span>
</span><span class='line'>            <span class="p">(</span><span class="n">c</span><span class="o">-&gt;</span><span class="n">__forwarding</span><span class="o">-&gt;</span><span class="n">c</span><span class="p">)</span> <span class="o">=</span> <span class="sc">&#39;a&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;flag:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="p">(</span><span class="n">flag</span><span class="o">-&gt;</span><span class="n">__forwarding</span><span class="o">-&gt;</span><span class="n">flag</span><span class="p">));</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;i:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="p">(</span><span class="n">i</span><span class="o">-&gt;</span><span class="n">__forwarding</span><span class="o">-&gt;</span><span class="n">i</span><span class="p">));</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;pi:%f</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="p">(</span><span class="n">pi</span><span class="o">-&gt;</span><span class="n">__forwarding</span><span class="o">-&gt;</span><span class="n">pi</span><span class="p">));</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;c:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="p">(</span><span class="n">c</span><span class="o">-&gt;</span><span class="n">__forwarding</span><span class="o">-&gt;</span><span class="n">c</span><span class="p">));</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">__main_block_copy_0</span><span class="p">(</span><span class="k">struct</span> <span class="n">__main_block_impl_0</span><span class="o">*</span><span class="n">dst</span><span class="p">,</span> <span class="k">struct</span> <span class="n">__main_block_impl_0</span><span class="o">*</span><span class="n">src</span><span class="p">)</span> <span class="p">{</span><span class="n">_Block_object_assign</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">dst</span><span class="o">-&gt;</span><span class="n">flag</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">src</span><span class="o">-&gt;</span><span class="n">flag</span><span class="p">,</span> <span class="mi">8</span><span class="cm">/*BLOCK_FIELD_IS_BYREF*/</span><span class="p">);</span><span class="n">_Block_object_assign</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">dst</span><span class="o">-&gt;</span><span class="n">i</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">src</span><span class="o">-&gt;</span><span class="n">i</span><span class="p">,</span> <span class="mi">8</span><span class="cm">/*BLOCK_FIELD_IS_BYREF*/</span><span class="p">);</span><span class="n">_Block_object_assign</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">dst</span><span class="o">-&gt;</span><span class="n">pi</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">src</span><span class="o">-&gt;</span><span class="n">pi</span><span class="p">,</span> <span class="mi">8</span><span class="cm">/*BLOCK_FIELD_IS_BYREF*/</span><span class="p">);</span><span class="n">_Block_object_assign</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">dst</span><span class="o">-&gt;</span><span class="n">c</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">src</span><span class="o">-&gt;</span><span class="n">c</span><span class="p">,</span> <span class="mi">8</span><span class="cm">/*BLOCK_FIELD_IS_BYREF*/</span><span class="p">);}</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">__main_block_dispose_0</span><span class="p">(</span><span class="k">struct</span> <span class="n">__main_block_impl_0</span><span class="o">*</span><span class="n">src</span><span class="p">)</span> <span class="p">{</span><span class="n">_Block_object_dispose</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">src</span><span class="o">-&gt;</span><span class="n">flag</span><span class="p">,</span> <span class="mi">8</span><span class="cm">/*BLOCK_FIELD_IS_BYREF*/</span><span class="p">);</span><span class="n">_Block_object_dispose</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">src</span><span class="o">-&gt;</span><span class="n">i</span><span class="p">,</span> <span class="mi">8</span><span class="cm">/*BLOCK_FIELD_IS_BYREF*/</span><span class="p">);</span><span class="n">_Block_object_dispose</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">src</span><span class="o">-&gt;</span><span class="n">pi</span><span class="p">,</span> <span class="mi">8</span><span class="cm">/*BLOCK_FIELD_IS_BYREF*/</span><span class="p">);</span><span class="n">_Block_object_dispose</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">src</span><span class="o">-&gt;</span><span class="n">c</span><span class="p">,</span> <span class="mi">8</span><span class="cm">/*BLOCK_FIELD_IS_BYREF*/</span><span class="p">);}</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="k">struct</span> <span class="n">__main_block_desc_0</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">size_t</span> <span class="n">reserved</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">size_t</span> <span class="n">Block_size</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="k">copy</span><span class="p">)(</span><span class="k">struct</span> <span class="n">__main_block_impl_0</span><span class="o">*</span><span class="p">,</span> <span class="k">struct</span> <span class="n">__main_block_impl_0</span><span class="o">*</span><span class="p">);</span>
</span><span class='line'>  <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="n">dispose</span><span class="p">)(</span><span class="k">struct</span> <span class="n">__main_block_impl_0</span><span class="o">*</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="n">__main_block_desc_0_DATA</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">__main_block_impl_0</span><span class="p">),</span> <span class="n">__main_block_copy_0</span><span class="p">,</span> <span class="n">__main_block_dispose_0</span><span class="p">};</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span> <span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="cm">/* @autoreleasepool */</span> <span class="p">{</span> <span class="n">__AtAutoreleasePool</span> <span class="n">__autoreleasepool</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">__attribute__</span><span class="p">((</span><span class="n">__blocks__</span><span class="p">(</span><span class="n">byref</span><span class="p">)))</span> <span class="n">__Block_byref_flag_0</span> <span class="n">flag</span> <span class="o">=</span> <span class="p">{(</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="mi">0</span><span class="p">,(</span><span class="n">__Block_byref_flag_0</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">flag</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">__Block_byref_flag_0</span><span class="p">),</span> <span class="p">((</span><span class="kt">bool</span><span class="p">)</span><span class="mi">1</span><span class="p">)};</span>
</span><span class='line'>        <span class="n">__attribute__</span><span class="p">((</span><span class="n">__blocks__</span><span class="p">(</span><span class="n">byref</span><span class="p">)))</span> <span class="n">__Block_byref_i_1</span> <span class="n">i</span> <span class="o">=</span> <span class="p">{(</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="mi">0</span><span class="p">,(</span><span class="n">__Block_byref_i_1</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">i</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">__Block_byref_i_1</span><span class="p">),</span> <span class="mi">28</span><span class="p">};</span>
</span><span class='line'>        <span class="n">__attribute__</span><span class="p">((</span><span class="n">__blocks__</span><span class="p">(</span><span class="n">byref</span><span class="p">)))</span> <span class="n">__Block_byref_pi_2</span> <span class="n">pi</span> <span class="o">=</span> <span class="p">{(</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="mi">0</span><span class="p">,(</span><span class="n">__Block_byref_pi_2</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pi</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">__Block_byref_pi_2</span><span class="p">),</span> <span class="mf">3.1415</span><span class="p">};</span>
</span><span class='line'>        <span class="n">__attribute__</span><span class="p">((</span><span class="n">__blocks__</span><span class="p">(</span><span class="n">byref</span><span class="p">)))</span> <span class="n">__Block_byref_c_3</span> <span class="n">c</span> <span class="o">=</span> <span class="p">{(</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="mi">0</span><span class="p">,(</span><span class="n">__Block_byref_c_3</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">c</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">__Block_byref_c_3</span><span class="p">),</span> <span class="sc">&#39;x&#39;</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="n">blk</span><span class="p">)(</span><span class="kt">void</span><span class="p">)</span> <span class="o">=</span> <span class="p">((</span><span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="p">)())</span><span class="o">&amp;</span><span class="n">__main_block_impl_0</span><span class="p">((</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">__main_block_func_0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">__main_block_desc_0_DATA</span><span class="p">,</span> <span class="p">(</span><span class="n">__Block_byref_flag_0</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">flag</span><span class="p">,</span> <span class="p">(</span><span class="n">__Block_byref_i_1</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">i</span><span class="p">,</span> <span class="p">(</span><span class="n">__Block_byref_pi_2</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pi</span><span class="p">,</span> <span class="p">(</span><span class="n">__Block_byref_c_3</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">c</span><span class="p">,</span> <span class="mi">570425344</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">((</span><span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="p">)(</span><span class="n">__block_impl</span> <span class="o">*</span><span class="p">))((</span><span class="n">__block_impl</span> <span class="o">*</span><span class="p">)</span><span class="n">blk</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">FuncPtr</span><span class="p">)((</span><span class="n">__block_impl</span> <span class="o">*</span><span class="p">)</span><span class="n">blk</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到使用 <code>__block</code> 修饰的变量实际上转换成了结构体变量，同样在 block 结构体中有成员变量指向它们。</p>

<p>上面我们看过了使用 block 时的几种情况，我们可以尝试来总结使用 block 的情况，然后查看各种情况转换之后的代码来进一步探索 block 的实现，进而得到比较完善的答案。</p>

<p>首先 block 可以按是否捕获变量分为两大类，其次捕获变量时根据是否支持修改又可以分为两类，最后捕获变量又可以分为程序的数据区域、栈上和堆上三种情况。综上，我们可以得到得到如下的 block 分类列表:</p>

<ul>
<li>不捕获变量(1)</li>
<li><p>捕获变量</p>

<ul>
<li><p>不修改捕获的变量</p>

<ul>
<li>存在程序数据区的变量(2)</li>
<li>存在栈上的变量(3)</li>
<li>存在堆上的变量(4)</li>
</ul>
</li>
<li><p>修改捕获的变量(<code>__block</code> 修饰的变量)</p>

<ul>
<li>存在程序数据区的变量(5)</li>
<li>存在栈上的变量(6)</li>
<li>存在堆上的变量(7)</li>
</ul>
</li>
</ul>
</li>
</ul>


<p>这样算下来应该是存在七种情况，我们可以分别构造各种情况的例子，然后得到 block 的实现全貌。</p>

<p>全局变量和 static 变量是程序数据区变量，block 中访问全局变量和在其他地方没有什么不同，所以 block 的实现中不需要对它进行特别考虑。Static 变量在捕获时会在 block 结构体中有对应的成员变量，可以用该成员变量来读写。由于它在程序的生命周期中一直存在，所以当 block 捕获并修改它时，不需要生成对应的结构体变量，这和其他 <code>__block</code> 修饰的变量不同。</p>

<p>情况三和四比较类似，它们都会在 block 结构体中增加相应的成员变量，不同之处是捕获堆上的变量， block 的描述结构体变量中会增加 copy 和 dipose 函数，用来管理对应的内存。</p>

<p>情况六和七也类似，它们都是将变量转换为结构体，然后在 block 结构体增加成员变量指向它们。捕获堆上的变量时，block 内的成员变量指向变量，而这个变量是指向堆上分配的一块内存的，也就是一个对象，对象就是一块内存区域嘛，用代码示例如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="kt">blk_t</span> <span class="n">blk</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">__block</span> <span class="kt">id</span> <span class="k">__strong</span> <span class="n">array</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">NSMutableArray</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">blk</span> <span class="o">=</span> <span class="p">[</span><span class="o">^</span><span class="p">(</span><span class="kt">id</span> <span class="n">obj</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>      <span class="p">[</span><span class="n">array</span> <span class="nl">addObject</span><span class="p">:</span><span class="n">obj</span><span class="p">];</span>
</span><span class='line'>      <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;array count = %ld&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">array</span> <span class="n">count</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">}</span> <span class="k">copy</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// __block 修饰指向 array 的变量</span>
</span><span class='line'><span class="k">struct</span> <span class="n">__Block_byref_array_0</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">void</span> <span class="o">*</span><span class="n">__isa</span><span class="p">;</span>
</span><span class='line'><span class="n">__Block_byref_array_0</span> <span class="o">*</span><span class="n">__forwarding</span><span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">__flags</span><span class="p">;</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">__size</span><span class="p">;</span>
</span><span class='line'> <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="n">__Block_byref_id_object_copy</span><span class="p">)(</span><span class="kt">void</span><span class="o">*</span><span class="p">,</span> <span class="kt">void</span><span class="o">*</span><span class="p">);</span>
</span><span class='line'> <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="n">__Block_byref_id_object_dispose</span><span class="p">)(</span><span class="kt">void</span><span class="o">*</span><span class="p">);</span>
</span><span class='line'> <span class="k">__strong</span> <span class="kt">id</span> <span class="n">array</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 表示 block 的结构体</span>
</span><span class='line'><span class="k">struct</span> <span class="n">__main_block_impl_0</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">__block_impl</span> <span class="n">impl</span><span class="p">;</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">__main_block_desc_0</span><span class="o">*</span> <span class="n">Desc</span><span class="p">;</span>
</span><span class='line'>  <span class="n">__Block_byref_array_0</span> <span class="o">*</span><span class="n">array</span><span class="p">;</span> <span class="c1">// by ref</span>
</span><span class='line'>  <span class="n">__main_block_impl_0</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="n">fp</span><span class="p">,</span> <span class="k">struct</span> <span class="n">__main_block_desc_0</span> <span class="o">*</span><span class="n">desc</span><span class="p">,</span> <span class="n">__Block_byref_array_0</span> <span class="o">*</span><span class="n">_array</span><span class="p">,</span> <span class="kt">int</span> <span class="n">flags</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span> <span class="o">:</span> <span class="n">array</span><span class="p">(</span><span class="n">_array</span><span class="o">-&gt;</span><span class="n">__forwarding</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">impl</span><span class="p">.</span><span class="n">isa</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">_NSConcreteStackBlock</span><span class="p">;</span>
</span><span class='line'>    <span class="n">impl</span><span class="p">.</span><span class="n">Flags</span> <span class="o">=</span> <span class="n">flags</span><span class="p">;</span>
</span><span class='line'>    <span class="n">impl</span><span class="p">.</span><span class="n">FuncPtr</span> <span class="o">=</span> <span class="n">fp</span><span class="p">;</span>
</span><span class='line'>    <span class="n">Desc</span> <span class="o">=</span> <span class="n">desc</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>看到这里，我们有了 block 捕获变量出了作用域后还能存在原因的线索，当表示 block 的结构体从栈上拷贝到堆上，如果是只读变量，它的值赋值给 block 结构体的成员变量了；如果是 <code>__block</code> 修饰的变量，表示该变量的结构体也会一并拷贝到堆上，并由 block 持有和管理。</p>

<p>至此，我们应该对 block 的实现比较清晰了。</p>

<h2>Reference</h2>

<ul>
<li>Objective-C 高级编程</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenLDAP 学习笔记]]></title>
    <link href="http://DamianSheldon.github.io/blog/openldap-notes.html"/>
    <updated>2018-07-10T21:58:07+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/openldap-notes</id>
    <content type="html"><![CDATA[<p>最近业余时间在自学 Java，接触到 JNDI，继而牵扯出 LDAP。在倒腾过程中感觉是个复杂的主题，决定做个简要的笔记，梳理下思路，也方便日后忘记时容易拾起。</p>

<p>OpenLDAP 是 LDAP 协议的一个开源实现。LDAP 服务器本质上是一个为只读访问而优化的非关系型数据库。它主要用做地址簿查询（如 email 客户端）或对各种服务访问做后台认证以及用户数据权限管控。（例如，访问 Samba 时，LDAP 可以起到域控制器的作用；或者 Linux 系统认证 时代替 /etc/passwd 的作用。）</p>

<p>以 slap 开头的命令如: slapacl, slapadd 等是服务端工具；以 ldap 开头的命令如: ldapadd, ldapcompare 等是客户端命令工具。</p>

<h2>安装</h2>

<p>Mac 内置了 OpenLDAP 软件包，所以可以直接使用。</p>

<h2>配置</h2>

<h3>服务端</h3>

<p>服务端支持两种配置方法:动态运行时配置引擎和老式的 slapd.conf 文件。这里介绍通过老式的 slapd.conf 文件转换成动态运行时配置引擎来配置服务器的方法。</p>

<p>服务器的配置文件位于 <code>/etc/openldap/slapd.conf</code>。在 Mac 上第一次配置时该文件还不存在，但有一个 slapd.conf.default 文件，从文件名可知，这应该是一个默认配置文件，所以我们可以在它基础上来配置。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo cp /etc/openldap/slapd.conf.default /etc/openldap/slapd.conf</span></code></pre></td></tr></table></div></figure>


<p>需要编辑后缀和 rootdn。典型的后缀通常是你所用的域名，但这并非强制要求，而是依赖于你如何使用你的目录。下例中以 tenneshop 做为域名，tld 为 com，rootdn 则是 LDAP 管理员的名字（这里用 Manager）。</p>

<!--more-->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>suffix     "dc=tenneshop,dc=com"
</span><span class='line'>rootdn     "cn=Manager,dc=example,dc=com"</span></code></pre></td></tr></table></div></figure>


<p>现在删除默认 root 口令并创建一个强口令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$slappasswd -s yourfavoritepassword
</span><span class='line'>
</span><span class='line'>// /etc/openldap/slapd.conf
</span><span class='line'>rootpw  {SSHA}Q0vdi3/5Hw+EhDrFAbvEEszq1Xf4YSyy</span></code></pre></td></tr></table></div></figure>


<p>在 slapd.conf 头部添加一些 schemas:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> include     /private/etc/openldap/schema/core.schema
</span><span class='line'> include         /etc/openldap/schema/cosine.schema
</span><span class='line'> include         /etc/openldap/schema/inetorgperson.schema
</span><span class='line'> include         /etc/openldap/schema/nis.schema
</span><span class='line'> #include         /etc/openldap/schema/samba.schema
</span><span class='line'> include     /private/etc/openldap/schema/java.schema</span></code></pre></td></tr></table></div></figure>


<p>可能需要在 slapd.conf 底部加入一些常用的 indexes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>index   uid             pres,eq
</span><span class='line'>index   mail            pres,sub,eq
</span><span class='line'>index   cn              pres,sub,eq
</span><span class='line'>index   sn              pres,sub,eq
</span><span class='line'>index   dc              eq</span></code></pre></td></tr></table></div></figure>


<p>现在准备数据目录，需要重命名配置文件：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$sudo mkdir -p /private/var/db/openldap/openldap-data
</span><span class='line'>$sudo cp /etc/openldap/DB_CONFIG.example /private/var/db/openldap/openldap-data/DB_CONFIG</span></code></pre></td></tr></table></div></figure>


<p>将 slapd.conf 中的改动应用到 <code>/etc/openldap/slapd.d/</code>(第一次配置时可能需要创建该目录)，<em>需要先删除老配置</em>：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$sudo rm -rf /etc/openldap/slapd.d/*
</span></code></pre></td></tr></table></div></figure>


<p>用下面命令生成配置文件:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$sudo slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d/</span></code></pre></td></tr></table></div></figure>


<p>每次修改 slapd.conf 后，都需要执行上面命令。检查有没有问题，可以忽略 &ldquo;bdb_monitor_db_open: monitoring disabled; configure monitor database to enable&rdquo;. 如果提示数据库不存在，可以先使用命令来检查配置文件:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$sudo slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d/ -u </span></code></pre></td></tr></table></div></figure>


<p>确认配置文件没有语法错误之后，可以通过启动 slap 来创建数据库:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$sudo /usr/libexec/slapd -F /etc/openldap/slapd.d</span></code></pre></td></tr></table></div></figure>


<p>最终完整的配置文件如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#
</span><span class='line'># See slapd.conf(5) for details on configuration options.
</span><span class='line'># This file should NOT be world readable.
</span><span class='line'>#
</span><span class='line'>include       /private/etc/openldap/schema/core.schema
</span><span class='line'>include         /etc/openldap/schema/cosine.schema
</span><span class='line'>include         /etc/openldap/schema/inetorgperson.schema
</span><span class='line'>include         /etc/openldap/schema/nis.schema
</span><span class='line'>#include         /etc/openldap/schema/samba.schema
</span><span class='line'>include       /private/etc/openldap/schema/java.schema
</span><span class='line'>
</span><span class='line'># Define global ACLs to disable default read access.
</span><span class='line'>
</span><span class='line'># Do not enable referrals until AFTER you have a working directory
</span><span class='line'># service AND an understanding of referrals.
</span><span class='line'>#referral ldap://root.openldap.org
</span><span class='line'>
</span><span class='line'>pidfile       /private/var/db/openldap/run/slapd.pid
</span><span class='line'>argsfile  /private/var/db/openldap/run/slapd.args
</span><span class='line'>
</span><span class='line'># Load dynamic backend modules:
</span><span class='line'># modulepath  /usr/libexec/openldap
</span><span class='line'># moduleload  back_bdb.la
</span><span class='line'># moduleload  back_hdb.la
</span><span class='line'># moduleload  back_ldap.la
</span><span class='line'>
</span><span class='line'># Sample security restrictions
</span><span class='line'># Require integrity protection (prevent hijacking)
</span><span class='line'># Require 112-bit (3DES or better) encryption for updates
</span><span class='line'># Require 63-bit encryption for simple bind
</span><span class='line'># security ssf=1 update_ssf=112 simple_bind=64
</span><span class='line'>
</span><span class='line'># Sample access control policy:
</span><span class='line'># Root DSE: allow anyone to read it
</span><span class='line'># Subschema (sub)entry DSE: allow anyone to read it
</span><span class='line'># Other DSEs:
</span><span class='line'>#     Allow self write access
</span><span class='line'>#     Allow authenticated users read access
</span><span class='line'>#     Allow anonymous users to authenticate
</span><span class='line'># Directives needed to implement policy:
</span><span class='line'># access to dn.base="" by * read
</span><span class='line'># access to dn.base="cn=Subschema" by * read
</span><span class='line'># access to *
</span><span class='line'># by self write
</span><span class='line'># by users read
</span><span class='line'># by anonymous auth
</span><span class='line'>#
</span><span class='line'># if no access controls are present, the default policy
</span><span class='line'># allows anyone and everyone to read anything but restricts
</span><span class='line'># updates to rootdn.  (e.g., "access to * by * read")
</span><span class='line'>#
</span><span class='line'># rootdn can always read and write EVERYTHING!
</span><span class='line'>
</span><span class='line'>#######################################################################
</span><span class='line'># BDB database definitions
</span><span class='line'>#######################################################################
</span><span class='line'>
</span><span class='line'>database  bdb
</span><span class='line'>suffix        "dc=tenneshop,dc=com"
</span><span class='line'>rootdn        "cn=Manager,dc=tenneshop,dc=com"
</span><span class='line'># Cleartext passwords, especially for the rootdn, should
</span><span class='line'># be avoid.  See slappasswd(8) and slapd.conf(5) for details.
</span><span class='line'># Use of strong authentication encouraged.
</span><span class='line'>#rootpw       secret
</span><span class='line'>#The hash was generated from password secret using the command slappasswd -s secret
</span><span class='line'>rootpw    {SSHA}Q0vdi3/5Hw+EhDrFAbvEEszq1Xf4YSyy
</span><span class='line'># The database directory MUST exist prior to running slapd AND
</span><span class='line'># should only be accessible by the slapd and slap tools.
</span><span class='line'># Mode 700 recommended.
</span><span class='line'>directory /private/var/db/openldap/openldap-data
</span><span class='line'># Indices to maintain
</span><span class='line'>index objectClass eq
</span><span class='line'>
</span><span class='line'># Some common indexes
</span><span class='line'>index   uid             pres,eq
</span><span class='line'>index   mail            pres,sub,eq
</span><span class='line'>index   cn              pres,sub,eq
</span><span class='line'>index   sn              pres,sub,eq
</span><span class='line'>index   dc              eq</span></code></pre></td></tr></table></div></figure>


<h3>客户端</h3>

<p>客户的配置文件位于 /etc/openldap/ldap.conf.</p>

<p>这个配置很简单，只需要将BASE 设置为服务器的前缀，将 URI 设置为服务器的地址:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>BASE            dc=tenneshop,dc=com
</span><span class='line'>URI             ldap://localhost</span></code></pre></td></tr></table></div></figure>


<p>最终完整的配置文件如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#
</span><span class='line'># LDAP Defaults
</span><span class='line'>#
</span><span class='line'>
</span><span class='line'># See ldap.conf(5) for details
</span><span class='line'># This file should be world readable but not world writable.
</span><span class='line'>
</span><span class='line'>#BASE dc=example,dc=com
</span><span class='line'>#URI  ldap://ldap.example.com ldap://ldap-master.example.com:666
</span><span class='line'>BASE  dc=tenneshop,dc=com
</span><span class='line'>URI   ldap://localhost
</span><span class='line'>
</span><span class='line'>#SIZELIMIT    12
</span><span class='line'>#TIMELIMIT    15
</span><span class='line'>#DEREF        never
</span><span class='line'>#TLS_REQCERT  demand
</span><span class='line'>TLS_REQCERT allow</span></code></pre></td></tr></table></div></figure>


<h3>创建初始项</h3>

<p>配置好客户端后，创建根项和 root 角色项：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dn: dc=tenneshop,dc=com
</span><span class='line'>objectClass: dcObject
</span><span class='line'>objectClass: organization
</span><span class='line'>dc: tenneshop
</span><span class='line'>o: Tenneshop
</span><span class='line'>description: Tenneshop directory
</span><span class='line'>
</span><span class='line'>dn: cn=Manager,dc=tenneshop,dc=com
</span><span class='line'>objectClass: organizationalRole
</span><span class='line'>cn: Manager
</span><span class='line'>description: Directory Manager</span></code></pre></td></tr></table></div></figure>


<p>将上述内容保存在文件 <code>/etc/openldap/root.ldif</code> 中，然后使用命令:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ldapadd -x -D 'cn=Manager,dc=tenneshop,dc=com' -W -f /etc/openldap/root.ldif</span></code></pre></td></tr></table></div></figure>


<p>添加到目录服务中。</p>

<h3>测试安装好的系统</h3>

<p>运行下面命令:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ldapsearch -x '(objectclass=*)'
</span><span class='line'># extended LDIF
</span><span class='line'>#
</span><span class='line'># LDAPv3
</span><span class='line'># base &lt;dc=tenneshop,dc=com&gt; (default) with scope subtree
</span><span class='line'># filter: (objectclass=*)
</span><span class='line'># requesting: ALL
</span><span class='line'>#
</span><span class='line'>
</span><span class='line'># tenneshop.com
</span><span class='line'>dn: dc=tenneshop,dc=com
</span><span class='line'>objectClass: dcObject
</span><span class='line'>objectClass: organization
</span><span class='line'>dc: tenneshop
</span><span class='line'>o: Tenneshop
</span><span class='line'>description: Tenneshop directory
</span><span class='line'>
</span><span class='line'># Manager, tenneshop.com
</span><span class='line'>dn: cn=Manager,dc=tenneshop,dc=com
</span><span class='line'>objectClass: organizationalRole
</span><span class='line'>cn: Manager
</span><span class='line'>description: Directory Manager
</span><span class='line'>
</span><span class='line'># search result
</span><span class='line'>search: 2
</span><span class='line'>result: 0 Success
</span><span class='line'>
</span><span class='line'># numResponses: 3
</span><span class='line'># numEntries: 2</span></code></pre></td></tr></table></div></figure>


<p>或认证为 rootdn (将 -x 替换为 -D <user> -W), 用上面配置的例子的话：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ldapsearch -D "cn=Manager,dc=tenneshop,dc=com" -W '(objectclass=*)'
</span><span class='line'>Enter LDAP Password:
</span><span class='line'># extended LDIF
</span><span class='line'>#
</span><span class='line'># LDAPv3
</span><span class='line'># base &lt;dc=tenneshop,dc=com&gt; (default) with scope subtree
</span><span class='line'># filter: (objectclass=*)
</span><span class='line'># requesting: ALL
</span><span class='line'>#
</span><span class='line'>
</span><span class='line'># tenneshop.com
</span><span class='line'>dn: dc=tenneshop,dc=com
</span><span class='line'>objectClass: dcObject
</span><span class='line'>objectClass: organization
</span><span class='line'>dc: tenneshop
</span><span class='line'>o: Tenneshop
</span><span class='line'>description: Tenneshop directory
</span><span class='line'>
</span><span class='line'># Manager, tenneshop.com
</span><span class='line'>dn: cn=Manager,dc=tenneshop,dc=com
</span><span class='line'>objectClass: organizationalRole
</span><span class='line'>cn: Manager
</span><span class='line'>description: Directory Manager
</span><span class='line'>
</span><span class='line'># search result
</span><span class='line'>search: 2
</span><span class='line'>result: 0 Success
</span><span class='line'>
</span><span class='line'># numResponses: 3
</span><span class='line'># numEntries: 2</span></code></pre></td></tr></table></div></figure>


<h3>遇到的问题</h3>

<h4>1.additional info: objectClass: value #0 invalid per syntax</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ldapadd -x -D 'cn=Manager,dc=tenneshop,dc=com' -W -f /etc/openldap/root.ldif
</span><span class='line'>Enter LDAP Password:
</span><span class='line'>ldapadd: attributeDescription "dn": (possible missing newline after line 8, entry "dc=tenneshop,dc=com"?)
</span><span class='line'>adding new entry "dc=tenneshop,dc=com"
</span><span class='line'>ldap_add: Invalid syntax (21)
</span><span class='line'>  additional info: objectClass: value #0 invalid per syntax</span></code></pre></td></tr></table></div></figure>


<p>A:导入的数据每行结尾含有空格所致，去掉数据每行结尾的空格。</p>

<p>Reference:<a href="http://www.what21.com/sys/ldap_3_1483460096406.html">OpenLDAP报错: additional info: objectClass: value #0 invalid per syntax</a></p>

<h2>Reference</h2>

<ul>
<li>OpenLDAP Software 2.4 Administrator&rsquo;s Guide</li>
<li><a href="https://wiki.archlinux.org/index.php/OpenLDAP_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87">openLDAP</a>#.E5.88.9B.E5.BB.BA.E5.88.9D.E5.A7.8B.E9.A1.B9)</li>
<li><a href="https://wiki.gentoo.org/wiki/Centralized_authentication_using_OpenLDAP/zh#Configuring_the_OpenLDAP_client_tools">使用OpenLDAP实现集中式认证</a></li>
<li><a href="https://techhelplist.com/tech-tutorials/34-openldap/48-user-management-in-openldap">User Management in OpenLDAP</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web 开发问题汇总(三)]]></title>
    <link href="http://DamianSheldon.github.io/blog/web-development-notes-part-three.html"/>
    <updated>2018-04-13T11:07:25+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/web-development-notes-part-three</id>
    <content type="html"><![CDATA[<h3>1.How to send email in java?</h3>

<p>A:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.mail.*</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.mail.internet.*</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.activation.*</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SendEmail</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>   <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="c1">// Recipient&#39;s email ID needs to be mentioned.</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">to</span> <span class="o">=</span> <span class="s">&quot;abcd@gmail.com&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Sender&#39;s email ID needs to be mentioned</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">from</span> <span class="o">=</span> <span class="s">&quot;web@gmail.com&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Assuming you are sending email from localhost</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">host</span> <span class="o">=</span> <span class="s">&quot;localhost&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Get system properties</span>
</span><span class='line'>      <span class="n">Properties</span> <span class="n">properties</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">getProperties</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Setup mail server</span>
</span><span class='line'>      <span class="n">properties</span><span class="o">.</span><span class="na">setProperty</span><span class="o">(</span><span class="s">&quot;mail.smtp.host&quot;</span><span class="o">,</span> <span class="n">host</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Get the default Session object.</span>
</span><span class='line'>      <span class="n">Session</span> <span class="n">session</span> <span class="o">=</span> <span class="n">Session</span><span class="o">.</span><span class="na">getDefaultInstance</span><span class="o">(</span><span class="n">properties</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>         <span class="c1">// Create a default MimeMessage object.</span>
</span><span class='line'>         <span class="n">MimeMessage</span> <span class="n">message</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">MimeMessage</span><span class="o">(</span><span class="n">session</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>         <span class="c1">// Set From: header field of the header.</span>
</span><span class='line'>         <span class="n">message</span><span class="o">.</span><span class="na">setFrom</span><span class="o">(</span><span class="k">new</span> <span class="nf">InternetAddress</span><span class="o">(</span><span class="n">from</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>         <span class="c1">// Set To: header field of the header.</span>
</span><span class='line'>         <span class="n">message</span><span class="o">.</span><span class="na">addRecipient</span><span class="o">(</span><span class="n">Message</span><span class="o">.</span><span class="na">RecipientType</span><span class="o">.</span><span class="na">TO</span><span class="o">,</span> <span class="k">new</span> <span class="nf">InternetAddress</span><span class="o">(</span><span class="n">to</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>         <span class="c1">// Set Subject: header field</span>
</span><span class='line'>         <span class="n">message</span><span class="o">.</span><span class="na">setSubject</span><span class="o">(</span><span class="s">&quot;This is the Subject Line!&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>         <span class="c1">// Now set the actual message</span>
</span><span class='line'>         <span class="n">message</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;This is actual message&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>         <span class="c1">// Send message</span>
</span><span class='line'>         <span class="n">Transport</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>
</span><span class='line'>         <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Sent message successfully....&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">MessagingException</span> <span class="n">mex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>         <span class="n">mex</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>   <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="http://www.tutorialspoint.com/java/java_sending_email.htm">Java - Sending Email</a><br/>
<a href="https://stackoverflow.com/questions/3649014/send-email-using-java">Send email using java</a></p>

<!--more-->


<h3>2.Eclipse error: &lsquo;Failed to create the Java Virtual Machine&rsquo;</h3>

<p>A:安装了 Eclipse 提示的升级后再重新打开时，出现上面的报错。Google 一圈后显示可能是 eclipse.ini 的锅，正好我安装了 cpp, java 和 jee 三个版本，尝试打开 java 版本的，正常打开，于是对比它们的 eclipse.ini 文件:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">$</span> <span class="n">cp</span> <span class="o">~/</span><span class="n">eclipse</span><span class="o">/</span><span class="n">jee</span><span class="o">-</span><span class="n">oxygen</span><span class="o">/</span><span class="n">Eclipse</span><span class="o">.</span><span class="na">app</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">Eclipse</span><span class="o">/</span><span class="n">eclipse</span><span class="o">.</span><span class="na">ini</span>  <span class="o">~/</span><span class="n">eclipse</span><span class="o">-</span><span class="n">workspace</span><span class="o">/</span><span class="n">jee</span><span class="o">-</span><span class="n">eclipse</span><span class="o">.</span><span class="na">ini</span>
</span><span class='line'><span class="n">cp</span> <span class="o">~/</span><span class="n">eclipse</span><span class="o">/</span><span class="n">java</span><span class="o">-</span><span class="n">oxygen</span><span class="o">/</span><span class="n">Eclipse</span><span class="o">.</span><span class="na">app</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">Eclipse</span><span class="o">/</span><span class="n">eclipse</span><span class="o">.</span><span class="na">ini</span> <span class="o">~/</span><span class="n">eclipse</span><span class="o">-</span><span class="n">workspace</span><span class="o">/</span><span class="n">java</span><span class="o">-</span><span class="n">eclipse</span><span class="o">.</span><span class="na">ini</span>
</span><span class='line'>
</span><span class='line'><span class="n">$</span> <span class="n">diff</span> <span class="n">eclipse</span><span class="o">-</span><span class="n">workspace</span><span class="o">/</span><span class="n">jee</span><span class="o">-</span><span class="n">eclipse</span><span class="o">.</span><span class="na">ini</span> <span class="n">eclipse</span><span class="o">-</span><span class="n">workspace</span><span class="o">/</span><span class="n">java</span><span class="o">-</span><span class="n">eclipse</span><span class="o">.</span><span class="na">ini</span>
</span><span class='line'><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="n">d2</span>
</span><span class='line'><span class="o">&lt;</span> <span class="o">--</span><span class="n">launcher</span><span class="o">.</span><span class="na">library</span>
</span><span class='line'><span class="o">&lt;</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">dongmeiliang</span><span class="o">/.</span><span class="na">p2</span><span class="o">/</span><span class="n">pool</span><span class="o">/</span><span class="n">plugins</span><span class="o">/</span><span class="n">org</span><span class="o">.</span><span class="na">eclipse</span><span class="o">.</span><span class="na">equinox</span><span class="o">.</span><span class="na">launcher</span><span class="o">.</span><span class="na">cocoa</span><span class="o">.</span><span class="na">macosx</span><span class="o">.</span><span class="na">x86_64_1</span><span class="o">.</span><span class="mf">1.551</span><span class="o">.</span><span class="na">v20171108</span><span class="o">-</span><span class="mi">1834</span>
</span><span class='line'><span class="mi">6</span><span class="n">a5</span><span class="o">,</span><span class="mi">6</span>
</span><span class='line'><span class="o">&gt;</span> <span class="o">--</span><span class="n">launcher</span><span class="o">.</span><span class="na">library</span>
</span><span class='line'><span class="o">&gt;</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">dongmeiliang</span><span class="o">/.</span><span class="na">p2</span><span class="o">/</span><span class="n">pool</span><span class="o">/</span><span class="n">plugins</span><span class="o">/</span><span class="n">org</span><span class="o">.</span><span class="na">eclipse</span><span class="o">.</span><span class="na">equinox</span><span class="o">.</span><span class="na">launcher</span><span class="o">.</span><span class="na">cocoa</span><span class="o">.</span><span class="na">macosx</span><span class="o">.</span><span class="na">x86_64_1</span><span class="o">.</span><span class="mf">1.551</span><span class="o">.</span><span class="na">v20171108</span><span class="o">-</span><span class="mi">1834</span>
</span><span class='line'><span class="mi">8</span><span class="n">c8</span>
</span><span class='line'><span class="o">&lt;</span> <span class="n">org</span><span class="o">.</span><span class="na">eclipse</span><span class="o">.</span><span class="na">epp</span><span class="o">.</span><span class="na">package</span><span class="o">.</span><span class="na">jee</span><span class="o">.</span><span class="na">product</span>
</span><span class='line'><span class="o">---</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">org</span><span class="o">.</span><span class="na">eclipse</span><span class="o">.</span><span class="na">epp</span><span class="o">.</span><span class="na">package</span><span class="o">.</span><span class="na">java</span><span class="o">.</span><span class="na">product</span>
</span><span class='line'><span class="mi">18</span><span class="o">,</span><span class="mi">23</span><span class="n">d17</span>
</span><span class='line'><span class="o">&lt;</span> <span class="o">-</span><span class="nl">javaagent:</span><span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">dongmeiliang</span><span class="o">/.</span><span class="na">p2</span><span class="o">/</span><span class="n">pool</span><span class="o">/</span><span class="n">plugins</span><span class="o">/</span><span class="n">com</span><span class="o">.</span><span class="na">zeroturnaround</span><span class="o">.</span><span class="na">eclipse</span><span class="o">.</span><span class="na">optimizer</span><span class="o">.</span><span class="na">plugin_1</span><span class="o">.</span><span class="mf">0.11</span><span class="o">/</span><span class="n">agent</span><span class="o">/</span><span class="n">eclipse</span><span class="o">-</span><span class="n">optimizer</span><span class="o">-</span><span class="n">agent</span><span class="o">.</span><span class="na">jar</span>
</span><span class='line'><span class="o">&lt;</span> <span class="o">-</span><span class="n">server</span>
</span><span class='line'><span class="o">&lt;</span> <span class="o">-</span><span class="nl">XX:</span><span class="n">PermSize</span><span class="o">=</span><span class="mi">256</span><span class="n">m</span>
</span><span class='line'><span class="o">&lt;</span> <span class="o">-</span><span class="nl">XX:</span><span class="n">MaxPermSize</span><span class="o">=</span><span class="mi">256</span><span class="n">m</span>
</span><span class='line'><span class="o">&lt;</span> <span class="o">-</span><span class="nl">XX:</span><span class="o">+</span><span class="n">UseParallelGC</span>
</span><span class='line'><span class="o">&lt;</span> <span class="o">-</span><span class="nl">Xverify:</span><span class="n">none</span>
</span><span class='line'><span class="mi">32</span><span class="n">c26</span>
</span><span class='line'><span class="o">&lt;</span> <span class="o">-</span><span class="n">Xms512m</span>
</span><span class='line'><span class="o">---</span>
</span><span class='line'><span class="o">&gt;</span> <span class="o">-</span><span class="n">Xms256m</span>
</span></code></pre></td></tr></table></div></figure>


<p>总共有五处不同，细看之后发现只有两处可能会产生影响，先尝试将 <code>-Xms512m</code> 改成 <code>-Xms256m</code>，问题仍然存在，将文件恢复原样，再尝试将</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;</span> <span class="o">-</span><span class="nl">javaagent:</span><span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">dongmeiliang</span><span class="o">/.</span><span class="na">p2</span><span class="o">/</span><span class="n">pool</span><span class="o">/</span><span class="n">plugins</span><span class="o">/</span><span class="n">com</span><span class="o">.</span><span class="na">zeroturnaround</span><span class="o">.</span><span class="na">eclipse</span><span class="o">.</span><span class="na">optimizer</span><span class="o">.</span><span class="na">plugin_1</span><span class="o">.</span><span class="mf">0.11</span><span class="o">/</span><span class="n">agent</span><span class="o">/</span><span class="n">eclipse</span><span class="o">-</span><span class="n">optimizer</span><span class="o">-</span><span class="n">agent</span><span class="o">.</span><span class="na">jar</span>
</span><span class='line'><span class="o">&lt;</span> <span class="o">-</span><span class="n">server</span>
</span><span class='line'><span class="o">&lt;</span> <span class="o">-</span><span class="nl">XX:</span><span class="n">PermSize</span><span class="o">=</span><span class="mi">256</span><span class="n">m</span>
</span><span class='line'><span class="o">&lt;</span> <span class="o">-</span><span class="nl">XX:</span><span class="n">MaxPermSize</span><span class="o">=</span><span class="mi">256</span><span class="n">m</span>
</span><span class='line'><span class="o">&lt;</span> <span class="o">-</span><span class="nl">XX:</span><span class="o">+</span><span class="n">UseParallelGC</span>
</span><span class='line'><span class="o">&lt;</span> <span class="o">-</span><span class="nl">Xverify:</span><span class="n">none</span>
</span></code></pre></td></tr></table></div></figure>


<p>删除，问题顺利解决。</p>

<p>Reference:<a href="https://stackoverflow.com/questions/7302604/eclipse-error-failed-to-create-the-java-virtual-machine">Eclipse error: &lsquo;Failed to create the Java Virtual Machine&rsquo;</a></p>

<h3>3.<code>Warning: mysqli::__construct(): (HY000/2002): No such file or directory in /code/index.php on line 8 Connection failed: No such file or directory</code></h3>

<p>A:问题出现的原因：
当主机填写为localhost时MySQL会采用 unix domain socket连接，当主机填写为127.0.0.1时MySQL会采用TCP/IP的方式连接。使用Unix socket的连接比TCP/IP的连接更加快速与安全。这是MySQL连接的特性，可以参考官方文档的说明<a href="https://dev.mysql.com/doc/refman/5.6/en/connecting.html#id471316">4.2.2. Connecting to the MySQL Server</a>:</p>

<blockquote><p>On Unix, MySQL programs treat the host name localhost specially, in a way that is
likely different from what you expect compared to other network-based programs.
For connections to localhost, MySQL programs attempt to connect to the local server
by using a Unix socket file. This occurs even if a &ndash;port or -P option is given to
specify a port number. To ensure that the client makes a TCP/IP connection to the
local server, use &ndash;host or -h to specify a host name value of 127.0.0.1, or the IP
address or name of the local server. You can also specify the connection protocol
explicitly, even for localhost, by using the &ndash;protocol=TCP option.</p></blockquote>

<p>这个问题有以下几种解决方法：</p>

<ol>
<li>使用TCP/IP代替Unix socket。即在连接的时候将localhost换成127.0.0.1。</li>
<li>修改MySQL的配置文件my.cnf，指定mysql.socket的位置： /var/lib/mysql/mysql.sock (你的mysql.socket路径)。   </li>
<li>直接在php建立连接的时候指定my.socket的位置（官方文档：mysqli_connect）。比如： <code>$db = new MySQLi('localhost', 'root', 'root', 'my_db', '3306', '/var/run/mysqld/mysqld.sock')</code></li>
</ol>


<p>Reference:<a href="https://segmentfault.com/q/1010000000328531">mysqli不能使用localhost，请问这是怎么回事？</a></p>

<h3>4.超链接元素的 onclick 方法直接使用表单元素的名字调用其 submit 方法。</h3>

<p>A:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">&quot;bm_form&quot;</span> <span class="na">action=</span><span class="s">&quot;/delete_bms&quot;</span> <span class="na">method=</span><span class="s">&quot;POST&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;https://www.google.com&quot;</span><span class="nt">&gt;</span>https://www.google.com<span class="nt">&lt;/a&gt;&lt;/td&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;&lt;input</span> <span class="na">type=</span><span class="s">&quot;checkbox&quot;</span> <span class="na">name=</span><span class="s">&quot;del_me&quot;</span> <span class="na">value=</span><span class="s">&quot;https://www.google.com&quot;</span> <span class="nt">/&gt;&lt;/td&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;https://www.twitter.com&quot;</span><span class="nt">&gt;</span>https://www.twitter.com<span class="nt">&lt;/a&gt;&lt;/td&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;&lt;input</span> <span class="na">type=</span><span class="s">&quot;checkbox&quot;</span> <span class="na">name=</span><span class="s">&quot;del_me&quot;</span> <span class="na">value=</span><span class="s">&quot;https://www.twitter.com&quot;</span> <span class="nt">/&gt;&lt;/td&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'><span class="nt">&lt;/form&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">onclick=</span><span class="s">&quot;bm_form.submit();&quot;</span><span class="nt">&gt;</span>Delete BM<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>  
</span></code></pre></td></tr></table></div></figure>


<p>这里展示了可以直接使用表单元素的名字直接来提交的技巧。</p>

<h3>5.Ionic - Cannot find module “.”</h3>

<p>A:Just remove all imports that have /umd at the final.
In my case, I changed: 
<code>import { IonicPageModule } from 'ionic-angular/umd';</code>
To: 
<code>import { IonicPageModule } from 'ionic-angular';</code></p>

<p>Reference:<a href="https://stackoverflow.com/questions/43236971/ionic-2-runtime-error-cannot-find-module">Ionic 2 - Runtime error Cannot find module “.”</a></p>

<h3>6.Google maps report google is not define in ionic app.</h3>

<p>A:</p>

<ol>
<li>go to your project and do “ionic plugin add cordova-plugin-whitelist”</li>
<li>add CSP meta</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Content-Security-Policy&quot;</span> <span class="na">content=</span><span class="s">&quot;script-src &#39;self&#39; https://maps.googleapis.com/ https://maps.gstatic.com/ https://mts0.googleapis.com/ &#39;unsafe-inline&#39; &#39;unsafe-eval&#39;&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Live reload unfortunately seems not work, I get this error:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Refused to load the script &#39;http://localhost:35729/livereload.js?snipver=1&#39; because it violates the following Content Security Policy directive: &quot;script-src &#39;self&#39; https://maps.googleapis.com/ https://maps.gstatic.com/ https://mts0.googleapis.com/ &#39;unsafe-inline&#39; &#39;unsafe-eval&#39;&quot;.
</span></code></pre></td></tr></table></div></figure>


<p>After some google, update CSP meta works, new CSP meta as follow:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Content-Security-Policy&quot;</span> <span class="na">content=</span><span class="s">&quot;script-src localhost:35729 &#39;self&#39; https://maps.googleapis.com/ https://maps.gstatic.com/ https://mts0.googleapis.com/ &#39;unsafe-inline&#39; &#39;unsafe-eval&#39;&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://forum.ionicframework.com/t/ionic-google-maps-referenceerror-google-is-not-defined/22550">Ionic + Google Maps: ReferenceError: google is not defined</a><br/>
<a href="https://forum.ionicframework.com/t/solution-for-livereload-problems-with-new-csp-rules/25449">Solution for livereload problems with new CSP rules</a></p>

<h3>7.Error: No provider for Navbar!</h3>

<p>A:Normally navbar don&rsquo;t provide with injector, we should access like follow:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>// Template
</span><span class='line'><span class="nt">&lt;ion-navbar</span> <span class="err">#</span><span class="na">navbar</span> <span class="na">color=</span><span class="s">&quot;primary&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ion-title&gt;</span>Whatever<span class="nt">&lt;/ion-title&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ion-buttons</span> <span class="na">right</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;button</span> <span class="na">icon-only</span> <span class="na">ion-button</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;ion-icon</span> <span class="na">name=</span><span class="s">&#39;pause&#39;</span><span class="nt">&gt;&lt;/ion-icon&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/button&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/ion-buttons&gt;</span>
</span><span class='line'><span class="nt">&lt;/ion-navbar&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>// Typescript
</span><span class='line'>export class Page {
</span><span class='line'>
</span><span class='line'>@ViewChild(&#39;navbar&#39;) navBar: Navbar;
</span><span class='line'>
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://forum.ionicframework.com/t/error-in-homepage-class-homepage-caused-by-no-provider-for-navbar/82530">Error in ./HomePage class HomePage - caused by: No provider for Navbar!</a></p>

<h3>8.How to custom back button of ionic app?</h3>

<p>A:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;ion-header&gt;</span>
</span><span class='line'>  <span class="nt">&lt;ion-navbar</span> <span class="na">color=</span><span class="s">&#39;danger&#39;</span> <span class="na">hideBackButton</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ion-title&gt;</span>product page<span class="nt">&lt;/ion-title&gt;</span>
</span><span class='line'>      <span class="nt">&lt;ion-buttons</span> <span class="na">left</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;button</span> <span class="na">ion-button</span> <span class="na">navPop</span> <span class="na">icon-only</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;ion-icon</span> <span class="na">ios=</span><span class="s">&quot;ios-arrow-forward&quot;</span> <span class="na">md=</span><span class="s">&quot;md-arrow-forward&quot;</span><span class="nt">&gt;&lt;/ion-icon&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/button&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/ion-buttons&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/ion-navbar&gt;</span>
</span><span class='line'><span class="nt">&lt;/ion-header&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://forum.ionicframework.com/t/change-default-ion-navbar-back-button-ios/47342">Change default ion-navbar “back” button ios</a></p>

<h3>9.How to make a div take the remaining height?</h3>

<p>A:</p>

<ol>
<li>Absolute Positioning</li>
<li>Tables</li>
<li>CSS3 calc</li>
</ol>


<p>Absolute Positioning</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>// html
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;inner_fixed&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    I have a fixed height
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'> 
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;inner_remaining&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    I take up the remaining height
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>html, body {
</span><span class='line'>      height: 100%;
</span><span class='line'>      width: 100%;
</span><span class='line'>      margin: 0;
</span><span class='line'>  }
</span><span class='line'>   
</span><span class='line'>  #inner_fixed {
</span><span class='line'>      height: 100px;
</span><span class='line'>      background-color: grey;
</span><span class='line'>  }
</span><span class='line'>   
</span><span class='line'>  #inner_remaining {
</span><span class='line'>      background-color: #DDDDDD;    
</span><span class='line'>   
</span><span class='line'>      position: absolute;
</span><span class='line'>      top: 100px;
</span><span class='line'>      bottom: 0;
</span><span class='line'>      width: 100%; 
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<p>pros</p>

<ul>
<li>easy to implement</li>
<li>intuitive</li>
</ul>


<p>cons</p>

<ul>
<li>tedious to maintain (hard-coded positions)</li>
</ul>


<p>Tables</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>// html
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;outer&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;inner_fixed&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        I have a fixed height
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'> 
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;inner_remaining&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        I take up the remaining height
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>html, body, #outer {
</span><span class='line'>      height: 100%;
</span><span class='line'>      width: 100%;
</span><span class='line'>      margin: 0;
</span><span class='line'>  }
</span><span class='line'>   
</span><span class='line'>  #outer {
</span><span class='line'>      display: table;
</span><span class='line'>  }
</span><span class='line'>   
</span><span class='line'>  #inner_fixed {
</span><span class='line'>      height: 100px;
</span><span class='line'>      background-color: grey;
</span><span class='line'>   
</span><span class='line'>      display: table-row;
</span><span class='line'>  }
</span><span class='line'>   
</span><span class='line'>  #inner_remaining {
</span><span class='line'>      background-color: #DDDDDD;
</span><span class='line'>   
</span><span class='line'>      display: table-row;    
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<p>pros</p>

<ul>
<li>rather “clean” solution</li>
<li>no hard-coded values, other elements can change their height</li>
</ul>


<p>cons</p>

<ul>
<li>might cause some side-effects with the layout</li>
</ul>


<p>CSS3 calc</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>// html
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;inner_fixed&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    I have a fixed height
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'> 
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;inner_remaining&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    I take up the remaining height
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>html, body {
</span><span class='line'>      height: 100%;
</span><span class='line'>      width: 100%;
</span><span class='line'>      margin: 0;
</span><span class='line'>  }
</span><span class='line'>   
</span><span class='line'>  #inner_fixed {
</span><span class='line'>      height: 100px;
</span><span class='line'>      background-color: grey;
</span><span class='line'>  }
</span><span class='line'>   
</span><span class='line'>  #inner_remaining {
</span><span class='line'>      background-color: #DDDDDD;
</span><span class='line'>   
</span><span class='line'>      height: calc(100% - 100px);    
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<p>pros</p>

<ul>
<li>easy to implement</li>
<li>less code than the other solutions</li>
</ul>


<p>cons</p>

<ul>
<li>the calc function is rather new (no support for older browsers)</li>
<li>tedious to maintain (hard-coded height)</li>
</ul>


<p>Reference:<a href="https://www.whitebyte.info/programming/css/how-to-make-a-div-take-the-remaining-height">How to make a div take the remaining height</a></p>

<h3>10.Property &lsquo;of&rsquo; does not exist on type &lsquo;typeof Observable</h3>

<p>A:
for Angular >= 6.0.0
uses RxJS 6.0.0 </p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>import { of } from &#39;rxjs&#39;;
</span></code></pre></td></tr></table></div></figure>


<p>And its usage has been changed, you no longer call it off of Observable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>of(&#39;token&#39;);
</span></code></pre></td></tr></table></div></figure>


<p>for Angular &lt;= 5.x.xx</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>import &#39;rxjs/add/observable/of&#39;;
</span><span class='line'>
</span><span class='line'>Observable.of(&#39;token&#39;);
</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://stackoverflow.com/questions/38067580/property-of-does-not-exist-on-type-typeof-observable">Property &lsquo;of&rsquo; does not exist on type &lsquo;typeof Observable</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[记一次换新 iPhone]]></title>
    <link href="http://DamianSheldon.github.io/blog/how-to-migrate-contents-on-old-iphone-to-new-iphone.html"/>
    <updated>2018-03-17T10:20:21+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/how-to-migrate-contents-on-old-iphone-to-new-iphone</id>
    <content type="html"><![CDATA[<p>说来惭愧，一直还是在用公司配的开发机 5S, 没用上最新手机的主要原因可以归结为穷 >&lt;。但最近 5S 的存储不够用了，再加上心仪的 8 降价了，一冲动就入了一个，嗯，这几个月做好了吃土的准备了。</p>

<p>iPhone 可以将旧手机数据迁移到新手机，这是我喜欢它的一个地方。苹果这篇<a href="https://support.apple.com/zh-cn/HT201269">将内容从旧 iOS 设备传输到新 iPhone、iPad 或 iPod touch</a>详细介绍几种可行方法，我们可以从中选择一种方法。其实我觉得苹果应该出篇换机指南的，上面这篇文章的题目不是很容易让人把它与换机联系起来，也不是很容易记，这是我想记这么一笔的原因之一，N 年之后我再换 iPhone 的时候也可以按这篇文章的思想来指导自己迁移数据。</p>

<p>这里我选择使用 iTunes 备份恢复，快速开始功能好像不是很灵光，也可能是我不会用，而 iCloud 备份是通过网络，网速会影响备份和恢复，加上最近 iPhone 的 bug 贼多，这让我不是很放心。在此之前有使用过 iTunes 备份恢复，想着即使恢复过程出了问题备份还在，所以最终选择 iTunes。</p>

<p>备份过程很顺利，恢复过程就曲折了，iTunes 提示 backup is corrupt or incompatible，墨菲定理生效了，另一方面也佐证了选择 iTunes 是正确的选择，苹果什么时候能把这软件质量抓一抓，别只顾着赚钱啊。搜索找到了苹果对这个问题的解决办法：</p>

<!--more-->


<blockquote><p>If an alert says that your backup is corrupt or incompatible</p>

<p>If iTunes can&rsquo;t restore from a backup because the backup is corrupt or incompatible, make sure that iTunes is updated. If you see an error that says your iOS software is too old, find out how to update your device to restore the backup. If you still can&rsquo;t restore the backup, you might not be able to use that backup. Try to use an alternate backup or an iCloud backup, or Contact Apple Support for more help.</p></blockquote>

<p>检查 iTunes 的版本，显示是最新的，这是什么幺蛾子,难道就这么放弃，不存在的，我有那么容易放弃吗，开玩笑。既然有所谓的版本的问题，我怀疑是 8 的版本和 5S 的版本不一致，于是两手准备：一方面对 5S 做一次全量 iCloud 备份，如果稍后 iOS 版本都一致了 iTunes 备份还不行就使用 iCloud 备份恢复；另一方面把 8 和 5S 升级到最新的 iOS，8 用 USB 接上 iTunes 是可以升级的。8 和 5S 都升级成最新版本的系统后，又对 5S 做了一次 iTunes 备份，之后 8 用这个备份顺利恢复了。</p>

<p>回顾整个恢复过程感觉还挺曲折，真心希望苹果抓抓软件质量，别让 iOS 成了 bugOS。过程中 8 和 5S 只是小版本不一致却导致恢复不成功，还挺伤害用户体验的，毕竟好几年才使用一次的杀手锏功能之一，当我要使用的时候你却告诉我: &ldquo;对不起，这次用不了!"我用新 iPhone 的喜悦感都被抛到九霄云外了。</p>

<h3>Reference</h3>

<ul>
<li><a href="https://support.apple.com/zh-cn/HT201269">将内容从旧 iOS 设备传输到新 iPhone、iPad 或 iPod touch</a></li>
<li><a href="https://sspai.com/post/41612">从数据迁移到处理旧 iPhone，这份换机指南都帮你想好了</a></li>
<li><a href="https://support.apple.com/en-us/HT203271">If your iTunes backup couldn‘t be completed or you can‘t restore from a backup</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[多线程的 Core Data]]></title>
    <link href="http://DamianSheldon.github.io/blog/concurrency-with-core-data.html"/>
    <updated>2018-02-23T16:00:35+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/concurrency-with-core-data</id>
    <content type="html"><![CDATA[<p>平常在项目中没有使用过 Core Data, 因为我觉得它的学习曲线还挺陡峭，整个框架给人的感觉很复杂和笨重，因此一直没有使用它。但是看到喵神这份<a href="https://onevcat.com/2013/04/ios-interview/">上级向的十个 iOS 开发面试题</a>中和这份<a href="http://studentdeng.github.io/blog/2014/02/11/baidu-interview/">百度面试</a>题中都有涉及到 Core Data 的内容，我想还是有必要好好研究一下它，毕竟它是 Apple 官方的持久化方案，我们可以取其精华，弃其糟粕，另一方面未来我们也可能因为各种原因接手或参与使用 Core Data 的项目。</p>

<p>这篇文章主要想探讨上面提到的面试题中的两个关于 Core Data 的问题:</p>

<ol>
<li>你实现过多线程的Core Data么？NSPersistentStoreCoordinator，NSManagedObjectContext和NSManagedObject中的哪些需要在线程中创建或者传递？你是用什么样的策略来实现的？</li>
<li>Core Data：中多线程中处理大量数据同步时的操作。</li>
</ol>


<p>在回答这两个问题之前，我们先看 Apple 是怎么告诉我们使用多线程的 Core Data 的，在最新的(2017-03-27) Core Data Programming Guide 中有一节 Concurrency with Core Data，它没有直接说如何使用多线程，只是说了 managed object context 在多线程中的两种使用模式:</p>

<blockquote><p>In Core Data, the managed object context can be used with two concurrency patterns, defined by NSMainQueueConcurrencyType and NSPrivateQueueConcurrencyType.</p>

<p>NSMainQueueConcurrencyType is specifically for use with your application interface and can only be used on the main queue of an application.</p>

<p>The NSPrivateQueueConcurrencyType configuration creates its own queue upon initialization and can be used only on that queue. Because the queue is private and internal to the NSManagedObjectContext instance, it can only be accessed through the performBlock: and the performBlockAndWait: methods.</p></blockquote>

<!--more-->


<p>对于多线程中对象的传递则有这么一段描述:</p>

<blockquote><p>NSManagedObject instances are not intended to be passed between queues. Doing so can result in corruption of the data and termination of the application. When it is necessary to hand off a managed object reference from one queue to another, it must be done through NSManagedObjectID instances.</p>

<p>You retrieve the managed object ID of a managed object by calling the objectID method on the NSManagedObject instance.</p></blockquote>

<p>从这里我们知道，NSManagedObject 是不能在线程中传递的，必须重新创建。但是对于 NSPersistentStoreCoordinator 和 NSManagedObjectContext 是需要创建还是可以传递就不是很清楚。</p>

<p>于是我又通读了全篇，说实话我看完以后还是没搞明白该如何使用多线程的 Core Data，于是我又找了 Apple 提供的多线程的 Core Data 示例代码 <a href="https://developer.apple.com/library/content/samplecode/ThreadedCoreData/Introduction/Intro.html#//apple_ref/doc/uid/DTS40010723">ThreadedCoreData</a>，它展示了一种使用多线程的 Core Data 的方法，但是并不能解答如何使用多线程的 Core Data。因为可能还有很多其他的方法，我们要溯本求源，找到问题的关键，问题才能迎刃而解。 于是我又到 <a href="https://objccn.io">objc 中国</a>上查找，里面专门有一个 Core Data 的专题，先看了一遍<a href="https://objccn.io/issue-4-5/">导入大数据集</a>，它提供了一些解答问题2的素材，我们稍候将它总结为答案，同时它还提供了新的线索 &ndash; <a href="http://objccn.io/issue-2-2/">在后台使用 Core Data</a>，于是我又看了这篇文章。</p>

<p>这篇文章提到在使用多线程的 Core Data 时，强烈建议先通读 Apple 的官方文档 Concurrency with Core Data，这也是符合学习 iOS 开发新知识的路线的，毕竟所有的知识都源于 Apple，这种方法推荐给大家，而我一开始也是这么做的，这里的问题是 Apple 的文档一直在更新，有的内容在新版本文档中被删除了，那么我们有办法找到旧版本的文档吗？</p>

<p>有的，这里介绍一种方法，虽然 Apple 不提供旧版本的文档，但是有个网址&ndash;<a href="https://archive.org/web/">Internet Archive</a>它会定期备份整个互联网上重要的网址，所以我们可以结合文档的修改历史在这里找到旧版本的文档，我们看到在后台使用 Core Data 翻译于 2014/03/22，我们不妨先试下 2014-03-10 这个版本的 Core Data Programming Guide.</p>

<p>这个版本是这么介绍如何使用多线程的 Core Data 的:</p>

<blockquote><p>The pattern recommended for concurrent programming with Core Data is thread confinement : each thread must have its own entirely private managed object context.</p>

<p>There are two possible ways to adopt the pattern:</p>

<ol>
<li>Create a separate managed object context for each thread and share a single persistent store coordinator.</li>
</ol>


<p>This is the typically-recommended approach.</p>

<ol>
<li>Create a separate managed object context and persistent store coordinator for each thread.</li>
</ol>


<p>This approach provides for greater concurrency at the expense of greater complexity (particularly if you need to communicate changes between different contexts) and increased memory usage.</p></blockquote>

<p>个人认为这个版本的介绍更清晰明了，也更容易得出问题的答案：</p>

<p>NSManagedObjectContext 和 NSManagedObject 是需要在线程中创建的，而 NSPersistentStoreCoordinator 是推荐传递的。策略则是创建两个线程，不妨分别称它们为工作线程和后台线程，工作线程为主，后台线程为辅，它们分别创建自己独立的 managed object context，然后共享同一个 persistent store coordinator,工作线程关注 NSManagedObjectContextDidSaveNotification 通知，当后台线程保存更改时，它便收到通知然后合并更改。代码示例如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// Worker Thread</span>
</span><span class='line'><span class="n">_mainManagedObjectContext</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">NSManagedObjectContext</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithConcurrencyType</span><span class="p">:</span><span class="n">NSMainQueueConcurrencyType</span><span class="p">];</span>
</span><span class='line'> <span class="c1">// observe the APLEarthQuakeSource save operation with its managed object context</span>
</span><span class='line'> <span class="p">[[</span><span class="bp">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">]</span> <span class="nl">addObserver</span><span class="p">:</span><span class="nb">self</span>
</span><span class='line'>                                             <span class="nl">selector</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">mergeChanges</span><span class="p">:)</span>
</span><span class='line'>                                                 <span class="nl">name</span><span class="p">:</span><span class="n">NSManagedObjectContextDidSaveNotification</span>
</span><span class='line'>                                               <span class="nl">object</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// merge changes to main context,fetchedRequestController will automatically monitor the changes and update tableview.</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">updateMainContext:</span><span class="p">(</span><span class="bp">NSNotification</span> <span class="o">*</span><span class="p">)</span><span class="nv">notification</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">assert</span><span class="p">([</span><span class="bp">NSThread</span> <span class="n">isMainThread</span><span class="p">]);</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">managedObjectContext</span> <span class="nl">mergeChangesFromContextDidSaveNotification</span><span class="p">:</span><span class="n">notification</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// this is called via observing &quot;NSManagedObjectContextDidSaveNotification&quot; from our APLEarthQuakeSource</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">mergeChanges:</span><span class="p">(</span><span class="bp">NSNotification</span> <span class="o">*</span><span class="p">)</span><span class="nv">notification</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;merge changes be invoked on thread:%@&quot;</span><span class="p">,</span> <span class="p">[</span><span class="bp">NSThread</span> <span class="n">currentThread</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">notification</span><span class="p">.</span><span class="n">object</span> <span class="o">!=</span> <span class="nb">self</span><span class="p">.</span><span class="n">managedObjectContext</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span> <span class="nl">performSelectorOnMainThread</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">updateMainContext</span><span class="p">:)</span> <span class="nl">withObject</span><span class="p">:</span><span class="n">notification</span> <span class="nl">waitUntilDone</span><span class="p">:</span><span class="nb">NO</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Background Thread</span>
</span><span class='line'><span class="bp">NSManagedObjectContext</span> <span class="o">*</span><span class="n">private</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">NSManagedObjectContext</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithConcurrencyType</span><span class="p">:</span><span class="n">NSPrivateQueueConcurrencyType</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">private</span> <span class="nl">performBlock</span><span class="p">:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>  <span class="c1">// Do some work</span>
</span><span class='line'>  <span class="bp">NSError</span> <span class="o">*</span><span class="n">error</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">[</span><span class="n">private</span> <span class="nl">save</span><span class="p">:</span><span class="o">&amp;</span><span class="n">error</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// Handle error</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}]</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里还补充说明下 managed object context 的并发类型，我们可以用 NSMainQueueConcurrencyType 和 NSPrivateQueueConcurrencyType 来指定它的类型，按照 Apple API reference 中的说明:</p>

<blockquote><p>You use contexts using the queue-based concurrency types in conjunction with performBlock: and performBlockAndWait:. You group “standard” messages to send to the context within a block to pass to one of these methods. There are two exceptions:</p>

<p>  • Setter methods on queue-based managed object contexts are thread-safe. You can invoke these methods directly on any thread.</p>

<p>  • If your code is executing on the main thread, you can invoke methods on the main queue style contexts directly instead of using the block based API.</p></blockquote>

<p>我们可以知道 context 是结合 performBlock: 和 performBlockAndWait: 来使用并发类型的，也就是说 NSMainQueueConcurrencyType 时这两个方法是在主队列上执行 block, 而 NSPrivateQueueConcurrencyType 则是在私有队列上执行。从这里我们推出工作线程的 context 使用 NSMainQueueConcurrencyType 而后台线程的 context 使用 NSPrivateQueueConcurrencyType 应该是比较好的实践，因为我们使用多线程，必然是想获得多线程的好处，如果还指定 context 为 NSMainQueueConcurrencyType，则工作还是在主线程上，并没有被移交到子线程，实际上仍然是单线程。</p>

<p>接下来我们来看第二个问题：</p>

<ul>
<li>Core Data：中多线程中处理大量数据同步时的操作。</li>
</ul>


<p>要想回答这个问题，我们得知道处理大量数据同步时会遇到什么问题，这样才能有的放矢。上面提到<a href="https://objccn.io/issue-4-5/">导入大数据集</a> 提供了回答此问题的素材，再结合<a href="http://objccn.io/issue-2-2/">在后台使用 Core Data</a>，我觉得可以得到问题的一个答案：</p>

<p>如果大量数据的同步不需要反映到界面上，那么我们可以创建一个线程并为它配置独立的 Core Data 栈，然后批量保存；如果需要反映到界面上，则要合并修改通知再更新界面，防止界面陷入卡顿。</p>

<p>正如喵神所说面试中的技术问题环节不仅是企业对应聘者技能和积累的考察，也是一个开发者自我检验的好机会。而且面试中的技术问题通常是关于某知识点的难点，即使是我们经常使用的知识，如果我们没有仔细深入地思考可能也答不上来，所以我觉得利用面试题来提高自己的技术水平和加深对某知识的掌握是不错的方法。</p>

<h3>Reference</h3>

<ul>
<li>Core Data Programming Guide</li>
<li><a href="https://objccn.io/issue-4-5/">导入大数据集</a></li>
<li><a href="https://objccn.io/issue-2-2/">常见的后台实践</a></li>
<li><a href="https://blog.codecentric.de/en/2014/11/concurrency-coredata/">Concurrency with CoreData</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 使用笔记(二)]]></title>
    <link href="http://DamianSheldon.github.io/blog/problems-when-use-mac-part-two.html"/>
    <updated>2018-01-23T11:59:31+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/problems-when-use-mac-part-two</id>
    <content type="html"><![CDATA[<h2>1. iPhone每次连接Mac都会弹出iPhoto</h2>

<p>解决办法：</p>

<ol>
<li>Plug in your iPad/iPhone</li>
<li>Open Image Capture</li>
<li>Select your device (&ldquo;devMikePad&rdquo;)</li>
<li>Press the triangle in square symbol in the lower left corner.</li>
<li>Select &ldquo;No application&rdquo; in the menu.</li>
</ol>


<p>iPhoto:
Preferences > General > &ldquo;Connecting Camera Opens &hellip;&rdquo;
set it to &ldquo;No Application&rdquo;</p>

<h2>2. Add environment variable</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>// ~/.bash_profile
</span><span class='line'><span class="nb">export </span><span class="nv">var</span><span class="o">=</span>value
</span></code></pre></td></tr></table></div></figure>


<h2>3.SSH ask passpharse every time I use SSH key.</h2>

<p>A:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$echo</span> -e <span class="s2">&quot;AddKeysToAgent yes\nUseKeychain yes&quot;</span> &gt;&gt; ~/.ssh/config
</span></code></pre></td></tr></table></div></figure>


<h2>4.Fix the Enable and Disable install software from anywhere in macOS Sierra</h2>

<p>A:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>// Enable
</span><span class='line'><span class="nv">$ </span>sudo spctl --master-disable
</span><span class='line'>
</span><span class='line'>// Disable
</span><span class='line'><span class="nv">$sudo</span> spctl --master-enable
</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://www.osxio.com/fix-enable-disable-install-software-anywhere-macos-sierra-problem/">Fix the Enable and Disable install software from anywhere in macOS Sierra problem</a></p>

<h2>5.Mac 上批量替换文件中的字符串</h2>

<p>A:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>grep -rl discription <span class="nb">source</span>/_posts <span class="p">|</span> xargs sed -i <span class="s1">&#39;&#39;</span>  <span class="s2">&quot;s/discription/description/g&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="http://blog.csdn.net/werm520/article/details/49334513">linux 批量替换文件内容及查找某目录下所有包含某字符串的文件（批量修改文件内容）</a><br/>
<a href="http://xiaorui.cc/2016/01/14/%E8%AE%BAmac%E4%BD%BF%E7%94%A8sed%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF/">论mac使用sed修改文件的正确姿势</a></p>

<h2>6.如何查看占用指定端口的进程？</h2>

<p>A:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>lsof -i :<span class="o">[</span>port<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>结果输出中有进程的 pid, 之后我们可以用这个 pid 来杀掉该进程：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">kill</span> -9 <span class="o">[</span>pid<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>这些进程很可能是系统启动时就启动了，可以通过：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>launchctl list <span class="p">|</span> grep <span class="o">[</span>pid<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>来确认。如果找到有，而我们又不想它自启动了，可以在以下目录中找到配置文件：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/Library/LaunchAgents         Per-user agents provided by the user.
</span><span class='line'>/Library/LaunchAgents          Per-user agents provided by the administrator.
</span><span class='line'>/Library/LaunchDaemons         System wide daemons provided by the administrator.
</span></code></pre></td></tr></table></div></figure>


<p>找到之后，可以用命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>launchctl unload -w paths
</span><span class='line'>// eg:
</span><span class='line'><span class="nv">$ </span>launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.jenkins.plist
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<h2>7.如何使用命令行安装 dmg？</h2>

<p>A:</p>

<p>First, mount the dmg image : <code>sudo hdiutil attach &lt;image&gt;.dmg</code></p>

<p>The image will be mounted to /Volumes/<image>. Then we can install with: <code>sudo installer -package /Volumes/&lt;image&gt;/&lt;image&gt;.pkg -target /</code></p>

<p>Finally unmount the image: <code>sudo hdiutil detach /Volumes/&lt;image&gt;</code>.</p>

<p>这个需求是源于最近一次安装 mysql 时，图形界面安装无响应，之后尝试命令行成功安装，还蛮奇怪。</p>

<p>Reference:<a href="https://apple.stackexchange.com/questions/73926/is-there-a-command-to-install-a-dmg">Is there a command to install a dmg</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web 开发问题汇总(二)]]></title>
    <link href="http://DamianSheldon.github.io/blog/web-development-notes-part-two.html"/>
    <updated>2018-01-04T10:08:36+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/web-development-notes-part-two</id>
    <content type="html"><![CDATA[<h3>1.Uncaught TypeError: Cannot read property &lsquo;msie&rsquo; of undefined</h3>

<p>A:The $.browser method has been removed as of jQuery 1.9.</p>

<blockquote><p>jQuery.browser() removed</p>

<p>The jQuery.browser() method has been deprecated since jQuery 1.3 and is removed in 1.9. If needed, it is available as part of the jQuery Migrate plugin. We recommend using feature detection with a library such as Modernizr.</p>

<p>— jQuery Core 1.9 Upgrade Guide.</p></blockquote>

<p>As stated in the Upgrade Guide you can try using the <a href="https://github.com/jquery/jquery-migrate/">jQuery Migrate plugin</a> to restore this functionality and let jQuery Tools work.</p>

<p>Reference:<a href="http://stackoverflow.com/questions/14923301/uncaught-typeerror-cannot-read-property-msie-of-undefined-jquery-tools">Uncaught TypeError: Cannot read property &lsquo;msie&rsquo; of undefined - jQuery tools</a></p>

<h3>2.The superclass “javax.servlet.http.HttpServlet” was not found on the Java Build Path in Eclipse</h3>

<p>A:To include http-servlet into your class path, you have two options:</p>

<pre><code>1. In this solution, you can add desired server runtime into your application as project facet. As runtime servers have already servlet runtime dependencies, they get included into your project and hence error is gone.
2. Another option is include the servlet dependency through maven itself. This will also fix the error.
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;dependency&gt;
</span><span class='line'>    &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
</span><span class='line'>    &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;
</span><span class='line'>    &lt;version&gt;2.5&lt;/version&gt;
</span><span class='line'>&lt;/dependency&gt;</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://howtodoinjava.com/tools/eclipse/solved-the-superclass-javax-servlet-http-httpservlet-was-not-found-on-the-java-build-path-in-eclipse/">The superclass “javax.servlet.http.HttpServlet” was not found on the Java Build Path in Eclipse</a></p>

<h3>3.Dynamic Web Module 3.1 requires Java 1.7 or newer</h3>

<p>A:</p>

<p>Step1:<br/>
Make sure your Java Project is configured probably to use Java 1.7.
Right click your project > Properties > Java Compiler and set “Compiler compliance level” to 1.7</p>

<p>Step2:<br/>
Java Build Path. Click “Edit“. And change it to “Java 7”</p>

<p>Step3:<br/>
Next from the menu on the left select Project Facets > Java and set its version to 1.7</p>

<p>Extra Tips:<br/>
If you have maven project try updating source and target version of java compiler to 1.7 in pom.xml file.</p>

<p>Reference:<a href="https://crunchify.com/how-to-solve-dynamic-web-module-3-1-requires-java-1-7-or-newer-in-eclipse/">How to solve “Dynamic Web Module 3.1 requires Java 1.7 or newer” in Eclipse</a></p>

<h3>4.How to display available goals of maven plugin?</h3>

<p>A:</p>

<blockquote><p>Recent Maven plugins have generally an help goal to have in the command line the description of the plugin, with their parameters and types. For instance, to understand the javadoc goal, you need to call:</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mvn javadoc:help -Ddetail -Dgoal<span class="o">=</span>javadoc
</span></code></pre></td></tr></table></div></figure>


<p>It works of course for Maven core plugins. to list all goals of the archetype plugin :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mvn archetype:help
</span></code></pre></td></tr></table></div></figure>


<p>And it works also for third party plugins. For example, to display all goals of the spring-boot plugin :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mvn spring-boot:help
</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://stackoverflow.com/questions/1674524/how-to-display-a-list-of-available-goals">How to display a list of available goals?</a></p>

<h3>5.Not a java source folder</h3>

<p>A:以 maven-archetype-webapp 为原型新建工程，建好的工程没有 java 目录，于是在 src/main 下新建 java 目录，之后新建 Filter 或 Servlet 时提示 Not a java source folder.尝试右击 java 目录 > Build Path > Use as Source Folder 依然未生效，只得将目录删除恢复原状想其他办法。</p>

<p>于是选中工程 > Properties > Java Build Path > Source， 里面提示 src/main/java build path entries are missing, 嗯，有了新的线索，于是将这些丢失的入口都删除了，再重新创建 java source folder, 这样问题得到了解决，感觉这个问题像是 eclipse 的一个 bug.</p>

<!--more-->


<h3>6.Thymeleaf 如何支持遍历枚举</h3>

<p>A:</p>

<blockquote><p>The java.util.List class isn’t the onlyvalue that can be used for iteration in Thymeleaf. There is a quite complete set of objects that are considered iterable by a th:each attribute:</p>

<ul>
<li>Any object implementing java.util.Iterable</li>
<li>Any object implementing java.util.Enumeration .</li>
<li>Any object implementing java.util.Iterator , whose values will be used as they are returned by the iterator, without the need to cache all values in memory.</li>
<li>Any object implementing java.util.Map . When iterating maps, iter variables will be of class java.util.Map.Entry . Any array.</li>
<li>Any other object will be treated as if it were a single-valued list containing the object itself.</li>
</ul>
</blockquote>

<p>上面就是可选方案，一开始我没看仔细，以为 Enumeration 可以直接遍历，之后细看是实现 java.util.Enumeration 的对象，这样综合来看将 Enumeration 转化成 List 是不错的选择。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">th:each=</span><span class="s">&quot;attr: ${java.util.Collections.list(#httpServletRequest.attributeNames)}&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://github.com/thymeleaf/thymeleaf/issues/321">please allow to iterate java.util.Enumeration</a></p>

<h3>7.Call method with iter vaiable as argument in thymeleaf</h3>

<p>A:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;ul</span> <span class="na">th:each=</span><span class="s">&quot;name : ${names}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li</span>
</span><span class='line'>      <span class="na">th:text=</span><span class="s">&quot;|${name} = ${#session.getAttribute(</span>
</span><span class='line'><span class="s">      name )}|&quot;</span><span class="nt">&gt;</span>uid
</span><span class='line'>      = 502<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="http://forum.thymeleaf.org/invoking-a-method-on-model-with-parameter-td4026846.html">invoking a method on model with parameter</a></p>

<h3>8.Hiding text using text-indent</h3>

<p>A:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;style </span><span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">h1</span> <span class="nt">a</span> <span class="p">{</span>
</span><span class='line'><span class="err">    </span><span class="k">text-decoration</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'><span class="err">    </span><span class="k">position</span><span class="o">:</span> <span class="k">absolute</span><span class="p">;</span> <span class="c">/* Depending on your placement */</span>
</span><span class='line'><span class="err">    </span><span class="k">width</span><span class="o">:</span> <span class="m">260px</span><span class="p">;</span>
</span><span class='line'><span class="err">    </span><span class="k">height</span><span class="o">:</span> <span class="m">100px</span><span class="p">;</span>
</span><span class='line'><span class="err">    </span><span class="k">bottom</span><span class="o">:</span> <span class="m">0px</span><span class="p">;</span> <span class="c">/* Depending on your placement */</span>
</span><span class='line'><span class="err">    </span><span class="k">background</span><span class="o">:</span> <span class="sx">url(images/aext-logo.png)</span> <span class="k">no-repeat</span> <span class="k">left</span> <span class="k">top</span><span class="p">;</span>
</span><span class='line'><span class="err">    </span><span class="k">text-indent</span><span class="o">:</span> <span class="m">-99999px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/style&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://aext.net&quot;</span><span class="nt">&gt;</span>AEXT.NET<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在尝试过程中发现要设置 width 和 height 才能生效，可以注意下。</p>

<p>Reference:<a href="http://bloggingexperiment.com/css-text-indent-style-your-html-form">CSS text-indent: An Excellent Trick To Style Your HTML Form</a></p>

<h3>9.SEVERE: Exception starting filter</h3>

<p>A:详细错误信息如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Apr 08, 2018 10:28:48 AM org.apache.catalina.core.StandardContext filterStart
</span><span class='line'>SEVERE: Exception starting filter [DispatchFilter]
</span><span class='line'>java.lang.ClassNotFoundException: com.tenneshop.bookmark.web.filter.DispatchFilter
</span><span class='line'>  at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1291)
</span><span class='line'>  at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1119)
</span><span class='line'>  at org.apache.catalina.core.DefaultInstanceManager.loadClass(DefaultInstanceManager.java:544)
</span><span class='line'>  at org.apache.catalina.core.DefaultInstanceManager.loadClassMaybePrivileged(DefaultInstanceManager.java:525)
</span><span class='line'>  at org.apache.catalina.core.DefaultInstanceManager.newInstance(DefaultInstanceManager.java:150)
</span><span class='line'>  at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:264)
</span><span class='line'>  at org.apache.catalina.core.ApplicationFilterConfig.<span class="nt">&lt;init&gt;</span>(ApplicationFilterConfig.java:108)
</span><span class='line'>  at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:4590)
</span><span class='line'>  at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5233)
</span><span class='line'>  at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
</span><span class='line'>  at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1419)
</span><span class='line'>  at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)
</span><span class='line'>  at java.util.concurrent.FutureTask.run(FutureTask.java:266)
</span><span class='line'>  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
</span><span class='line'>  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
</span><span class='line'>  at java.lang.Thread.run(Thread.java:745)
</span><span class='line'>
</span><span class='line'>Apr 08, 2018 10:28:48 AM org.apache.catalina.core.StandardContext startInternal
</span><span class='line'>SEVERE: One or more Filters failed to start. Full details will be found in the appropriate container log file
</span><span class='line'>Apr 08, 2018 10:28:48 AM org.apache.catalina.core.StandardContext startInternal
</span><span class='line'>SEVERE: Context [/bookmark] startup failed due to previous errors
</span></code></pre></td></tr></table></div></figure>


<p>从错误信息来看问题的原因是类找不到，于是可以到部署的目标路径下确认 <code>com.tenneshop.bookmark.web.filter.DispatchFilter</code>是否存在。从 eclipse 输出的 debug 日志中找到部署的目标路径：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Apr 08, 2018 10:28:38 AM org.apache.catalina.startup.VersionLoggerListener log
</span><span class='line'>INFO: Command line argument: -Dwtp.deploy=/Users/dongmeiliang/eclipse-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps
</span></code></pre></td></tr></table></div></figure>


<p>发现类确实不存在，重新 <code>$ mvn compile</code> 之后问题解决。回想下发觉问题产生的原因是我在终端 <code>$ mvn clean</code>，然后在 eclipse 中 refresh  project ，最后直接就 debug on server 导致没有包含编译的类。</p>

<p>Reference:<a href="https://stackoverflow.com/questions/32692321/tomcat-severe-exception-starting-filter-corsfilter-classnotfoundexception">Tomcat SEVERE: Exception starting filter CorsFilter, ClassNotFoundException</a></p>

<h3>10.如何改变 server context path?</h3>

<p>A:用 mvn 新建工程时，artifactId 写成了 package name，之后在访问 web 时就略显尴尬，可以通过 Window > Show View > Servers > Double click specific server > Modules > Edit target web module。</p>

<h3>11.Eclipse error: “The import XXX cannot be resolved”</h3>

<p>A:With me it helped changing the compiler compliance level. For unknown reasons it was set to 1.6 and I changed it to 1.8.
Once at project level right click on project > Properties > Java Compiler, while in Eclipse click on menu Window > Preferences > Java > Compiler.</p>

<p>Reference:<a href="https://stackoverflow.com/questions/4322893/eclipse-error-the-import-xxx-cannot-be-resolved">Eclipse error: “The import XXX cannot be resolved”</a></p>

<h3>12.Index downloads are disabled, search result may be incomplete.</h3>

<p>A:</p>

<ol>
<li>In Eclipse, click <strong>on Windows > Preferences</strong>, and then choose <strong>Maven</strong> in the left side.</li>
<li>Check the box &ldquo;<strong>Download repository index updates on startup</strong>&rdquo;.</li>
<li>Optionally, check the boxes <strong>Download Artifact Sources</strong> and <strong>Download Artifact JavaDoc</strong>.</li>
<li>Click <strong>OK</strong>. The warning won&rsquo;t appear anymore.</li>
<li>Restart Eclipse.</li>
</ol>


<p>Reference:<a href="https://stackoverflow.com/questions/24252256/how-do-i-enable-index-downloads-in-eclipse-for-maven-dependency-search">How do I enable index downloads in Eclipse for Maven dependency search? </a></p>

<h3>13.How to Iterate Over a Map in Java</h3>

<p>A:There are at least 4 method to iterate over a map, one is Iterating over entries using For-Each loop.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Map</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;();</span>
</span><span class='line'><span class="k">for</span> <span class="o">(</span><span class="n">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">entry</span> <span class="o">:</span> <span class="n">map</span><span class="o">.</span><span class="na">entrySet</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Key = &quot;</span> <span class="o">+</span> <span class="n">entry</span><span class="o">.</span><span class="na">getKey</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;, Value = &quot;</span> <span class="o">+</span> <span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">());</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="http://www.sergiy.ca/how-to-iterate-over-a-map-in-java/">How to Iterate Over a Map in Java</a></p>

<h3>14.How to get the row count of ResultSet?</h3>

<p>A:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Statement</span> <span class="n">s</span> <span class="o">=</span> <span class="n">cd</span><span class="o">.</span><span class="na">createStatement</span><span class="o">();</span>
</span><span class='line'><span class="n">ResultSet</span> <span class="n">r</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">(</span><span class="s">&quot;SELECT COUNT(*) AS rowcount FROM FieldMaster&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">r</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
</span><span class='line'><span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">&quot;rowcount&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">r</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;MyTable has &quot;</span> <span class="o">+</span> <span class="n">count</span> <span class="o">+</span> <span class="s">&quot; row(s).&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://stackoverflow.com/questions/7886462/how-to-get-row-count-using-resultset-in-java">How to get row count using ResultSet in Java?</a></p>

<h3>15.How to Generate random words in Java?</h3>

<p>A:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span><span class="o">[]</span> <span class="nf">generateRandomWords</span><span class="o">(</span><span class="kt">int</span> <span class="n">numberOfWords</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="n">String</span><span class="o">[]</span> <span class="n">randomStrings</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">numberOfWords</span><span class="o">];</span>
</span><span class='line'>    <span class="n">Random</span> <span class="n">random</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Random</span><span class="o">();</span>
</span><span class='line'>    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">numberOfWords</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="kt">char</span><span class="o">[]</span> <span class="n">word</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span><span class="o">[</span><span class="n">random</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="mi">8</span><span class="o">)+</span><span class="mi">3</span><span class="o">];</span> <span class="c1">// words of length 3 through 10. (1 and 2 letter words are boring.)</span>
</span><span class='line'>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">word</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="n">word</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="o">(</span><span class="kt">char</span><span class="o">)(</span><span class="sc">&#39;a&#39;</span> <span class="o">+</span> <span class="n">random</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="mi">26</span><span class="o">));</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">randomStrings</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">String</span><span class="o">(</span><span class="n">word</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">randomStrings</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://stackoverflow.com/questions/4951997/generating-random-words-in-java">Generating random words in Java?</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to setup a L2TP/IPsec VPN on Debian 8]]></title>
    <link href="http://DamianSheldon.github.io/blog/how-to-setup-an-l2tp-slash-ipsec-vpn-on-debian-8.html"/>
    <updated>2017-10-11T08:32:44+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/how-to-setup-an-l2tp-slash-ipsec-vpn-on-debian-8</id>
    <content type="html"><![CDATA[<p>一直以来都想搭个 L2TP/IPSec VPN， 这样我的设备(主要是 iPhone 和 Mac)就可以不用安装第三方应用就能科学上网了。某天在 Github 上看到一个<a href="https://github.com/StreisandEffect/streisand">库</a>汇总了大多数 VPN 方案，于是就从中选择了 Libreswan。</p>

<p>现在回想起来过程还挺曲折，花费了不少时间，所以这里记下来，一来可以供自己日后查看；二来可以给有需要的网友提供参考。Libreswan 的文档不多，也没有很好的入门示例，对像我这样的新手来说确实不能说很友好。</p>

<p>我用的是 digitalocean 家的 vps,总体感觉不错，是个人开发者不错的选择，可以使用<a href="https://m.do.co/c/537dc7bd8a78">优惠码</a>购买，这样你可以获赠 10 美元。</p>

<p>首先是安装 Libreswan，我们可以使用 Debian 提供的预编译好的二进制包安装；也可以从源码安装。我当时搜索安装包没搜到，就使用了编译源码安装，今天又尝试搜索了下却搜到了，不清楚当日是什么原因，推荐使用预编译好的二进制包安装，简单省事。</p>

<p>然后是配置 Libreswan，这是过程中最复杂的部分，Libreswan 支持多种认证方式：PreShared Key with IDs (or IPs as ID)；Raw RSA public keys；X.509 Certificates。它也提供了好几个配置示例，可以在它 <a href="https://libreswan.org/wiki/Main_Page">Main Wiki Page</a> 页面的 User Documentation 部分的 Configuration examples 里面找到，我一开始使用的是 <strong>VPN server for remote clients using IKEv2</strong>，经过一翻折腾，服务器反馈隧道建立成功，但终端死活显示连接失败，之后又尝试通过创建 .mobileconfig 文件来配置 VPN 也失败了。后面我又看到了 <strong>VPN server for remote clients using IKEv1 XAUTH with PSK</strong>，它提到支持 <em>All Apple iphones, ipads</em> 和 <em>macOS</em>，所以我又参照这种方法来尝试，事实证明这种方法是可行的，但是官方文档里面的配置有点点小问题。
幸好 Libreswan 提供了很多命令，可以使用 <code>ipsec --help</code> 查看完整的命令列表，我们可以用这些命令来帮助我们配置。</p>

<!--more-->


<p>详细的配置过程如下：</p>

<p>首先我们要确认 Libreswan 的运行状态，这可以通过 <code>ipsec status</code> 命令得到，如果服务没启动，我们可以使用 <code>ipsec start</code> 启动，之后可以使用 <code>ipsec verify</code> 确认系统和配置文件有没有问题，有问题可以根据提示依次解决。没有问题之后我们添加连接配置。</p>

<p>我的主配置文件如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># /etc/ipsec.conf - Libreswan IPsec configuration file
</span><span class='line'>#
</span><span class='line'># Manual:     ipsec.conf.5
</span><span class='line'>
</span><span class='line'>config setup
</span><span class='line'>  # Normally, pluto logs via syslog. If you want to log to a file,
</span><span class='line'>  # specify below or to disable logging, eg for embedded systems, use
</span><span class='line'>  # the file name /dev/null
</span><span class='line'>  # Note: SElinux policies might prevent pluto writing to a log file at
</span><span class='line'>  #       an unusual location.
</span><span class='line'>  #logfile=/var/log/pluto.log
</span><span class='line'>  #
</span><span class='line'>  # Do not enable debug options to debug configuration issues!
</span><span class='line'>  #
</span><span class='line'>  # plutodebug "all", "none" or a combation from below:
</span><span class='line'>  # "raw crypt parsing emitting control controlmore kernel pfkey
</span><span class='line'>  #  natt x509 dpd dns oppo oppoinfo private".
</span><span class='line'>  # Note: "private" is not included with "all", as it can show confidential
</span><span class='line'>  #       information. It must be specifically specified
</span><span class='line'>  # examples:
</span><span class='line'>  # plutodebug="control parsing"
</span><span class='line'>  # plutodebug="all crypt"
</span><span class='line'>  # Again: only enable plutodebug when asked by a developer
</span><span class='line'>  #plutodebug=none
</span><span class='line'>  #
</span><span class='line'>  # NAT-TRAVERSAL support
</span><span class='line'>  # exclude networks used on server side by adding %v4:!a.b.c.0/24
</span><span class='line'>  # It seems that T-Mobile in the US and Rogers/Fido in Canada are
</span><span class='line'>  # using 25/8 as "private" address space on their wireless networks.
</span><span class='line'>  # This range has never been announced via BGP (at least up to 2015)
</span><span class='line'>  virtual_private=%v4:10.0.0.0/8,%v4:192.168.0.0/16,%v4:172.16.0.0/12,%v4:25.0.0.0/8,%v4:100.64.0.0/10,%v6:fd00::/8,%v6:fe80::/10
</span><span class='line'>  # PSK clients can have the same ID if they send it based on IP address.
</span><span class='line'>        uniqueids=no
</span><span class='line'>
</span><span class='line'># For example connections, see your distribution's documentation directory,
</span><span class='line'># or https://libreswan.org/wiki/
</span><span class='line'>#
</span><span class='line'># There is also a lot of information in the manual page, "man ipsec.conf"
</span><span class='line'>#
</span><span class='line'># It is best to add your IPsec connections as separate files in /etc/ipsec.d/
</span><span class='line'>include /etc/ipsec.d/*.conf</span></code></pre></td></tr></table></div></figure>


<p> 新建 IKEv1 XAUTH with PSK 连接配置文件 /etc/ipsec.d/xauth-psk.conf 内容如下：</p>

<pre><code class="`"> conn xauth-psk
    authby=secret
    pfs=no
    auto=add
    rekey=no
    left=%defaultroute
    leftsubnet=0.0.0.0/0
    rightaddresspool=10.231.247.10-10.231.247.254
    right=%any
    # make cisco clients happy
    cisco-unity=yes
    # address of your internal DNS server
    #modecfgdns1=10.231.247.1
    modecfgdns1=8.8.8.8
    modecfgdns2=193.110.157.123
    leftxauthserver=yes
    rightxauthclient=yes
    leftmodecfgserver=yes
    rightmodecfgclient=yes
    modecfgpull=yes
    #configure pam via /etc/pam.d/pluto
    #xauthby=pam
    xauthby=file
    # xauthby=alwaysok MUST NOT be used with PSK
    # Can be played with below
    #dpddelay=30
    #dpdtimeout=120
    #dpdaction=clear
    xauthfail=soft
    ike-frag=yes
    ikev2=never
</code></pre>

<p> 新建 /etc/ipsec.d/xauth-psk.secrets 存储 PSK 内容如下：</p>

<pre><code class="`"> # If this is the only IP and only PSK based configuration, you can configure without hardcoding the IP:
: PSK "ExampleSecret"
</code></pre>

<p> 新建 /etc/ipsec.d/passwd 存储用于认证的用户名密码，示例如下：</p>

<pre><code class="`"> john:$1$5h/bAg4p$Q5/c2XjwSzYy3sh/1j8Bp/:xauth-psk
paul:$1$YiVSo114$um2oIM6AqucFuMeXl/1ab0:xauth-psk
</code></pre>

<p>为了能通过 VPN 访问整个互联网，还需要提供一些 NAT 规则:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Note: you should replace $INTERNET_INTERFACE with your internet facing interface.
</span><span class='line'># Note: this line handles maquerade for both 10.231.246.0/24 and 10.231.247.0/24
</span><span class='line'>
</span><span class='line'>iptables -t nat -A POSTROUTING -s 10.231.246.0/23 -o $INTERNET_INTERFACE -m policy --dir out --pol none -j MASQUERADE
</span></code></pre></td></tr></table></div></figure>


<p>我的外网网卡是 eth0，所以我执行命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#iptables -t nat -A POSTROUTING -s 10.231.246.0/23 -o eth0 -m policy --dir out --pol none -j MASQUERADE
</span><span class='line'>
</span><span class='line'>// Check it
</span><span class='line'># iptables -L --table nat
</span><span class='line'>
</span><span class='line'>// Save it 
</span><span class='line'># iptables-save</span></code></pre></td></tr></table></div></figure>


<p>有时我们可能会遇到连接问题，这时可以在主配置文件 <code>/etc/ipsec.conf</code> 中开启 <code>plutodebug=all</code>，然后就可以使用 <code>ipsec barf | tac | head -n 100</code> 查看服务日志，帮助定位连接问题。解决问题之后再使用 <code>plutodebug=none</code> 关闭调试模式，之后 <code>ipsec restart</code> 重启生效。</p>

<h2>iPhone 客户端配置</h2>

<p>Settings > General > VPN > add VPN Configuration > IPSec.</p>

<p>Fill in the description, server (name or IP), Account (aka username), Password and Secret (aka PSK). For PSK connection you MUST NOT enter a Group Name.</p>

<p><img src="../images/200px-IOSXAUTHPSK0.png" alt="iOS XAUTH PSK0" /></p>

<p><img src="../images/200px-IOSXAUTHPSK1.png" alt="iOS XAUTH PSK1" /></p>

<p><img src="../images/200px-IOSXAUTHPSK3.png" alt="iOS XAUTH PSK3" /></p>

<h2>macOS 客户端配置</h2>

<p>System Preferences > Network > + > Interface: VPN > VPN Type: Cisco IPSec</p>

<p><img src="../images/macos-xauth-psk0.png" alt="macOS XAUTH PSK0" /></p>

<p><img src="../images/macos-xauth-psk1.png" alt="macOS XAUTH PSK1" /></p>

<h2>Reference:</h2>

<p><a href="https://libreswan.org/wiki/VPN_server_for_remote_clients_using_IKEv1_XAUTH_with_PSK">VPN server for remote clients using IKEv1 XAUTH with PSK</a><br/>
<a href="https://libreswan.org/wiki/VPN_server_for_remote_clients_using_IKEv2">VPN server for remote clients using IKEv2</a> <br/>
<a href="https://libreswan.org/man/ipsec.conf.5.html">ipsec.conf.5</a><br/>
<a href="https://github.com/libreswan/libreswan/issues/47">Mac OS IKEv2 missing payload(s) (ISAKMP_NEXT_v2AUTH)</a><br/>
<a href="https://wiki.strongswan.org/projects/strongswan/wiki/AppleIKEv2Profile">IKEv2 Configuration Profile for Apple iOS 8 and newer</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[圆锥渐变的一种简单实现]]></title>
    <link href="http://DamianSheldon.github.io/blog/a-simple-conical-gradient-on-ios.html"/>
    <updated>2017-09-22T15:59:35+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/a-simple-conical-gradient-on-ios</id>
    <content type="html"><![CDATA[<p>Core Graphics 支持两种渐变：线性(Axial)和径向(Radial)渐变，但是有的时候我们可能会用到圆锥(Conical)渐变，例如在扫描附近的目标时，交互可能用上带这种渐变的雷达效果，它长这样：</p>

<p><img src="../images/Conical-1.png" title="'Conical-1'" ><br/>
<img src="../images/Conical-2.png" title="'Conical-2'" ></p>

<p>要实现这样一种渐变你会怎么做呢？我的想法是从渐变的本质着手。渐变是从一种颜色渐渐变化成另外一种颜色，而圆锥渐变是根据角度渐渐变化。我们把界面看成位图，这样可以由点的位置得到它的角度，继而根据角度线性插值可以得到它的颜色，最终就可以得到圆锥渐变。</p>

<p>想法有了，接下来我们用它来实现上图中 Find My iPhone 图标的雷达效果吧。</p>

<p>首先定义一个 CALayer 的子类 ConicalLayer，</p>

<!--more-->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// ConicalLayer.h
</span><span class='line'>@interface ConicalLayer : CALayer
</span><span class='line'>
</span><span class='line'>/// An array of CGColorRef objects defining the color of each gradient stop. 
</span><span class='line'>@property(copy) NSArray *colors;
</span><span class='line'>
</span><span class='line'>@end
</span><span class='line'>
</span><span class='line'>// ConicalLayer.m
</span><span class='line'>- (id)init
</span><span class='line'>{
</span><span class='line'>    if (!(self = [super init])) {
</span><span class='line'>        return nil;
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>    _needsDisplayOnBoundsChange = YES;
</span><span class='line'>    
</span><span class='line'>    return self;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)drawInContext:(CGContextRef)ctx
</span><span class='line'>{
</span><span class='line'>    // Draw background
</span><span class='line'>    CGRect rect = CGContextGetClipBoundingBox(ctx);
</span><span class='line'>    CGContextSetFillColorWithColor(ctx, self.backgroundColor);
</span><span class='line'>    CGContextFillRect(ctx, rect);
</span><span class='line'>    
</span><span class='line'>    if (self.colors.count &lt; 1) {
</span><span class='line'>        return;
</span><span class='line'>    }
</span><span class='line'>    else if (self.colors.count &lt; 2) {
</span><span class='line'>        // There is only one color so directly draw with it
</span><span class='line'>        CGColorRef color = (__bridge CGColorRef)(self.colors.firstObject);
</span><span class='line'>        CGContextSetFillColorWithColor(ctx, color);
</span><span class='line'>        CGContextFillRect(ctx, rect);
</span><span class='line'>        return;
</span><span class='line'>    }
</span><span class='line'>        
</span><span class='line'>    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
</span><span class='line'>    
</span><span class='line'>    size_t width = rect.size.width;
</span><span class='line'>    size_t height = rect.size.height;
</span><span class='line'>    
</span><span class='line'>    size_t bitsPerCompoent = 8;
</span><span class='line'>    size_t bytesPerRow = width * 4;
</span><span class='line'>    
</span><span class='line'>    size_t bitmapByteCount = bytesPerRow * height;
</span><span class='line'>    
</span><span class='line'>    uint32_t *bitmapData = calloc( bitmapByteCount / sizeof(uint32_t), sizeof(uint32_t) );
</span><span class='line'>
</span><span class='line'>    // Map color to linear array each compoent occupy 1 byte
</span><span class='line'>    uint8_t *colorCompoents = calloc(self.colors.count * 4, sizeof(uint8_t));
</span><span class='line'>    
</span><span class='line'>    for (int i = 0; i &lt; self.colors.count; ++i) {
</span><span class='line'>        CGColorRef c = (__bridge CGColorRef)(self.colors[i]);
</span><span class='line'>        
</span><span class='line'>        const CGFloat *compoents = CGColorGetComponents(c);
</span><span class='line'>        
</span><span class='line'>        uint8_t red = compoents[0] * 255;
</span><span class='line'>        uint8_t green = compoents[1] * 255;
</span><span class='line'>        uint8_t blue = compoents[2] * 255;
</span><span class='line'>        uint8_t alpha = compoents[3] * 255;
</span><span class='line'>        
</span><span class='line'>        int index = i * 4;
</span><span class='line'>        *(colorCompoents + index) = red;
</span><span class='line'>        *(colorCompoents + index + 1) = green;
</span><span class='line'>        *(colorCompoents + index + 2) = blue;
</span><span class='line'>        *(colorCompoents + index + 3) = alpha;
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>    // Creating a Bitmap Graphics Context for conical gradient
</span><span class='line'>    CGBitmapInfo bitmapInfo = kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Little;
</span><span class='line'>
</span><span class='line'>    CGContextRef bitmapGraphicsCtx = CGBitmapContextCreate(bitmapData, width, height, bitsPerCompoent, bytesPerRow, colorSpace, bitmapInfo);
</span><span class='line'>    
</span><span class='line'>    // Creating conical gradient from a Bitmap Graphics Context
</span><span class='line'>    CGImageRef conicalGradientImage = CGBitmapContextCreateImage(bitmapGraphicsCtx);
</span><span class='line'>    
</span><span class='line'>    CGContextRelease(bitmapGraphicsCtx);
</span><span class='line'>    
</span><span class='line'>    free(colorCompoents);
</span><span class='line'>    
</span><span class='line'>    free(bitmapData);
</span><span class='line'>    
</span><span class='line'>    CGColorSpaceRelease(colorSpace);
</span><span class='line'>    
</span><span class='line'>    // Draws conical gradient image into a graphics context.
</span><span class='line'>    CGContextDrawImage(ctx, rect, conicalGradientImage);
</span><span class='line'>    
</span><span class='line'>    CGImageRelease(conicalGradientImage);
</span><span class='line'>    
</span><span class='line'>    // Draws three concentric
</span><span class='line'>    CGContextBeginPath(ctx);
</span><span class='line'>    
</span><span class='line'>    CGFloat halfWidth = 0.5 * CGRectGetWidth(rect);
</span><span class='line'>    CGFloat maxRadii = 0.8 * halfWidth;
</span><span class='line'>    CGFloat radii = floor(0.33 * maxRadii);
</span><span class='line'>    
</span><span class='line'>    for (int i = 1; i &lt; 4; ++i) {
</span><span class='line'>        CGFloat r = radii * i;
</span><span class='line'>        CGFloat dx = halfWidth - r;
</span><span class='line'>        CGRect ellipseRect = CGRectInset(rect, dx, dx);
</span><span class='line'>        
</span><span class='line'>        CGContextAddEllipseInRect(ctx, ellipseRect);
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>    CGContextSetRGBStrokeColor(ctx, 41/255.0, 234/255.0, 35/255.0, 1.0);
</span><span class='line'>    CGContextStrokePath(ctx);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (BOOL)needsDisplayOnBoundsChange
</span><span class='line'>{
</span><span class='line'>    return _needsDisplayOnBoundsChange;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)setNeedsDisplayOnBoundsChange:(BOOL)needsDisplayOnBoundsChange
</span><span class='line'>{
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>现在我们把架子搭起来了，但是还没有往位图里面填充颜色，在这之前，对这段代码稍作解释，首先是我覆盖了needsDisplayOnBoundsChange 属性的 getter 和 setter 方法，原因是我设置图层关联的背景颜色时会触发这个属性变 NO，导致 <code>drawInContext</code> 不会被调用，我认为这是 Apple 的一个 bug，已经作了反馈，所以这里我使用了这么一个绕过的方法。</p>

<p>其次，我把 RGB 颜色空间的颜色分量取出来放在了一个一维数组里用来备用；最后是 bitmapInfo 要或上 kCGBitmapByteOrder32Little，不然结果会不正确。</p>

<p>接下来就是要填充位图的颜色，代码如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// Create conical gradient bitmap data
</span><span class='line'>CGFloat centerX = width * 0.5;
</span><span class='line'>CGFloat centerY = height * 0.5;
</span><span class='line'>
</span><span class='line'>double baseAngle = 2*M_PI / (self.colors.count - 1);
</span><span class='line'>    
</span><span class='line'>for (int i = 0; i &lt; height; ++i) {
</span><span class='line'>    for (int j = 0; j &lt; width; ++j) {
</span><span class='line'>        CGFloat x = j - centerX;
</span><span class='line'>        CGFloat y = i - centerY;
</span><span class='line'>        
</span><span class='line'>        // define atan2 uniquely one uses the principal value in the range (−π, π]. That is, −π &lt; atan2(y, x) ≤ π.
</span><span class='line'>        double angle = atan2(y, x);
</span><span class='line'>        
</span><span class='line'>        // Convert atan2 result angle to range [0, 2π]
</span><span class='line'>        if (angle &lt; 0) {
</span><span class='line'>            angle += 2 * M_PI;
</span><span class='line'>        }
</span><span class='line'>        
</span><span class='line'>        // 0-360 map to linear gradient
</span><span class='line'>        double angleRatio = angle / baseAngle;
</span><span class='line'>        int colorIndex = angleRatio; // How many times of base angle?
</span><span class='line'>        
</span><span class='line'>        angle -= colorIndex * baseAngle;
</span><span class='line'>        angleRatio = angle / baseAngle;
</span><span class='line'>        
</span><span class='line'>        colorIndex *= 4;
</span><span class='line'>        
</span><span class='line'>        uint8_t red0 = colorCompoents[colorIndex];
</span><span class='line'>        uint8_t red1 = colorCompoents[colorIndex + 4];
</span><span class='line'>        
</span><span class='line'>        // Green index
</span><span class='line'>        colorIndex += 1;
</span><span class='line'>        uint8_t green0 = colorCompoents[colorIndex];
</span><span class='line'>        uint8_t green1 = colorCompoents[colorIndex + 4];
</span><span class='line'>        
</span><span class='line'>        // Blue index
</span><span class='line'>        colorIndex += 1;
</span><span class='line'>        uint8_t blue0 = colorCompoents[colorIndex];
</span><span class='line'>        uint8_t blue1 = colorCompoents[colorIndex + 4];
</span><span class='line'>        
</span><span class='line'>        // Alpha index
</span><span class='line'>        colorIndex += 1;
</span><span class='line'>        uint8_t alpha0 = colorCompoents[colorIndex];
</span><span class='line'>        uint8_t alpha1 = colorCompoents[colorIndex + 4];
</span><span class='line'>        
</span><span class='line'>//            uint8_t red = red0 + angleRatio * (red1 - red0);
</span><span class='line'>//            uint8_t green = green0 + angleRatio * (green1 - green0);
</span><span class='line'>//            uint8_t blue = blue0 + angleRatio * (blue1 - blue0);
</span><span class='line'>//            uint8_t alpha = alpha0 + angleRatio * (alpha1 - alpha0);
</span><span class='line'>        
</span><span class='line'>        uint8_t red = lerp(red0, red1, angleRatio);
</span><span class='line'>        uint8_t green = lerp(green0, green1, angleRatio);
</span><span class='line'>        uint8_t blue = lerp(blue0, blue1, angleRatio);
</span><span class='line'>        uint8_t alpha = lerp(alpha0, alpha1, angleRatio);
</span><span class='line'>        
</span><span class='line'>        // Multiple alpha
</span><span class='line'>        float a = alpha / 255.0;
</span><span class='line'>        
</span><span class='line'>        red *= a;
</span><span class='line'>        green *= a;
</span><span class='line'>        blue *= a;
</span><span class='line'>        
</span><span class='line'>        unsigned long index = i * width + j;
</span><span class='line'>        
</span><span class='line'>        *(bitmapData + index) = (red &lt;&lt; 24) | (green &lt;&lt; 16) | (blue &lt;&lt; 8) | alpha;
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>同样也稍微解释下其中的代码，首先是位图的填充要按照先行后列的顺序，行对就宽，列对应高；其次反正切函数的值域是(−π, π]，所以要把它们映射到[0, 2π]；然后我们根据角度对应的区间，选择起始和终点颜色，再由线性插值得到各自的颜色分量，实践中每个颜色分量还乘上了当前的透明度，最后合成该点的颜色。</p>

<p><a href="https://github.com/DamianSheldon/QuartzDemo">完整示例</a></p>

<h2>Reference:</h2>

<p><a href="https://stackoverflow.com/questions/15344163/conical-gradient-in-qt-without-qconicalgradient">Conical gradient in Qt (without QConicalGradient)</a><br/>
<a href="https://github.com/maxkonovalov/MKGradientView">MKGradientView</a><br/>
<a href="https://en.wikipedia.org/wiki/Color_gradient">Color gradient</a><br/>
<a href="https://en.wikipedia.org/wiki/Linear_interpolation">Linear interpolation</a><br/>
<a href="https://en.wikipedia.org/wiki/Atan2">atan2</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 开发问题汇总(十)]]></title>
    <link href="http://DamianSheldon.github.io/blog/ios-development-problems-part-10.html"/>
    <updated>2017-09-11T15:42:24+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/ios-development-problems-part-10</id>
    <content type="html"><![CDATA[<h3>1.在iOS 中如何使用私钥加密数据？</h3>

<p>A:当你用私钥加密时它被称为 siging, 之后用公钥解密的过程称为 verify signature.</p>

<blockquote><p>Why are you encrypting with the private key? When you encrypt with the private key, that is considered signing not encrypting, becuase it provides no confidentiality. If you want to &ldquo;encrypt&rdquo; with the private key, look into data signing, and that should allow you to &ldquo;encrypt&rdquo; (read &ldquo;sign&rdquo;) with the private key and &ldquo;decrypt&rdquo; (read &ldquo;verify signature&rdquo;) with the public key.</p></blockquote>

<p>Reference:</p>

<p><a href="https://stackoverflow.com/questions/6705928/encrypting-data-with-a-private-key-on-ios">Encrypting data with a private key on iOS</a></p>

<h3>2.</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[!] Due to the previous naïve CocoaPods resolver, you were using a pre-release version of `JSONModel`, without explicitly asking for a pre-release version, which now leads to a conflict. Please decide to either use that pre-release version by adding the version requirement to your Podfile (e.g. `pod 'JSONModel', '= 1.2.2P'`) or revert to a stable version by running `pod update JSONModel`.</span></code></pre></td></tr></table></div></figure>


<p>A:今天打开一个旧的的工程，可能由于版本控制的原因，Pods 下的文件都被删除掉了，于是运行 <code>pod install --verbose</code>, 安装报了上面的错误。工程是一个公共库，之前都是好的，它依赖了一个私有版本的 JSONModel,这本来也没什么问题，居然报出这么一错误，挺奇怪的。按提示先显示指定版本，依旧报错，看来并不是这个原因；又运行 <code>pod update JSONModel</code>,有输出安装私有版本的 JSONModel 的日志，问题解决。不过不清楚为什么会出这种很诡异的问题。</p>

<h3>3.What is the use of entitlements.plist file?</h3>

<p>A:</p>

<blockquote><p>Entitlements confer specific capabilities or security permissions to your iOS or macOS app.</p></blockquote>

<ol>
<li>The entitlements file defines certain capabilities of your app. Usually, the file is automatically generated by Xcode when you enable a capability for your app.</li>
<li>You only need the file if you enable certain capabilities, e.g. Healthkit integration. If you&rsquo;d like to use these features, you have to add it. Otherwise, Apple will reject your app.</li>
<li>You can name the file like you want. You can also rename it as long as the build settings point to the correct file name for it.</li>
</ol>


<p>Reference:</p>

<p><a href="https://stackoverflow.com/questions/26594367/what-is-the-use-of-entitlements-plist-file">What is the use of entitlements.plist file?</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 中简单的图片处理]]></title>
    <link href="http://DamianSheldon.github.io/blog/simple-image-processing-in-ios.html"/>
    <updated>2017-07-14T09:49:40+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/simple-image-processing-in-ios</id>
    <content type="html"><![CDATA[<p>在 iOS 应用开发中，我们可能会要对图片进行旋转、缩放和裁剪，在介绍具体方法前，我们有必要先对图片做个大致的了解，这样有助于我们选择合适的方法。</p>

<h3>图片格式</h3>

<p>图片主要有两种格式：一种叫做位图；另一种称之为矢量图。所谓位图，就是把图片看成是由许多像素点组成；而矢量图则是用绘图指令来描述图片。举个例子，圆可以用圆点，半径，线条的粗细和颜色来描述它。从这个例子也可以看出用矢量图来描述风景，人物这样复杂的事物会比较复杂，所以它们通常会用位图来描述。</p>

<p>位图和矢量图也分为很多格式，具体可能查看<a href="https://en.wikipedia.org/wiki/Image_file_formats">Image file formats</a></p>

<p>下面我们讨论的是位图，在 iOS 中我们经常打交道的位图格式是 JPG 和 PNG，用来处理位图数据的类有：UIImage (UIKit)，CGImage (Core Graphics) 和 CIImage (Core Image)。Image I/O 本来是属于 Core Graphics，为了更加方便使用，Apple 将它分离出来成为单独的库。</p>

<h3>旋转</h3>

<p>既然位图是用一个一个的像素点来模拟图片，当我们想要旋转图片时，首先想到的方法自然是改变这些像素点的位置，这当然可以达到目标。要调整这么多像素点的位置自然要耗费不少时间，所有在数码相机刚出来那会，人们不是去改变像素点的位置，而是用一段数据来描述图片的方向等信息，这段数据称为 Exif. 所以对于 JPG 这种拥有 Exif 信息的位图，我们旋转图片的最佳做法自然是改变 Exif 里的方向信息。而 PNG 是没有 Exif 信息的，所以只能改变像素点的位置。</p>

<p>UIImage 自带了几个可以旋转的方法：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>+ (UIImage *)imageWithCGImage:(CGImageRef)cgImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation;
</span><span class='line'>
</span><span class='line'>+ (UIImage *)imageWithCIImage:(CIImage *)ciImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation;
</span><span class='line'>
</span><span class='line'>- (instancetype)initWithCGImage:(CGImageRef)cgImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation;
</span><span class='line'>
</span><span class='line'>- (instancetype)initWithCIImage:(CIImage *)ciImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation;</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>我们没有这个方法的实现源码，但是我们可以输出图片的 Exif 信息来验证上面的说法。iOS 中我们可以使用 Image I/O 这个库来读取和修改图片的 Exif 信息。Image I/O 的文档不是很详细，使用时最好结合头文件的说明，而且要注意区分容器和单个图片，实验表明像方向这种信息它并不是放在 Exif 中，而是图片属性中，它的值和 UIImageOrientation 也不是一一对应的，它们的关系如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>typedef NS_ENUM(NSInteger, DMLImagePropertyOrientation) {
</span><span class='line'>    DMLImagePropertyOrientationUp               = 1,
</span><span class='line'>    DMLImagePropertyOrientationDown             = 3,
</span><span class='line'>    DMLImagePropertyOrientationLeft             = 8,
</span><span class='line'>    DMLImagePropertyOrientationRight            = 6,
</span><span class='line'>    DMLImagePropertyOrientationUpMirrored       = 2,
</span><span class='line'>    DMLImagePropertyOrientationDownMirrored     = 4,
</span><span class='line'>    DMLImagePropertyOrientationLeftMirrored     = 5,
</span><span class='line'>    DMLImagePropertyOrientationRightMirrored    = 7
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>+ (DMLImagePropertyOrientation)dml_imagePropertyOrientationFromUIImageOrientation:(UIImageOrientation)imageOrientation
</span><span class='line'>{
</span><span class='line'>    DMLImagePropertyOrientation imagePropertyOrientation = DMLImagePropertyOrientationUp;
</span><span class='line'>    
</span><span class='line'>    switch (imageOrientation) {
</span><span class='line'>        case UIImageOrientationUp:
</span><span class='line'>            imagePropertyOrientation = DMLImagePropertyOrientationUp;
</span><span class='line'>            break;
</span><span class='line'>            
</span><span class='line'>        case UIImageOrientationDown:
</span><span class='line'>            imagePropertyOrientation = DMLImagePropertyOrientationDown;
</span><span class='line'>            break;
</span><span class='line'>            
</span><span class='line'>        case UIImageOrientationLeft:
</span><span class='line'>            imagePropertyOrientation = DMLImagePropertyOrientationLeft;
</span><span class='line'>            break;
</span><span class='line'>            
</span><span class='line'>        case UIImageOrientationRight:
</span><span class='line'>            imagePropertyOrientation = DMLImagePropertyOrientationRight;
</span><span class='line'>            break;
</span><span class='line'>            
</span><span class='line'>        case UIImageOrientationUpMirrored:
</span><span class='line'>            imagePropertyOrientation = DMLImagePropertyOrientationUpMirrored;
</span><span class='line'>            break;
</span><span class='line'>            
</span><span class='line'>        case UIImageOrientationDownMirrored:
</span><span class='line'>            imagePropertyOrientation = DMLImagePropertyOrientationDownMirrored;
</span><span class='line'>            break;
</span><span class='line'>            
</span><span class='line'>        case UIImageOrientationLeftMirrored:
</span><span class='line'>            imagePropertyOrientation = DMLImagePropertyOrientationLeftMirrored;
</span><span class='line'>            break;
</span><span class='line'>            
</span><span class='line'>        case UIImageOrientationRightMirrored:
</span><span class='line'>            imagePropertyOrientation = DMLImagePropertyOrientationRightMirrored;
</span><span class='line'>            break;
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>    return imagePropertyOrientation;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>从打印输出的内容看出 JPG 图片的方向确实改变了，然后我也写了个方法去改变图片的方向属性，得到了同样的效果，所以当我们是旋转上面提到的方向直接使用 UIImage 自带的几个旋转的方法应该是最佳选择，而要旋转任意角度，还是要通过调整像素点位置来完成。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 输出图片的属性信息
</span><span class='line'>- (UIImageOrientation)dml_imageOrientationFromExif
</span><span class='line'>{
</span><span class='line'>    UIImageOrientation imageOrientation = UIImageOrientationRightMirrored + 1;
</span><span class='line'>    
</span><span class='line'>    NSData *dataOfImage = UIImageJPEGRepresentation(self, (CGFloat)0.7);
</span><span class='line'>    
</span><span class='line'>    CGImageSourceRef imageSource = CGImageSourceCreateWithData((__bridge CFDataRef)dataOfImage, NULL);
</span><span class='line'>    
</span><span class='line'>    CFDictionaryRef imageProperties = CGImageSourceCopyPropertiesAtIndex(imageSource, 0, NULL);
</span><span class='line'>    
</span><span class='line'>    NSLog(@"dml_imageOrientationFromExif image Properties:%@\n", (__bridge NSDictionary *)imageProperties);
</span><span class='line'>    
</span><span class='line'>    CFRelease(imageSource);
</span><span class='line'>    
</span><span class='line'>    CFNumberRef numberOfImageOrientation = CFDictionaryGetValue(imageProperties, kCGImagePropertyOrientation);
</span><span class='line'>    
</span><span class='line'>    CFRelease(imageProperties);
</span><span class='line'>    
</span><span class='line'>    DMLImagePropertyOrientation imagePropertyOrientation = [(__bridge NSNumber *)numberOfImageOrientation integerValue];
</span><span class='line'>    
</span><span class='line'>    imageOrientation = [[self class] dml_uiimageOrientationFromImagePropertyOrientation:imagePropertyOrientation];
</span><span class='line'>    
</span><span class='line'>    return imageOrientation;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>// 修改图片的方向属性
</span><span class='line'>- (UIImage *)dml_setExifOritenation:(UIImageOrientation)imageOrientation error:(NSError * __autoreleasing *)error
</span><span class='line'>{
</span><span class='line'>    NSData *dataOfImage = UIImageJPEGRepresentation(self, (CGFloat)0.7);
</span><span class='line'>    
</span><span class='line'>    CGImageSourceRef imageSource = CGImageSourceCreateWithData((__bridge CFDataRef)dataOfImage, NULL);
</span><span class='line'>    
</span><span class='line'>    /* get the file type */
</span><span class='line'>    CFStringRef UTI = CGImageSourceGetType(imageSource);
</span><span class='line'>    if ( NULL == UTI ) {
</span><span class='line'>        /* Handle Error Retrieving File Type Accordingly */
</span><span class='line'>        if (error) {
</span><span class='line'>            *error = [NSError errorWithDomain:(__bridge NSString *)kCFErrorDomainCGImageMetadata code:kCGImageMetadataErrorUnknown userInfo:@{NSLocalizedDescriptionKey: @"Handle Error Retrieving File Type Accordingly"}];
</span><span class='line'>        }
</span><span class='line'>        return nil;
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>//    CFMutableDataRef finalImageData = (__bridge_retained CFMutableDataRef)dataOfImage.mutableCopy;
</span><span class='line'>    CFMutableDataRef finalImageData = (__bridge_retained CFMutableDataRef)[NSMutableData new];
</span><span class='line'>
</span><span class='line'>    /* create an image destination for saving the file */
</span><span class='line'>    CGImageDestinationRef destination = CGImageDestinationCreateWithData(finalImageData, UTI, 1, NULL);
</span><span class='line'>    if ( nil == destination ) {
</span><span class='line'>        /* Handle Error Creating CGImageDestinationRef Accordingly */
</span><span class='line'>        if (error) {
</span><span class='line'>            *error = [NSError errorWithDomain:(__bridge NSString *)kCFErrorDomainCGImageMetadata code:kCGImageMetadataErrorUnknown userInfo:@{NSLocalizedDescriptionKey: @"Handle Error Creating CGImageDestinationRef Accordingly"}];
</span><span class='line'>        }
</span><span class='line'>        return nil;
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>    /* setting properties */
</span><span class='line'>//    CFDictionaryRef sourceProperties = CGImageSourceCopyProperties(imageSource, NULL);
</span><span class='line'>    CFDictionaryRef sourceProperties = CGImageSourceCopyPropertiesAtIndex(imageSource, 0, NULL);
</span><span class='line'>
</span><span class='line'>    NSLog(@"dml_setExifOritenation original properties:%@\n", (__bridge NSDictionary *)sourceProperties);
</span><span class='line'>    
</span><span class='line'>    CFMutableDictionaryRef mutableSourceProperties = CFDictionaryCreateMutableCopy(kCFAllocatorDefault, CFDictionaryGetCount(sourceProperties) + 1, sourceProperties);
</span><span class='line'>    
</span><span class='line'>    DMLImagePropertyOrientation imagePropertyOrientation = [[self class] dml_imagePropertyOrientationFromUIImageOrientation:imageOrientation];
</span><span class='line'>    
</span><span class='line'>    CFNumberRef numberForOritentation = CFNumberCreate(kCFAllocatorDefault, kCFNumberNSIntegerType, &imagePropertyOrientation);
</span><span class='line'>
</span><span class='line'>    CFDictionarySetValue(mutableSourceProperties, kCGImagePropertyOrientation, numberForOritentation);
</span><span class='line'>    
</span><span class='line'>    NSLog(@"dml_setExifOritenation edited properties:%@\n", (__bridge NSDictionary *)mutableSourceProperties);
</span><span class='line'>    
</span><span class='line'>    CGImageDestinationAddImageFromSource(destination, imageSource, 0, mutableSourceProperties);
</span><span class='line'>    CGImageDestinationFinalize(destination);
</span><span class='line'>    
</span><span class='line'>    UIImage *resultImage = [UIImage imageWithData:(__bridge NSData *)finalImageData];
</span><span class='line'>    
</span><span class='line'>    CFRelease(numberForOritentation);
</span><span class='line'>    
</span><span class='line'>    CFRelease(mutableSourceProperties);
</span><span class='line'>    
</span><span class='line'>    CFRelease(sourceProperties);
</span><span class='line'>    
</span><span class='line'>    // Print destination properties
</span><span class='line'>    
</span><span class='line'>    NSData *dataOfDestinationImage = UIImageJPEGRepresentation(resultImage, (CGFloat)0.7);
</span><span class='line'>    
</span><span class='line'>    CGImageSourceRef destinationImageSource = CGImageSourceCreateWithData((__bridge CFDataRef)dataOfDestinationImage, NULL);
</span><span class='line'>    
</span><span class='line'>    CFDictionaryRef properties = CGImageSourceCopyPropertiesAtIndex(destinationImageSource, 0, NULL);
</span><span class='line'>
</span><span class='line'>    NSLog(@"destination properties:%@\n", (__bridge NSDictionary *)properties);
</span><span class='line'>    
</span><span class='line'>    CFRelease(properties);
</span><span class='line'>    CFRelease(destinationImageSource);
</span><span class='line'>    
</span><span class='line'>    return resultImage;
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>PS.理论上来讲，我们可以使用 <code>void CGImageDestinationSetProperties(CGImageDestinationRef idst, CFDictionaryRef properties);</code> 搭配 <code>bool CGImageDestinationCopyImageSource(CGImageDestinationRef idst, CGImageSourceRef isrc, CFDictionaryRef options, CFErrorRef  _Nullable *err);</code> 来改变图片的属性的，实际实验中并没有达到预期效果，原因不明。</p>

<h3>缩放</h3>

<p>上面提到 UIImage 的旋转方法也可以指定 Scale 因子，它是我们常说的几倍图中这个几倍因子，如果图片本来是一倍图，然后我们欺骗这个方法说是0.5倍图，那么我们会得到一张放大2倍的图，以些类推，所以我们可以考虑用这个方法来满足我们的一些简单需求，不能满足时，我们可以用 Core Graphics 将图片画到目标大小的位图上下文中来得到我们想要的图片。</p>

<h3>裁剪</h3>

<p>UIImage 没有裁剪相关的方法，我们可以使用 Core Graphics 中的 <code>CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect);</code>方法来实现裁剪。使用这个方法我们需要注意 Rect 要考虑图片的 scale，图片完整的 <code>rect = {0, 0, image.size.width * image.scale, image.size.height * image.scale}</code>, 所以我们指定裁剪的 rect 时也要带上 scale.</p>

<h3>缩略图</h3>

<p>生成缩略图可以使用 Image I/O 中的 <code>CGImageRef CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options);</code>方法。</p>

<h3>Reference</h3>

<ul>
<li>Image I/O Programming Guide</li>
<li><a href="https://objccn.io/issue-21-2/">图片格式</a></li>
<li><a href="http://nshipster.com/image-resizing/">Image Resizing Techniques</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 开发问题汇总(四)]]></title>
    <link href="http://DamianSheldon.github.io/blog/problems-of-android-development-part-4.html"/>
    <updated>2017-05-14T16:56:19+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/problems-of-android-development-part-4</id>
    <content type="html"><![CDATA[<h3>1.怎么给 Button 加上圆角?</h3>

<p>A:Create an xml inside Drawable Folder with below code. Name it rounded_red_border.xml</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?xml version="1.0" encoding="utf-8"?&gt;
</span><span class='line'>&lt;shape xmlns:android="http://schemas.android.com/apk/res/android"
</span><span class='line'>    android:shape="rectangle"&gt;
</span><span class='line'> 
</span><span class='line'>// The width and color of the border   
</span><span class='line'> &lt;stroke
</span><span class='line'>        android:width="4dp"
</span><span class='line'>        android:color="#de3d3d" /&gt;
</span><span class='line'> 
</span><span class='line'>// The desired corner radius. reduce it to keep it less rounded
</span><span class='line'>    &lt;corners android:radius="360dp" /&gt;
</span><span class='line'> 
</span><span class='line'>// Add your desired padding
</span><span class='line'>    &lt;padding
</span><span class='line'>        android:left="20dp"
</span><span class='line'>        android:top="10dp"
</span><span class='line'>        android:right="20dp"
</span><span class='line'>        android:bottom="10dp"    &gt;
</span><span class='line'>    &lt;/padding&gt;
</span><span class='line'> 
</span><span class='line'>&lt;/shape&gt;</span></code></pre></td></tr></table></div></figure>


<p>Applying the border to a Layout or View</p>

<p>Set the above drawable as a background to your Layout or View like LinearLayout, FrameLayout, TextView, Button etc.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?xml version="1.0" encoding="utf-8"?&gt;
</span><span class='line'>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
</span><span class='line'>android:layout_width="match_parent"
</span><span class='line'>android:layout_height="match_parent"&gt;
</span><span class='line'> 
</span><span class='line'> 
</span><span class='line'>// Apply as the background of TextView
</span><span class='line'>&lt;TextView
</span><span class='line'>    android:layout_width="wrap_content"
</span><span class='line'>    android:layout_height="wrap_content"
</span><span class='line'>    android:text="YOUR TEXT"
</span><span class='line'>    android:textSize="20dp"
</span><span class='line'>    android:textStyle="bold"
</span><span class='line'>    android:background="@drawable/rounded_red_border"
</span><span class='line'>    android:textColor="#000"
</span><span class='line'>    android:layout_centerInParent="true"/&gt;
</span><span class='line'> 
</span><span class='line'> 
</span><span class='line'>&lt;/RelativeLayout&gt;</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>Reference:<a href="http://www.gadgetsaint.com/tips/rounded-corners-views-layouts-android/#.WRgR3FOGORt">Add Rounded Corners to Views and Layouts Android</a></p>

<h3>2.Error:All flavors must now belong to a named flavor dimension.</h3>

<p>A:在主app的build.gradle里面的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> defaultConfig {
</span><span class='line'>     targetSdkVersion：***
</span><span class='line'>  minSdkVersion ：***
</span><span class='line'>  versionCode：***
</span><span class='line'>     versionName ：***
</span><span class='line'>  // 版本名后面添加一句话，意思就是flavor dimension
</span><span class='line'>  // 它的维度就是该版本号，这样维度就是都是统一的了
</span><span class='line'>  flavorDimensions "versionCode"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://blog.csdn.net/SYIF88/article/details/75009663">解决Error:All flavors must now belong to a named flavor dimension.</a></p>

<h3>3.error: resource android:attr/fontVariationSettings not found.</h3>

<p>A:This is caused by an incompatibility with the android support library that changed to version 28 in the last day or so. Add follow contents to build.gradle:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>configurations.all {
</span><span class='line'>    resolutionStrategy {
</span><span class='line'>        force 'com.android.support:support-v4:27.1.0'
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://github.com/crosswalk-project/cordova-plugin-crosswalk-webview/issues/205#issuecomment-371669478">Problem Isolated - Need Solution</a></p>

<h3>4.Application error. The connection to the server was unsuccessful</h3>

<p>A:Add the next line into the config.xml in side the tag.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;preference name="loadUrlTimeoutValue" value="700000" /&gt;</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://forum.ionicframework.com/t/application-error-the-connection-to-the-server-was-unsuccessful/67584/3">Application error. The connection to the server was unsuccessful</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[输出自定义尺寸视频]]></title>
    <link href="http://DamianSheldon.github.io/blog/how-to-specify-a-resolution-for-output-video.html"/>
    <updated>2017-04-10T10:12:09+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/how-to-specify-a-resolution-for-output-video</id>
    <content type="html"><![CDATA[<p>最近要做的一个项目中要拍摄视频，于是就开始来研究视频。看了几遍 AVFoundation Programming Guide 之后也写了个 Demo，把基本功能都过了一遍。这其中有意思的一件事情是我发现微信拍摄短视频的尺寸是 540x944, 这尺寸很奇怪，不是任何一个预设值。不清楚微信为什么用这么一个尺寸，但我想搞清楚怎么输出自定义尺寸的视频。</p>

<p>AVFoundation 捕获数据输出时，各组件的关系如下：</p>

<div style="text-align:center" markdown="1">
                                                                                           <img name="Capture Detail" src="http://DamianSheldon.github.io/images/captureDetail_2x.png">
                                                                                        </div>


<p>要想输出自定义尺寸的视频，我们可以从输入端和输出端着手。但是从文档来看，并没有提供可以自定捕获尺寸的方法，所以只能从输出端着手。</p>

<!--more-->


<p>首先我用 AVCaptureMovieFileOutput 做输出，然后调用 <code>setOutputSettings(_ outputSettings: [AnyHashable : Any]!, for connection: AVCaptureConnection!)</code> 来达到目标。但是很不幸，控制台输出了异常，查看 AVCaptureMovieFileOutput 的头文件，</p>

<blockquote><p>On iOS, you may only specify the AVVideoCodecKey in the outputSettings. If you specify any other key, an NSInvalidArgumentException will be thrown. See the availableVideoCodecTypes property.</p></blockquote>

<p>所以这个方法行不通。</p>

<p>于是我又尝试用 AVAssetWriter 来接收每一帧捕获的数据，然后按配置输出，理论上来讲这是可行的，实际上只有第一帧数据能成功被接收，之后的数据都会接收失败，具体原因不详。</p>

<p>直接处理每一帧数据失败之后，我又反复翻阅文档，发现编辑章节中提到可以修改 renderSize, 于是又一个想法冒出来，也许可以通过修改 renderSize 来输出自定义尺寸。按照文档编写好相关代码，激动地运行测试。结果得到的是：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Optional(Error Domain=AVFoundationErrorDomain Code=-11800 "The operation could not be completed" UserInfo={NSUnderlyingError=0x1700505c0 {Error Domain=NSOSStatusErrorDomain Code=-12108 "(null)"}, NSLocalizedFailureReason=An unknown error occurred (-12108), NSLocalizedDescription=The operation could not be completed})</span></code></pre></td></tr></table></div></figure>


<p>说实话，内心是崩溃的。但对这件事情还是耿耿于怀，又浏览了一下官方示例列表，发现了 AVSimpleEditoriOS,</p>

<blockquote><p>AVSimpleEditor is a simple AVFoundation based movie editing application which exercises the APIs of AVVideoComposition, AVAudioMix and demonstrates how they can be used for simple video editing tasks. It also demonstrates how they interact with playback (AVPlayerItem) and export (AVAssetExportSession). The application performs trim, rotate, crop, add music, add watermark and export. This sample is ARC-enabled.</p></blockquote>

<p>嗯，看到里面提到可以裁剪，于是就想它是怎么做？可以剪成我想要的大小吗？阅读相关的代码片断，原来它就是用的 renderSize 来实现裁剪的，跟我第三种方法的代码基本一致，差别是它是 Objc 写的，我用 Swift 写的。既然它能正常工作，那我就用这份代码来输出自定义尺寸吧。把代码移进来，运行测试，居然输出了指定的尺寸，难道代码用 Objc 和 Swift 写还有这种差别，整个人是懵的，这个原因暂时是不清楚的。</p>

<p>虽然输出的尺寸对了，但是画面没有铺满尺寸，而且方向错了。这有点太虐了，既然都走到这一步，就想那我再试试能不手动把它纠正吧。纠正的方法是使用 transform, 但是文档对它的介绍不详细，我先参考了 QuartZ 2D Programming Guide 中 Transforms 来变换，发现不对，整个画面全变成了黑色，又在 AVSimpleEditoriOS 的注释中发现了新的线索，</p>

<blockquote><p>Note: the point of origin for rotation is the upper left corner of the composition, t3 is to compensate for origin</p></blockquote>

<p>这么说它用的坐标和 QuartZ 2D 还不一样啊，这么坑爹，好吧，只能先确定好它们是怎么变换的。于是我先输出一段没变换的视频，之后每次测试一个变换，用这个办法确认了它们的变换是这样的，变换的原点是屏幕的左上角，Translation 向右是 X 轴的正方向，向下是 Y 轴的正方向; Rotation 的度数为正是按顺时针方向旋转，为负则是逆时针方向旋转；Scaling 的值大于1为放大，小于1则是缩小。</p>

<p>这样我就做了这么一个变换：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>t1 = CGAffineTransformScale(asset.preferredTransform, sx, sy);
</span><span class='line'>
</span><span class='line'>t1 = CGAffineTransformRotate(t1, degreesToRadians(90));
</span><span class='line'>
</span><span class='line'>t1 = CGAffineTransformTranslate(t1, 540, 0);</span></code></pre></td></tr></table></div></figure>


<p>控制台报错了，说这个视频不支持编辑，这是个什么鬼？完全没有道理啊！于是我又把这段代码从下往上一行一行注释，看是谁导致的问题，发现是 <code>t1 = CGAffineTransformRotate(t1, degreesToRadians(90));</code> ，这样我又试着调整变换的顺序，改成：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>t1 = CGAffineTransformTranslate(asset.preferredTransform, 540, 0);
</span><span class='line'>
</span><span class='line'>t1 = CGAffineTransformScale(t1, sx, sy);
</span><span class='line'>
</span><span class='line'>t1 = CGAffineTransformRotate(t1, degreesToRadians(90));</span></code></pre></td></tr></table></div></figure>


<p>运行测试，苍天啊，居然可以了。经历这么一出，感觉写代码都成了玄学了, 无力吐槽!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AVFoundation 使用笔记]]></title>
    <link href="http://DamianSheldon.github.io/blog/notes-of-using-avfoundation.html"/>
    <updated>2017-04-06T15:09:30+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/notes-of-using-avfoundation</id>
    <content type="html"><![CDATA[<p>使用一个框架时，我们可能有这么三个问题：</p>

<ol>
<li>这个框架是做什么的？</li>
<li>为什么要使用这个框架而不是其他的框架？</li>
<li>怎么用这个框架？</li>
</ol>


<h3>这个框架是做什么的？</h3>

<p>Apple 在 iOS Technology Overview 中的 Audio Technologies 和 Video Technologies 分别是这么介绍 AVFoundation 的：</p>

<blockquote><p>AV Foundation is an Objective-C interface for managing the recording and playback of audio and video. Use this framework for recording audio and when you need fine-grained control over the audio playback process.</p>

<p>AV Foundation provides advanced video playback and recording capabilities. Use this framework in situations where you need more control over the presentation or recording of video. For example, augmented reality apps could use this framework to layer live video content with other app-provided content.</p></blockquote>

<p>从这两个介绍中我们可以知道 AVFoundation 是用来播放和录制音频和视频的。</p>

<p>在 AVFoundation Programming Guide 中则是这么介绍的：</p>

<blockquote><p>AVFoundation is one of several frameworks that you can use to play and create time-based audiovisual media. It provides an Objective-C interface you use to work on a detailed level with time-based audiovisual data. For example, you can use it to examine, create, edit, or reencode media files. You can also get input streams from devices and manipulate video during realtime capture and playback.</p></blockquote>

<p>从这里我们可以知道它不仅可以播放和创建基于时间的视听媒体，还可以让我们在很细微的层面去操作这些视听数据。例如，你可以使用它检查、创建、编辑或者重编码媒体文件。你还可以用它从设备那里拿到输出流，并且可以在实时的捕获和播放过程中操作视频。</p>

<p>所以结论就是：这个框架是处理音频和视频的，而且处理的粒度可以非常细。</p>

<!--more-->


<h3>为什么要用这个框架而不是其他的框架？</h3>

<p>在选择框架时我们的原则应该首先是使用 Apple 自己提供的框架，其次才是第三方框架。在 Apple 自带的框架中选择时，又应该按抽象程度从高到低去选择。在音频技术中，抽象程度是这样的：Media Player framework > AVFoundation > OpenAL > Core Audio; 在视频技术中：UIImagePickerController > AVKit > AVFoundation > Core Media.</p>

<p>在音视频技术中，抽象程度高于 AVFoundation 的技术多侧重于简单的播放和录制，要进行其他的操作时则要使用 AVFoundation，而且它的能力也比较强，所以通常要对媒体数据进行处理时，我们会经常使用到它，它不满足要求时才去寻找其他的技术。</p>

<h3>怎么用这个框架？</h3>

<p>前面提到 AVFoundation 是用来播放、录制和操作视听数据的，操作视听数据则可以细分为 Editing 和 Exporting，所以我们这里会介绍这个框架:Playback, Capture, Editing 和 Exporting 四个大方面的使用。</p>

<h4>Playback</h4>

<p>在介绍怎么使用 AVFoundation 播放视听媒体之前，我们还要聊聊在 AVFoundation 中是怎么表示媒体的。AVFoundation 中用来代表媒体最主要的类是 AVAsset, 一个 AVAsset 实例是一片或多片媒体数据(音频曲目和视频轨迹)集合的综合代表。它提供关于这个集合的信息，例如它的标题，持续时间，本身的展示尺寸等等。AVAsset 没有绑定特定的数据类型。它是其他用来从指定 URL 媒体创建资产实例和创建新构成的父类。</p>

<p>资产中每片单独的媒体数据是统一的类型称为track. 在经典的简单场景，一个轨迹代表音频组件，另一个轨迹代表视频组件；在一个复杂的构成中，这里可能有多个重叠的音视频轨迹。</p>

<p>你为播放配置资产的方法取决于你想要播放资产的种类，广义上来讲，这里有两大类型：基于文件的资产和基于流的资产。</p>

<ol>
<li><p>加载和播放基于文件的资产。</p>

<ul>
<li>Create an asset using AVURLAsset.</li>
<li>Create an instance of AVPlayerItem using the asset.</li>
<li>Associate the item with an instance of AVPlayer.</li>
<li>Wait until the item’s status property indicates that it’s ready to play (typically you use key-value observing to receive a notification when the status changes).</li>
</ul>
</li>
<li><p>为播放创建和准备一个 HTTP 实时流。</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NSURL *url = [NSURL URLWithString:@"&lt;#Live stream URL#&gt;];
</span><span class='line'>// You may find a test stream at &lt;http://devimages.apple.com/iphone/samples/bipbop/bipbopall.m3u8&gt;.
</span><span class='line'>self.playerItem = [AVPlayerItem playerItemWithURL:url];
</span><span class='line'>[playerItem addObserver:self forKeyPath:@"status" options:0 context:&ItemStatusContext];
</span><span class='line'>self.player = [AVPlayer playerWithPlayerItem:playerItem];</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>如果你不知道你拥有的 URL 是什么类型。</p>

<p> 1)Try to initialize an AVURLAsset using the URL, then load its tracks key.
 If the tracks load successfully, then you create a player item for the asset.</p>

<p> 2)If 1 fails, create an AVPlayerItem directly from the URL.
 Observe the player’s status property to determine whether it becomes playable.</p></li>
</ol>


<h4>Capture</h4>

<p>为了管理来自相机、麦克风的捕获，你组装对象去表示输入和输出，使用 AVCaptureSession 的实例来协调它们之间的数据流。你最少需要：</p>

<ul>
<li>一个 AVCaptureDevice 的实例来表示输入设备，例如相机或麦克风</li>
<li>一个 AVCaptureInput 具体子类的实例去配置来自输入设备的端口</li>
<li>一个 AVCaptureOutput 具体子类的实例去管理到电影或静态图片的输出</li>
<li>一个 AVCaptureSession 的实例来协调从输入到输出的数据流</li>
</ul>


<p>Capturing Video Frames as UIImage Objects</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 1. Create and Configure a Capture Session
</span><span class='line'>AVCaptureSession *session = [[AVCaptureSession alloc] init];
</span><span class='line'>session.sessionPreset = AVCaptureSessionPresetMedium;
</span><span class='line'>
</span><span class='line'>// 2. Create and Configure the Device and Device Input
</span><span class='line'>AVCaptureDevice *device =
</span><span class='line'>[AVCaptureDevice defaultDeviceWithMediaType:AVMediaTypeVideo];
</span><span class='line'>
</span><span class='line'>NSError *error = nil;
</span><span class='line'>AVCaptureDeviceInput *input =
</span><span class='line'>[AVCaptureDeviceInput deviceInputWithDevice:device error:&error];
</span><span class='line'>if (!input) {
</span><span class='line'>    // Handle the error appropriately.
</span><span class='line'>}
</span><span class='line'>[session addInput:input];
</span><span class='line'>
</span><span class='line'>// 3. Create and Configure the Video Data Output
</span><span class='line'>AVCaptureVideoDataOutput *output = [[AVCaptureVideoDataOutput alloc] init];
</span><span class='line'>[session addOutput:output];
</span><span class='line'>output.videoSettings =
</span><span class='line'>@{ (NSString *)kCVPixelBufferPixelFormatTypeKey : @(kCVPixelFormatType_32BGRA) };
</span><span class='line'>output.minFrameDuration = CMTimeMake(1, 15);
</span><span class='line'>
</span><span class='line'>dispatch_queue_t queue = dispatch_queue_create("MyQueue", NULL);
</span><span class='line'>[output setSampleBufferDelegate:self queue:queue];
</span><span class='line'>dispatch_release(queue);
</span><span class='line'>
</span><span class='line'>// 4. Implement the Sample Buffer Delegate Method
</span><span class='line'>- (void)captureOutput:(AVCaptureOutput *)captureOutput
</span><span class='line'>didOutputSampleBuffer:(CMSampleBufferRef)sampleBuffer
</span><span class='line'>fromConnection:(AVCaptureConnection *)connection {
</span><span class='line'>
</span><span class='line'>    UIImage *image = imageFromSampleBuffer(sampleBuffer);
</span><span class='line'>    // Add your code here that uses the image.
</span><span class='line'>}
</span><span class='line'>// 5. Starting and Stopping Recording
</span><span class='line'>NSString *mediaType = AVMediaTypeVideo;
</span><span class='line'>
</span><span class='line'>[AVCaptureDevice requestAccessForMediaType:mediaType completionHandler:^(BOOL granted) {
</span><span class='line'>    if (granted)
</span><span class='line'>    {
</span><span class='line'>        //Granted access to mediaType
</span><span class='line'>        [self setDeviceAuthorized:YES];
</span><span class='line'>    }
</span><span class='line'>    else
</span><span class='line'>    {
</span><span class='line'>        //Not granted access to mediaType
</span><span class='line'>        dispatch_async(dispatch_get_main_queue(), ^{
</span><span class='line'>                [[[UIAlertView alloc] initWithTitle:@"AVCam!"
</span><span class='line'>                message:@"AVCam doesn't have permission to use Camera, please change privacy settings"
</span><span class='line'>                delegate:self
</span><span class='line'>                cancelButtonTitle:@"OK"
</span><span class='line'>                otherButtonTitles:nil] show];
</span><span class='line'>                [self setDeviceAuthorized:NO];
</span><span class='line'>                });
</span><span class='line'>    }
</span><span class='line'>}];
</span><span class='line'>
</span><span class='line'>[session startRunning];
</span><span class='line'>
</span><span class='line'>// To stop recording, you send the session a stopRunning message.</span></code></pre></td></tr></table></div></figure>


<h4>Editing</h4>

<p>AVFoundation 框架提供了丰富的类来方便编辑音视资产。编辑 API 的核心是 composition. 一个 Compostion 是简单的来自一个或多个不同媒体资产的聚合。AVMutableCompostion 类提供插入和移除轨迹的接口，并且管理它们的时间顺序。图 3-1 展示了一个新的 composition
是如何用由现存资产联合形成的新资产拼装在一起的。如果你所有想要做的就是将多个资产按顺序的合成到一个单一的文件，那么这就是你得知道的所有细节。如果你想对你 compostion 里面的轨迹进行自定义的音频或视频处理，你相应地需要引入一个 audio mix 或 video compostion.</p>

<p><img src="http://DamianSheldon.github.io/images/avmutablecomposition_2x.png" title="AVMutableComposition" ></p>

<p>图 3-1</p>

<p>使用 AVMutableAudioMix 类， 你可以在你的 composition 的音频轨迹上进行自定义音频处理，像图 3-2 显示的。你现在可以指定一个最大的音量或者设置 volume ramp.</p>

<p><img src="http://DamianSheldon.github.io/images/avmutableaudiomix_2x.png" title="AVMutableAudioMix" ></p>

<p>图 3-2</p>

<p>你为了编辑可以像图 3-3 那样使用 AVMutableVideoCompostion 类来直接操作你 compostion 里的视频轨迹. 拥有一个 video composition, 你可以为输出视频指定想要的渲染尺寸,缩放以及帧率。通过一个 video composition&rsquo;s instruction(由 AVMutableVideoCompositionInstruction 类代表)，你可以修改你视频的背景颜色和应用 layer instructions. 这些 layer instructions（由 AVMutableVideoCompositionLayerInstruction 类代表) 可以用来应用 transforms, transform ramps, opacity and opacity ramps。Video
composition 类使用 animationTool 属性赋予你引入来自 Core Animation 框架效果的能力。</p>

<p><img src="http://DamianSheldon.github.io/images/avmutablevideocomposition_2x.png" title="AVMutableVideoCompostion" ></p>

<p>图 3-3</p>

<p>为了把你的 compostion 和 audio mix, video compostion 混合，你使用一个 AVAssetExportSession 对象，像图 3-4 那样。你用你的 compostion 初始化 export session, 然后简单地把你的 audio mix 和 video composition 相应地赋值给 audioMix 和 videoComposition 属性。</p>

<p><img src="http://DamianSheldon.github.io/images/puttingitalltogether_2x.png" title="AVAssetExportSession" ></p>

<p>图 3-4</p>

<p>Combining Multiple Assets and Saving the Result to the Camera Roll</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 1. Creating the Composition
</span><span class='line'>AVMutableComposition *mutableComposition = [AVMutableComposition composition];
</span><span class='line'>AVMutableCompositionTrack *videoCompositionTrack = [mutableComposition addMutableTrackWithMediaType:AVMediaTypeVideo preferredTrackID:kCMPersistentTrackID_Invalid];
</span><span class='line'>AVMutableCompositionTrack *audioCompositionTrack = [mutableComposition addMutableTrackWithMediaType:AVMediaTypeAudio preferredTrackID:kCMPersistentTrackID_Invalid];
</span><span class='line'>
</span><span class='line'>// 2. Adding the Assets
</span><span class='line'>AVAssetTrack *firstVideoAssetTrack = [[firstVideoAsset tracksWithMediaType:AVMediaTypeVideo] objectAtIndex:0];
</span><span class='line'>AVAssetTrack *secondVideoAssetTrack = [[secondVideoAsset tracksWithMediaType:AVMediaTypeVideo] objectAtIndex:0];
</span><span class='line'>[videoCompositionTrack insertTimeRange:CMTimeRangeMake(kCMTimeZero, firstVideoAssetTrack.timeRange.duration) ofTrack:firstVideoAssetTrack atTime:kCMTimeZero error:nil];
</span><span class='line'>[videoCompositionTrack insertTimeRange:CMTimeRangeMake(kCMTimeZero, secondVideoAssetTrack.timeRange.duration) ofTrack:secondVideoAssetTrack atTime:firstVideoAssetTrack.timeRange.duration error:nil];
</span><span class='line'>[audioCompositionTrack insertTimeRange:CMTimeRangeMake(kCMTimeZero, CMTimeAdd(firstVideoAssetTrack.timeRange.duration, secondVideoAssetTrack.timeRange.duration)) ofTrack:[[audioAsset tracksWithMediaType:AVMediaTypeAudio] objectAtIndex:0] atTime:kCMTimeZero error:nil];
</span><span class='line'>
</span><span class='line'>// 3. Checking the Video Orientations
</span><span class='line'>BOOL isFirstVideoPortrait = NO;
</span><span class='line'>CGAffineTransform firstTransform = firstVideoAssetTrack.preferredTransform;
</span><span class='line'>// Check the first video track's preferred transform to determine if it was recorded in portrait mode.
</span><span class='line'>if (firstTransform.a == 0 && firstTransform.d == 0 && (firstTransform.b == 1.0 || firstTransform.b == -1.0) && (firstTransform.c == 1.0 || firstTransform.c == -1.0)) {
</span><span class='line'>        isFirstVideoPortrait = YES;
</span><span class='line'>}
</span><span class='line'>BOOL isSecondVideoPortrait = NO;
</span><span class='line'>CGAffineTransform secondTransform = secondVideoAssetTrack.preferredTransform;
</span><span class='line'>// Check the second video track's preferred transform to determine if it was recorded in portrait mode.
</span><span class='line'>if (secondTransform.a == 0 && secondTransform.d == 0 && (secondTransform.b == 1.0 || secondTransform.b == -1.0) && (secondTransform.c == 1.0 || secondTransform.c == -1.0)) {
</span><span class='line'>        isSecondVideoPortrait = YES;
</span><span class='line'>}
</span><span class='line'>if ((isFirstVideoAssetPortrait && !isSecondVideoAssetPortrait) || (!isFirstVideoAssetPortrait && isSecondVideoAssetPortrait)) {
</span><span class='line'>        UIAlertView *incompatibleVideoOrientationAlert = [[UIAlertView alloc] initWithTitle:@"Error!" message:@"Cannot combine a video shot in portrait mode with a video shot in landscape mode." delegate:self cancelButtonTitle:@"Dismiss" otherButtonTitles:nil];
</span><span class='line'>            [incompatibleVideoOrientationAlert show];
</span><span class='line'>                return;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>// 4. Applying the Video Composition Layer Instructions
</span><span class='line'>AVMutableVideoCompositionInstruction *firstVideoCompositionInstruction = [AVMutableVideoCompositionInstruction videoCompositionInstruction];
</span><span class='line'>// Set the time range of the first instruction to span the duration of the first video track.
</span><span class='line'>firstVideoCompositionInstruction.timeRange = CMTimeRangeMake(kCMTimeZero, firstVideoAssetTrack.timeRange.duration);
</span><span class='line'>AVMutableVideoCompositionInstruction * secondVideoCompositionInstruction = [AVMutableVideoCompositionInstruction videoCompositionInstruction];
</span><span class='line'>// Set the time range of the second instruction to span the duration of the second video track.
</span><span class='line'>secondVideoCompositionInstruction.timeRange = CMTimeRangeMake(firstVideoAssetTrack.timeRange.duration, CMTimeAdd(firstVideoAssetTrack.timeRange.duration, secondVideoAssetTrack.timeRange.duration));
</span><span class='line'>AVMutableVideoCompositionLayerInstruction *firstVideoLayerInstruction = [AVMutableVideoCompositionLayerInstruction videoCompositionLayerInstructionWithAssetTrack:videoCompositionTrack];
</span><span class='line'>// Set the transform of the first layer instruction to the preferred transform of the first video track.
</span><span class='line'>[firstVideoLayerInstruction setTransform:firstTransform atTime:kCMTimeZero];
</span><span class='line'>AVMutableVideoCompositionLayerInstruction *secondVideoLayerInstruction = [AVMutableVideoCompositionLayerInstruction videoCompositionLayerInstructionWithAssetTrack:videoCompositionTrack];
</span><span class='line'>// Set the transform of the second layer instruction to the preferred transform of the second video track.
</span><span class='line'>[secondVideoLayerInstruction setTransform:secondTransform atTime:firstVideoAssetTrack.timeRange.duration];
</span><span class='line'>firstVideoCompositionInstruction.layerInstructions = @[firstVideoLayerInstruction];
</span><span class='line'>secondVideoCompositionInstruction.layerInstructions = @[secondVideoLayerInstruction];
</span><span class='line'>AVMutableVideoComposition *mutableVideoComposition = [AVMutableVideoComposition videoComposition];
</span><span class='line'>mutableVideoComposition.instructions = @[firstVideoCompositionInstruction, secondVideoCompositionInstruction];
</span><span class='line'>
</span><span class='line'>// 5. Setting the Render Size and Frame Duration
</span><span class='line'>CGSize naturalSizeFirst, naturalSizeSecond;
</span><span class='line'>// If the first video asset was shot in portrait mode, then so was the second one if we made it here.
</span><span class='line'>if (isFirstVideoAssetPortrait) {
</span><span class='line'>    // Invert the width and height for the video tracks to ensure that they display properly.
</span><span class='line'>        naturalSizeFirst = CGSizeMake(firstVideoAssetTrack.naturalSize.height, firstVideoAssetTrack.naturalSize.width);
</span><span class='line'>            naturalSizeSecond = CGSizeMake(secondVideoAssetTrack.naturalSize.height, secondVideoAssetTrack.naturalSize.width);
</span><span class='line'>}
</span><span class='line'>else {
</span><span class='line'>    // If the videos weren't shot in portrait mode, we can just use their natural sizes.
</span><span class='line'>        naturalSizeFirst = firstVideoAssetTrack.naturalSize;
</span><span class='line'>            naturalSizeSecond = secondVideoAssetTrack.naturalSize;
</span><span class='line'>}
</span><span class='line'>float renderWidth, renderHeight;
</span><span class='line'>// Set the renderWidth and renderHeight to the max of the two videos widths and heights.
</span><span class='line'>if (naturalSizeFirst.width &gt; naturalSizeSecond.width) {
</span><span class='line'>        renderWidth = naturalSizeFirst.width;
</span><span class='line'>}
</span><span class='line'>else {
</span><span class='line'>        renderWidth = naturalSizeSecond.width;
</span><span class='line'>}
</span><span class='line'>if (naturalSizeFirst.height &gt; naturalSizeSecond.height) {
</span><span class='line'>        renderHeight = naturalSizeFirst.height;
</span><span class='line'>}
</span><span class='line'>else {
</span><span class='line'>        renderHeight = naturalSizeSecond.height;
</span><span class='line'>}
</span><span class='line'>mutableVideoComposition.renderSize = CGSizeMake(renderWidth, renderHeight);
</span><span class='line'>// Set the frame duration to an appropriate value (i.e. 30 frames per second for video).
</span><span class='line'>mutableVideoComposition.frameDuration = CMTimeMake(1,30);
</span><span class='line'>
</span><span class='line'>// 6. Exporting the Composition and Saving it to the Camera Roll
</span><span class='line'>// Create a static date formatter so we only have to initialize it once.
</span><span class='line'>static NSDateFormatter *kDateFormatter;
</span><span class='line'>if (!kDateFormatter) {
</span><span class='line'>        kDateFormatter = [[NSDateFormatter alloc] init];
</span><span class='line'>            kDateFormatter.dateStyle = NSDateFormatterMediumStyle;
</span><span class='line'>                kDateFormatter.timeStyle = NSDateFormatterShortStyle;
</span><span class='line'>}
</span><span class='line'>// Create the export session with the composition and set the preset to the highest quality.
</span><span class='line'>AVAssetExportSession *exporter = [[AVAssetExportSession alloc] initWithAsset:mutableComposition presetName:AVAssetExportPresetHighestQuality];
</span><span class='line'>// Set the desired output URL for the file created by the export process.
</span><span class='line'>exporter.outputURL = [[[[NSFileManager defaultManager] URLForDirectory:NSDocumentDirectory inDomain:NSUserDomainMask appropriateForURL:nil create:@YES error:nil] URLByAppendingPathComponent:[kDateFormatter stringFromDate:[NSDate date]]] URLByAppendingPathExtension:CFBridgingRelease(UTTypeCopyPreferredTagWithClass((CFStringRef)AVFileTypeQuickTimeMovie, kUTTagClassFilenameExtension))];
</span><span class='line'>// Set the output file type to be a QuickTime movie.
</span><span class='line'>exporter.outputFileType = AVFileTypeQuickTimeMovie;
</span><span class='line'>exporter.shouldOptimizeForNetworkUse = YES;
</span><span class='line'>exporter.videoComposition = mutableVideoComposition;
</span><span class='line'>// Asynchronously export the composition to a video file and save this file to the camera roll once export completes.
</span><span class='line'>[exporter exportAsynchronouslyWithCompletionHandler:^{
</span><span class='line'>        dispatch_async(dispatch_get_main_queue(), ^{
</span><span class='line'>                    if (exporter.status == AVAssetExportSessionStatusCompleted) {
</span><span class='line'>                                    ALAssetsLibrary *assetsLibrary = [[ALAssetsLibrary alloc] init];
</span><span class='line'>                                                if ([assetsLibrary videoAtPathIsCompatibleWithSavedPhotosAlbum:exporter.outputURL]) {
</span><span class='line'>                                                                    [assetsLibrary writeVideoAtPathToSavedPhotosAlbum:exporter.outputURL completionBlock:NULL];
</span><span class='line'>                                                                                }
</span><span class='line'>                                                                                        }
</span><span class='line'>                                                                                            });
</span><span class='line'>}];
</span></code></pre></td></tr></table></div></figure>


<h4>Exporting</h4>

<p>为了导出视听资产，你必须使用 AVFoundation 框架提供的导出 API. AVAssetExportSession 类为简单的导出需求提供接口，例如修改文件格式或者裁剪资产的长度。对于更深的导出需求，使用 AVAssetReader 和 AVAssetWriter 类。</p>

<p>当你想要操作资产的内容时使用 AVAssetReader. 例如，你可能读取资产中的音频轨迹去生成表示声波的图形。使用 AVAssetWriter 从像 sample buffers 或 still images 的媒体中生成资产。</p>

<p>Reading an Asset</p>

<p>每个 AVAssetReader 对象一次只能关联单个的资产， 但是这个资产可能包含多个轨迹。基于这个原因，为了配置如何去读取媒体数据，你必须在读取前给你的 asset reader 赋予 AVAssetReaderOutput 的具体子类。这里有三个具体的子类：AVAssetReaderTrackOutput, AVAssetReaderAudioMixOutput 和 AVAssetReaderVideoCompositionOutput.</p>

<ol>
<li>Creating the Asset Reader</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NSError *outError;
</span><span class='line'>AVAsset *someAsset = &lt;#AVAsset that you want to read#&gt;;
</span><span class='line'>AVAssetReader *assetReader = [AVAssetReader assetReaderWithAsset:someAsset error:&outError];
</span><span class='line'>BOOL success = (assetReader != nil);</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Setting Up the Asset Reader Outputs</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>AVAsset *localAsset = assetReader.asset;
</span><span class='line'>// Get the audio track to read.
</span><span class='line'>AVAssetTrack *audioTrack = [[localAsset tracksWithMediaType:AVMediaTypeAudio] objectAtIndex:0];
</span><span class='line'>// Decompression settings for Linear PCM
</span><span class='line'>NSDictionary *decompressionAudioSettings = @{ AVFormatIDKey : [NSNumber numberWithUnsignedInt:kAudioFormatLinearPCM] };
</span><span class='line'>// Create the output with the audio track and decompression settings.
</span><span class='line'>AVAssetReaderOutput *trackOutput = [AVAssetReaderTrackOutput assetReaderTrackOutputWithTrack:audioTrack outputSettings:decompressionAudioSettings];
</span><span class='line'>// Add the output to the reader if possible.
</span><span class='line'>if ([assetReader canAddOutput:trackOutput])
</span><span class='line'>        [assetReader addOutput:trackOutput];</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Reading the Asset’s Media Data</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// Start the asset reader up.
</span><span class='line'>[self.assetReader startReading];
</span><span class='line'>BOOL done = NO;
</span><span class='line'>while (!done)
</span><span class='line'>{
</span><span class='line'>    // Copy the next sample buffer from the reader output.
</span><span class='line'>    CMSampleBufferRef sampleBuffer = [self.assetReaderOutput copyNextSampleBuffer];
</span><span class='line'>    if (sampleBuffer)
</span><span class='line'>    {
</span><span class='line'>        // Do something with sampleBuffer here.
</span><span class='line'>        CFRelease(sampleBuffer);
</span><span class='line'>        sampleBuffer = NULL;
</span><span class='line'>    }
</span><span class='line'>    else
</span><span class='line'>    {
</span><span class='line'>        // Find out why the asset reader output couldn't copy another sample buffer.
</span><span class='line'>        if (self.assetReader.status == AVAssetReaderStatusFailed)
</span><span class='line'>        {
</span><span class='line'>            NSError *failureError = self.assetReader.error;
</span><span class='line'>            // Handle the error here.
</span><span class='line'>        }
</span><span class='line'>        else
</span><span class='line'>        {
</span><span class='line'>            // The asset reader output has read all of its samples.
</span><span class='line'>            done = YES;
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Writing an Asset</p>

<p>AVAssetWriter 类将多个来源的媒体数据按指定的文件格式写出到单一的文件。你不需要将你的 asset writer 对象和指定的资产关联起来，但是你必须为你想要创建的输出文件使用一个 asset writer. 因为一个 asset writer 可以写出来自多个源的媒体数据，你必须为你想要写出到输出文件的单独轨迹创建一个 AVAssetWriterInput 对象。每个 AVAssetWriterInput 对象期望收到 CMSampleBufferRef 对象格式的数据，但是如果你想追加 CVPixelBufferRef 对象到你的 asset writer input, 使用 AVAssetWriterInputPixelBufferAdaptor 类。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 1. Creating the Asset Writer
</span><span class='line'>NSError *outError;
</span><span class='line'>NSURL *outputURL = &lt;#NSURL object representing the URL where you want to save the video#&gt;;
</span><span class='line'>AVAssetWriter *assetWriter = [AVAssetWriter assetWriterWithURL:outputURL
</span><span class='line'>fileType:AVFileTypeQuickTimeMovie
</span><span class='line'>error:&outError];
</span><span class='line'>BOOL success = (assetWriter != nil);
</span><span class='line'>
</span><span class='line'>// 2. Setting Up the Asset Writer Inputs
</span><span class='line'>// Configure the channel layout as stereo.
</span><span class='line'>AudioChannelLayout stereoChannelLayout = {
</span><span class='line'>    .mChannelLayoutTag = kAudioChannelLayoutTag_Stereo,
</span><span class='line'>    .mChannelBitmap = 0,
</span><span class='line'>    .mNumberChannelDescriptions = 0
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>// Convert the channel layout object to an NSData object.
</span><span class='line'>NSData *channelLayoutAsData = [NSData dataWithBytes:&stereoChannelLayout length:offsetof(AudioChannelLayout, mChannelDescriptions)];
</span><span class='line'>
</span><span class='line'>// Get the compression settings for 128 kbps AAC.
</span><span class='line'>NSDictionary *compressionAudioSettings = @{
</span><span class='line'>AVFormatIDKey         : [NSNumber numberWithUnsignedInt:kAudioFormatMPEG4AAC],
</span><span class='line'>                        AVEncoderBitRateKey   : [NSNumber numberWithInteger:128000],
</span><span class='line'>                        AVSampleRateKey       : [NSNumber numberWithInteger:44100],
</span><span class='line'>                        AVChannelLayoutKey    : channelLayoutAsData,
</span><span class='line'>                        AVNumberOfChannelsKey : [NSNumber numberWithUnsignedInteger:2]
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>// Create the asset writer input with the compression settings and specify the media type as audio.
</span><span class='line'>AVAssetWriterInput *assetWriterInput = [AVAssetWriterInput assetWriterInputWithMediaType:AVMediaTypeAudio outputSettings:compressionAudioSettings];
</span><span class='line'>// Add the input to the writer if possible.
</span><span class='line'>if ([assetWriter canAddInput:assetWriterInput])
</span><span class='line'>    [assetWriter addInput:assetWriterInput];
</span><span class='line'>
</span><span class='line'>// 3. Writing Media Data
</span><span class='line'>// Prepare the asset writer for writing.
</span><span class='line'>    [self.assetWriter startWriting];
</span><span class='line'>    // Start a sample-writing session.
</span><span class='line'>    [self.assetWriter startSessionAtSourceTime:kCMTimeZero];
</span><span class='line'>    // Specify the block to execute when the asset writer is ready for media data and the queue to call it on.
</span><span class='line'>    [self.assetWriterInput requestMediaDataWhenReadyOnQueue:myInputSerialQueue usingBlock:^{
</span><span class='line'>        while ([self.assetWriterInput isReadyForMoreMediaData])
</span><span class='line'>        {
</span><span class='line'>            // Get the next sample buffer.
</span><span class='line'>            CMSampleBufferRef nextSampleBuffer = [self copyNextSampleBufferToWrite];
</span><span class='line'>            if (nextSampleBuffer)
</span><span class='line'>            {
</span><span class='line'>                // If it exists, append the next sample buffer to the output file.
</span><span class='line'>                [self.assetWriterInput appendSampleBuffer:nextSampleBuffer];
</span><span class='line'>                CFRelease(nextSampleBuffer);
</span><span class='line'>                nextSampleBuffer = nil;
</span><span class='line'>            }
</span><span class='line'>            else
</span><span class='line'>            {
</span><span class='line'>                // Assume that lack of a next sample buffer means the sample buffer source is out of samples and mark the input as finished.
</span><span class='line'>                [self.assetWriterInput markAsFinished];
</span><span class='line'>                break;
</span><span class='line'>            }
</span><span class='line'>        }
</span><span class='line'>    }];</span></code></pre></td></tr></table></div></figure>


<p>Reference:</p>

<ul>
<li>iOS Technology Overview</li>
<li>AVFoundation Programming Guide</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发问题汇总(三)]]></title>
    <link href="http://DamianSheldon.github.io/blog/problems-of-android-development-part-3.html"/>
    <updated>2017-04-05T08:48:36+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/problems-of-android-development-part-3</id>
    <content type="html"><![CDATA[<h3>1. How to define custom attributes?</h3>

<p>A:Currently the best documentation is the source. You can take a look at it <a href="https://github.com/android/platform_frameworks_base/blob/master/core/res/res/values/attrs.xml">here(arrts.xml)</a>.</p>

<p>You can define attributes in the top <code>&lt;resources&gt;</code> element or inside of a <code>&lt;declare-styleable&gt;</code> element. If I&rsquo;m going to use an attr in more than on place I put it in the root element. Note , all attributes share the same global namespace. That means that even if you create a new attribute inside of a <code>&lt;declare-styleable&gt;</code> element it can be used outside of it and you cannot create another attribute with the same name of a different type.</p>

<p>An <code>&lt;attr&gt;</code> element has two xml attributes <code>name</code> and <code>format</code>. <code>name</code> lets you call it something and this how you end up refering to it in code, e.g., R.attr.my_attribute. The <code>format</code> attribute can have different values depending on the type of attribute you want.</p>

<ul>
<li>reference - if it references another resource id(e.g, &ldquo;@color/my_color&rdquo;, &ldquo;@layout/my_layout&rdquo;)</li>
<li>color</li>
<li>boolean</li>
<li>dimension</li>
<li>float</li>
<li>integer</li>
<li>string</li>
<li>fraction</li>
<li>enum - normally implicitly defined</li>
<li>flag - normally implicitly defined</li>
</ul>


<p>You can set the format to multiple types by using |, e.g., <code>format="reference|color"</code>.</p>

<p>enum attributes can be defined as follows:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;attr name="my_enum_attr"&gt; 
</span><span class='line'>    &lt;enmu name="value1" value="1" /&gt;
</span><span class='line'>    &lt;enmu name="value2" value="2" /&gt;
</span><span class='line'>&lt;/attr&gt;</span></code></pre></td></tr></table></div></figure>


<p>flag attributes are similar except the values need to defined so they can be bit ored together:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;attr name="my_flag_attr"&gt;
</span><span class='line'>    &lt;flag name="fuzzy" value="0x01" /&gt;
</span><span class='line'>    &lt;flag name="cold" value="0x02" /&gt;
</span><span class='line'>&lt;/attr&gt;</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>In addition to attributes there is the <code>&lt;declare-styleable&gt;</code> element. This allows you to define attributes a custom view can use. You do this by specifying an <code>&lt;attr&gt;</code> element, if it was previously defined you do not specify the format. If you wish to reuse an android attr, for example android:gravity, then you can do that in the name, as follows.</p>

<p>An example of a custom view <code>&lt;declare-styleable&gt;</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;declare-styleable name="MyCustomView"&gt; 
</span><span class='line'>    &lt;attr name="my_custom_attribute" /&gt;
</span><span class='line'>    &lt;attr name="android:gravity" /&gt;
</span><span class='line'>&lt;/declare-styleable&gt;</span></code></pre></td></tr></table></div></figure>


<p>When defining you custom attributes in XML on you need to do a few things.</p>

<p>First you must declare a namespace to find your attributes. You do this on the root layout element. Normal there is only <code>xmlns:android="http//schemas.android.com/apk/res/android"</code>. You must now also add <code>xmlns:app="http://schemas.android.com/apk/res-auto"</code>.</p>

<p>Example:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?xml version="1.0" encoding="utf-8"?&gt;
</span><span class='line'>&lt;LinearLayout
</span><span class='line'>xmlns:android="http://schemas.android.com/apk/res/android"
</span><span class='line'>xmlns:whatever="http://schemas.android.com/apk/res-auto"
</span><span class='line'>android:orientation="vertical"
</span><span class='line'>android:layout_width="fill_parent"
</span><span class='line'>android:layout_height="fill_parent"&gt;
</span><span class='line'>
</span><span class='line'>&lt;org.example.mypackage.MyCustomView
</span><span class='line'>android:layout_width="fill_parent"
</span><span class='line'>android:layout_height="wrap_content"
</span><span class='line'>android:gravity="center"
</span><span class='line'>whatever:my_custom_attribute="Hello, world!" /&gt;
</span><span class='line'>&lt;/LinearLayout&gt;</span></code></pre></td></tr></table></div></figure>


<p>Finally, to access that custom attribute you normally do so in the constructor of you custom view as follows:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>public MyCustomView(Context context, AttributeSet attrs, int defStyle) {
</span><span class='line'>    super(context, attrs, defStyle);
</span><span class='line'>
</span><span class='line'>    TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.MyCustomView, defStyle, 0);
</span><span class='line'>
</span><span class='line'>    String str = a.getString(R.styleable.MyCustomView_my_custom_attribute);
</span><span class='line'>
</span><span class='line'>    //do something with str
</span><span class='line'>
</span><span class='line'>    a.recycle();
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="http://stackoverflow.com/questions/3441396/defining-custom-attrs">Defining custom attrs</a></p>

<h3>2. How to get Uri from raw file?</h3>

<p>A: <code>Uri url = Uri.parse("android.resource://" + getPackageName() + "/" + R.raw.usa_for_africa_we_are_the_world);</code></p>

<p>Reference:<a href="http://stackoverflow.com/questions/16791439/android-how-to-get-uri-from-raw-file">Android - How to get Uri from raw file?</a></p>

<h3>3. How to display all music on SD card?</h3>

<p>A: We can use loader perform this work,</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>public Loader&lt;Cursor&gt; onCreateLoader(int id, Bundle args) {
</span><span class='line'>    return new CursorLoader(getActivity(), MediaStore.Audio.Media.EXTERNAL_CONTENT_URI, new String[] { MediaStore.Audio.Media.DISPLAY_NAME }, null, null,
</span><span class='line'>      "LOWER(" + MediaStore.Audio.Media.TITLE + ") ASC");    
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="http://stackoverflow.com/questions/8994625/display-all-music-on-sd-card">Display all music on SD card</a></p>

<h3>4. Call require API level 21(current min is 10):android.content.Context#getDrawable.</h3>

<p>A:<code>ContextCompat.getDrawable(getActivity(), R.drawable.name);</code></p>

<p>Reference:<a href="http://stackoverflow.com/questions/29041027/android-getresources-getdrawable-deprecated-api-22/29041466#29041466">Android getResources().getDrawable() deprecated API 22</a></p>

<h3>5. Android Studio 工程卡在 Refreshing &lsquo;Project Name&rsquo; Gradle project 或 gradle building project。</h3>

<p>A: Android Studio 更新到 2.3 后，打开之前的项目卡在 Refreshing &lsquo;Project Name&rsquo; Gradle project, 问题的原因是新版本的 Android Studio 使用的也是新版本的 Gradle,由于网络原因导致更新 Gradle 很慢，我们可以手动下载 Gradle 来解决这个问题。</p>

<ol>
<li>根据项目中 gradle-wrapper.properties 文件的配置，手动下载合适版本的 gradle;</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip</span></code></pre></td></tr></table></div></figure>


<ol>
<li>将下载好的 gradle 移动到合适的位置;</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// Windows
</span><span class='line'>C:\Users\用户名.gradle\wrapper\dists\gradle-x.xx-all\xxxxxxxxxxxx
</span><span class='line'>// MacOS
</span><span class='line'>$HOME/.gradle/wrapper/dists/gradle-3.3-all/55gk2rcmfc6p2dg9u9ohc3hw9/
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>重启 Android Studio。</li>
</ol>


<p>Reference:
<a href="http://www.jianshu.com/p/3063173deed8">Android Studio解决refreshing gradle project</a><br/>
<a href="http://zzqhost.com/?post=82">Androidstudio配置本地Gradle</a></p>

<h3>6. 怎么改变 EditText 输入框底部线条的颜色？</h3>

<p>A: 在 style.xml 中覆盖 colorControlActivated, ColorControlHighlight 和 colorControlNormal</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;style name="Theme.App.Base" parent="Theme.AppCompat.Light.DarkActionBar"&gt;
</span><span class='line'>    &lt;item name="colorControlNormal"&gt;#c5c5c5&lt;/item&gt;
</span><span class='line'>    &lt;item name="colorControlActivated"&gt;@color/accent&lt;/item&gt;
</span><span class='line'>    &lt;item name="colorControlHighlight"&gt;@color/accent&lt;/item&gt;
</span><span class='line'>&lt;/style&gt;</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://stackoverflow.com/questions/26574328/changing-edittext-bottom-line-color-with-appcompat-v7">Changing EditText bottom line color with appcompat v7</a></p>

<h3>7.如何隐藏软键盘？</h3>

<p>A:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// Check if no view has focus:
</span><span class='line'>View view = this.getCurrentFocus();
</span><span class='line'>if (view != null) {  
</span><span class='line'>    InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
</span><span class='line'>    imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://stackoverflow.com/questions/1109022/close-hide-the-android-soft-keyboard">Close/hide the Android Soft Keyboard</a></p>

<h3>8.ListView 中的 EditText 捕获焦点异常。</h3>

<p>A:在 manifest 中配置下 Activity :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;activity android:name= ".yourActivity" android:windowSoftInputMode="adjustPan"/&gt;</span></code></pre></td></tr></table></div></figure>


<p>Reference:<a href="https://stackoverflow.com/questions/2679948/focusable-edittext-inside-listview">Focusable EditText inside ListView</a></p>

<h3>9.Android Studio 如何设置使用本地 gradle?</h3>

<p>A:</p>

<ol>
<li>下载 gradle;</li>
<li>解压 gradle 到合适的目录，例如 /Users/meiliang/.gradle/local_gradle_distribution/;</li>
<li>在 Android Studio 中设置 gradle home:</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> Android Studio &gt; Preference... &gt; Build,Excution,Deployment &gt; Gradle &gt; User local gradle distribution &gt; Gradle home
</span><span class='line'>
</span><span class='line'> Gradle home :/Users/meiliang/.gradle/local_gradle_distribution/gradle-3.3</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 真机抓包]]></title>
    <link href="http://DamianSheldon.github.io/blog/capturing-android-physic-device-traffic-on-tcpdump.html"/>
    <updated>2017-03-11T17:04:33+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/capturing-android-physic-device-traffic-on-tcpdump</id>
    <content type="html"><![CDATA[<p>在 Android 开发过程中，可能会遇到和服务端交互有问题的情况，这时候就得拿出证据来和服务端撕逼, 而最有力的证据自然是抓取的网络数据包；又或者是遇到很诡异的网络问题，这时候就可以借助抓包来分析和定位问题。</p>

<p>如果我们和服务端的交互没有通过 VPN, 而且也不是视频流这种网络性能要求苛刻的情况，我们可以通过 tPacketCapture 这种应用来抓包；</p>

<p>其他情况我们可以通过 root 手机，然后安装 tcpdump 来抓包。</p>

<p>下面我们详细介绍下 通过 tcpdump 抓包这种方法：</p>

<ul>
<li>Root 手机</li>
</ul>


<p>Root 手机的原理是利用系统存在的漏洞来获得 root 权限，<a href="https://forum.xda-developers.com/">XDA Developers</a> 上有不少 root 工具，很多手机都可以用它们 root。</p>

<ul>
<li>安装 tcpdump</li>
</ul>


<p>可以到网上搜索为 Android 编译好的 tcpdump 二进制包，例如<a href="http://www.strazzere.com/android/tcpdump">这里</a>就有一个。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// Copy tcpdump to device
</span><span class='line'>$ adb -d push /path/to/tcpdump /sdcard/tcpdump
</span><span class='line'>
</span><span class='line'>// Device shell
</span><span class='line'>$ adb -d shell
</span><span class='line'>
</span><span class='line'>// Switch to root
</span><span class='line'>$ su
</span><span class='line'>
</span><span class='line'>// Copy tcpdump to /data/local/
</span><span class='line'># cat /sdcard/tcpdump /data/local/tcpdump</span></code></pre></td></tr></table></div></figure>


<!--more-->


<ul>
<li>抓包</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/# cd /data/local
</span><span class='line'>/# ./tcpdump -i any -p -s 0 -w /sdcard/capture.pcap
</span><span class='line'>
</span><span class='line'>//  Options
</span><span class='line'>    # "-i any": listen on any network interface
</span><span class='line'>
</span><span class='line'>　　# "-p": disable promiscuous mode (doesn't work anyway)
</span><span class='line'>
</span><span class='line'>　　# "-s 0": capture the entire packet
</span><span class='line'>
</span><span class='line'>　　# "-w": write packets to a file (rather than printing to stdout)
</span><span class='line'>
</span><span class='line'>　　... do whatever you want to capture, then ^C to stop it ...</span></code></pre></td></tr></table></div></figure>


<ul>
<li>分析</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// Copy capture.pcap to computer
</span><span class='line'>$ adb -d pull /sdcard/capture.pcap /path/to/capture.pcap
</span><span class='line'>
</span><span class='line'>Analyze with Wireshark.</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Shell Commands</li>
</ul>


<p>Android 手机上的命令通常不全，我们可以通过安装 BusyBox 来提供一个相对完成 Shell 命令集方便我们的开发工作。</p>

<p>1,Download <a href="http://www.busybox.net/downloads/binaries">BusyBox</a> 的压缩包;<br/>
2,获取设备 CPU 的架构版本 <code>adb -d shell cat /proc/cpuinfo</code><br/>
3,解开压缩包，把对应 CPU 架构版本的二进制包生命名为 busybox,例如 <code>mv busybox-armv7l busybox</code>;<br/>
4,安装 busybox 到设备上，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// Copy busybox to device
</span><span class='line'>$adb -d push /path/to/busybox /sdcard/busybox
</span><span class='line'>
</span><span class='line'>// Switch to device shell
</span><span class='line'>$adb -d shell
</span><span class='line'>
</span><span class='line'>// Install busybox
</span><span class='line'>$ su
</span><span class='line'>
</span><span class='line'>\# cat /sdcard/busybox /system/xbin/busybox
</span><span class='line'>
</span><span class='line'>// Check install result
</span><span class='line'># busybox 
</span><span class='line'>
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<h2>Reference</h2>

<ul>
<li><a href="http://www.cnblogs.com/likwo/archive/2012/09/06/2673944.html">Android通过tcpdump抓包</a></li>
<li><a href="http://www.cnblogs.com/blues_/p/3582097.html">转adb Shell root 权限</a></li>
<li><a href="http://www.cnblogs.com/xiaowenji/archive/2011/03/12/1982309.html">为Android安装BusyBox —— 完整的bash shell</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何搭建一个带 Dovecot 的 Postfix 邮件服务器]]></title>
    <link href="http://DamianSheldon.github.io/blog/how-to-set-up-a-postfix-e-mail-server-with-dovecot.html"/>
    <updated>2017-02-15T16:29:42+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/how-to-set-up-a-postfix-e-mail-server-with-dovecot</id>
    <content type="html"><![CDATA[<p>不知道从什么时候开始，也不知道是什么原因，我一直觉得有个自己域名的邮箱很酷，所以我决定自己动手搭建一个邮件服务器。本文记录了我搭建一个自己域名的邮件服务器，并让这个邮箱可以通过 Mac 和 iPhone 自由收发邮件的过程。</p>

<h2>准备材料</h2>

<ul>
<li>VPS</li>
<li>域名</li>
</ul>


<p>VPS 我用的 DigitalOcean，是个人开发者不错的选择，可以使用<a href="https://m.do.co/c/537dc7bd8a78">优惠码</a>购买，这样你可以获赠 10 美元。</p>

<p>我服务器跑的是 Debian 8 Jessie.</p>

<h2>配置 DNS</h2>

<h3>添加 MX 记录</h3>

<p>添加从域名到 VPS IP 的 MX 记录，它指定了负责处理这个域名邮件收发的服务器。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Type    Hostname        Value         TTL
</span><span class='line'>MX      tenneshop.com   1.2.3.4.      1800</span></code></pre></td></tr></table></div></figure>


<h3>验证 DNS</h3>

<p>DNS 需要几个小时才能蔓延到整个互联网，但是在你的 DNS 服务器上几分钟之后就会生效，你可以用 dig 和 host 来验证。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@yourbase] ~# dig MX mydomain.com +short @ns1.digitalocean.com
</span><span class='line'>50 mail.mydomain.com.
</span><span class='line'>[root@yourbase] ~# host mail.mydomain.com ns1.digitalocean.com
</span><span class='line'>Using domain server:
</span><span class='line'>Name: ns1.digitalocean.com
</span><span class='line'>Address: 198.199.120.125#53
</span><span class='line'>Aliases:
</span><span class='line'>
</span><span class='line'>mail.mydomain.com has address 82.196.9.119</span></code></pre></td></tr></table></div></figure>


<!--more-->


<h2>邮件系统是怎么工作</h2>

<p>开始之前我觉得有必要了解下邮件系统是怎么工作的，Dovecot 上有篇文章介绍的很好，值得看下：<a href="http://wiki.dovecot.org/MailServerOverview">Overview of how everything works together</a>,
我简单地说一下我的理解，先看发邮件，以使用 Mac 的 Mail 为例，用户用 Mail 写了封邮件，邮件包含收件人地址和信件内容，然后点击发送，Mail 在这里就是 MUA(Mail User Agent), MUA 把邮件发送到 Mail Server, Mail Server 称之为 MTA(Mail Transfer Agent), MTA 根据收件人地址去查询 DNS 记录，然后把邮件发送到目标MTA, 目标MTA则负责把邮件传送给MDA(Mail Delivery Agent), MDA则负责把邮件存储到邮件服务器上。</p>

<p>再看收邮件，用户打开 Mail 之后会触发收件操作，通常是通过 IMAP 或 POP3 协议去获取 MDA 存储在 Mail Server 上的邮件。</p>

<p>我们这里 MTA 用的 Postfix, IMAP/POP3 Server 用的 Dovecot.</p>

<h2>Postfix</h2>

<h3>安装</h3>

<p>Debian 默认的邮件服务程序是 exim，我们需要卸载它。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo aptitude remove exim4 && aptitude install postfix && postfix stop</span></code></pre></td></tr></table></div></figure>


<h3>配置</h3>

<p>Postfix 有两个主要配置文件 /etc/postfix/main.cf 和 /etc/postfix/master.cf, main.cf 指定配置项；master.cf 指定 postfix 要运行哪些服务。</p>

<p>配置的主要工作自然是编辑 main.cf 这个文件里的配置项，安全起见我们可以先把默认的配置文件做个备份:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cp /etc/postfix/main.cf /etc/postfix/main.cf.orig</span></code></pre></td></tr></table></div></figure>


<ul>
<li>配置发送邮件使用的域名;</li>
</ul>


<p>我们可能希望别人收到我们的邮件时显示的收件人是user@example.com这种形式而不是user@mail.example.com,这可以通过设置myorigin来实现:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/postfix/main.cf
</span><span class='line'>myorigin = $mydomain</span></code></pre></td></tr></table></div></figure>


<ul>
<li>希望收到哪些域名的邮件</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>domain-wide mail server
</span><span class='line'>/etc/postfix/main.cf:
</span><span class='line'>    mydestination = $myhostname localhost.$mydomain localhost $mydomain
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>配置哪些终端可以中继邮件</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/postfix/main.cf:
</span><span class='line'>mynetworks_style = host
</span><span class='line'>mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128 </span></code></pre></td></tr></table></div></figure>


<ul>
<li>配置邮件服务器的基本账号，例如 postmaster, 这是必须要有的账号，这样别人才能反馈邮件投递的问题。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/aliases:
</span><span class='line'>mailer-daemon: postmaster
</span><span class='line'>postmaster: root
</span><span class='line'>nobody: root
</span><span class='line'>hostmaster: root
</span><span class='line'>usenet: root
</span><span class='line'>news: root
</span><span class='line'>webmaster: root
</span><span class='line'>www: root
</span><span class='line'>ftp: root
</span><span class='line'>abuse: root
</span><span class='line'>root: yourname</span></code></pre></td></tr></table></div></figure>


<p>更新完了/etc/aliases，还需要运行命令去生效:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ newaliases</span></code></pre></td></tr></table></div></figure>


<ul>
<li>配置邮件用户账号</li>
</ul>


<p>Postfix 使用数据库文件来控制权限：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/postfix/main.cf:
</span><span class='line'>    virtual_alias_maps = hash:/etc/postfix/virtual
</span><span class='line'>
</span><span class='line'>/etc/postfix/virtual:
</span><span class='line'>// Map Mail Addresses to Linux Accounts
</span><span class='line'>contact@example.com sammy
</span><span class='line'>admin@example.com sammy</span></code></pre></td></tr></table></div></figure>


<p>我们可以通过如下命令来让映射生效:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo postmap /etc/postfix/virtual</span></code></pre></td></tr></table></div></figure>


<ul>
<li>配置邮件的存储文件格式</li>
</ul>


<blockquote><p>There are two primary storage options of mail in the *NIX world: mbox and Maildir. mbox stores multiple messages - sometimes hundreds or thousands of messages - in a single file. Maildir stores each message a separate file.</p></blockquote>

<p>Postfix 默认是 mbox 的格式，这里我们决定使用 Maildir 的格式，可以用 postconf 命令来配置:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo postconf -e 'home_mailbox= Maildir/'</span></code></pre></td></tr></table></div></figure>


<p>更新环境变量 MAIL 的值：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo 'export MAIL=~/Maildir' | sudo tee -a /etc/bash.bashrc | sudo tee -a /etc/profile.d/mail.sh</span></code></pre></td></tr></table></div></figure>


<p>让变量在当前的会话中生效：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ source /etc/profile.d/mail.sh</span></code></pre></td></tr></table></div></figure>


<h3>测试</h3>

<p>本地测试之前需要初始化 Maildir 的目录结构，在我们 home 目录中创建 Maildir 目录结构最简单的方法是向我们自己发一封邮件，可以使用 mail 命令:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 安装 mail 命令
</span><span class='line'>$ sudo apt-get install mailutils
</span><span class='line'>
</span><span class='line'>// 发送邮件
</span><span class='line'>$ echo 'init' | mail -s 'init' sammy
</span><span class='line'>
</span><span class='line'>// 确认 Maildir 目录结构初始化好了
</span><span class='line'>$ ls -R ~/Maildir
</span><span class='line'>
</span><span class='line'>// 输出的结果： 
</span><span class='line'>/home/sammy/Maildir/:
</span><span class='line'>cur  new  tmp
</span><span class='line'>
</span><span class='line'>/home/sammy/Maildir/cur:
</span><span class='line'>
</span><span class='line'>/home/sammy/Maildir/new:
</span><span class='line'>1463177269.Vfd01I40e4dM691221.mail.example.com
</span><span class='line'>
</span><span class='line'>/home/sammy/Maildir/tmp:</span></code></pre></td></tr></table></div></figure>


<p>使用 mail 命令发送邮件:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mail -s "Hello World" someone@example.com
</span><span class='line'>Cc: 
</span><span class='line'>Hi Peter
</span><span class='line'>How are you
</span><span class='line'>I am fine
</span><span class='line'>Good Bye
</span><span class='line'>&lt;Ctrl+D&gt;</span></code></pre></td></tr></table></div></figure>


<p>使用 mail 命令查看邮件：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mail
</span><span class='line'>Heirloom mailx version 12.5 6/20/10.  Type ? for help.
</span><span class='line'>"/var/mail/enlightened": 7 messages 3 unread
</span><span class='line'>O  1 Enlightened        Sat Dec  6 11:33   21/658   This is the subject
</span><span class='line'>O  2 Enlightened        Sat Dec  6 11:34  773/25549 This is the subject
</span><span class='line'>O  3 Enlightened        Sat Dec  6 16:43   20/633   This is the subject
</span><span class='line'>O  4 Enlightened        Sat Dec  6 16:44   20/633   This is the subject
</span><span class='line'>U  5 Mail Delivery Syst Sat Dec  6 16:50   74/2425  Undelivered Mail Returned to Sender
</span><span class='line'>U  6 Enlightened        Sat Dec  6 16:51   19/632   This is mutts subject
</span><span class='line'>U  7 Enlightened        Sat Dec  6 16:52   19/647   This is mutts subject
</span><span class='line'>?</span></code></pre></td></tr></table></div></figure>


<p>我们可以使用 ? 来查看帮助，例如查看下一封邮件是n, 退出是q。</p>

<p>日常生活工作中我们可能不会是通过 mail 来收发邮件，但它在我们配置邮件服务器时很有用，我们可以知道 postfix 是否是正常工作的。</p>

<p>如果postfix并没有按我们预期那样正常工作，我们可以通过查看系统日志和邮件日志来定位问题:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// system log
</span><span class='line'>$ sudo tail -f /var/log/syslog
</span><span class='line'>
</span><span class='line'>// mail log
</span><span class='line'>$ suod tail -f /var/log/mail.log</span></code></pre></td></tr></table></div></figure>


<h2>Dovecot</h2>

<h3>安装</h3>

<p>Dovecot 支持 imap 和 pop3，这里我用的 imap,</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ aptitude install dovecot-core dovecot-imapd</span></code></pre></td></tr></table></div></figure>


<h3>配置</h3>

<p>Dovecot 的配置文档要比 postfix 好得多，只需要参考它的 Dovecot installation。</p>

<ul>
<li>Checking where mail is delivered to</li>
</ul>


<p>我们的邮件地址是 ~/Maildir, 更新到配置文件中:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/dovecot/conf.d/10-mail.conf:
</span><span class='line'>mail_location = maildir:~/Maildir</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Configuring Dovecot</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// Find Dovecot configuration file location using:
</span><span class='line'>$ doveconf -n | head -n1
</span><span class='line'>/etc/dovecot/dovecot.conf
</span><span class='line'>
</span><span class='line'>// Authentication
</span><span class='line'>// 由于我们打算使用虚拟用户，所以我们这里创建一个类似密码的文件:
</span><span class='line'>$ echo "$USER:{PLAIN}password:$UID:$GID::$HOME" &gt; users
</span><span class='line'>$ sudo mv users /etc/dovecot/
</span><span class='line'>
</span><span class='line'>$GID 这个环境变量可能没值，我们可以手动编辑，首先找出gid：
</span><span class='line'>id $USER
</span><span class='line'>
</span><span class='line'>然后把gid 加到对应的字段里面:
</span><span class='line'>$ sudo vim /etc/dovecot/users
</span><span class='line'>
</span><span class='line'>// /etc/dovecot/conf.d/10-auth.conf
</span><span class='line'>// Add '#' to comment out the system user login for now:
</span><span class='line'>    #!include auth-system.conf.ext
</span><span class='line'>
</span><span class='line'>// Remove '#' to use passwd-file:
</span><span class='line'>!include auth-passwdfile.conf.ext
</span><span class='line'>
</span><span class='line'>/etc/dovecot/conf.d/auth-passwdfile.conf.ext
</span><span class='line'>passdb {
</span><span class='line'>      driver = passwd-file
</span><span class='line'>        args = scheme=CRYPT username_format=%u /etc/dovecot/users
</span><span class='line'>}
</span><span class='line'>userdb {
</span><span class='line'>      driver = passwd-file
</span><span class='line'>        args = username_format=%u /etc/dovecot/users
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>// Verify with doveconf -n passdb userdb that the output looks like above (and there are no other passdbs or userdbs).
</span><span class='line'>
</span><span class='line'>// Plaintext Authentication
</span><span class='line'>To allow any Authentication without SSL, disable SSL in the conf.d/10-ssl.conf file.
</span><span class='line'>/etc/dovecot/conf.d/10-ssl.conf:
</span><span class='line'>ssl = no
</span><span class='line'>
</span><span class='line'>Until SSL is configured, allow plaintext authentication in the conf.d/10-auth.conf file. You probably want to switch this back to "yes" afterward.
</span><span class='line'>/etc/dovecot/conf.d/10-auth.conf:
</span><span class='line'>disable_plaintext_auth = no</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Running Dovecot</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// Start Dovecot
</span><span class='line'>$ sudo service dovecot start
</span><span class='line'>
</span><span class='line'>// Stop Dovecot
</span><span class='line'>$sudo service dovecot stop
</span><span class='line'>
</span><span class='line'>// Restart 
</span><span class='line'>$sudo service dovecot restart
</span><span class='line'>
</span><span class='line'>// Verify
</span><span class='line'>$ sudo ps auxw|grep "dovecot"</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Testing that everything works</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// Check that it's listening
</span><span class='line'>$ telnet localhost 143
</span><span class='line'>Trying 127.0.0.1...
</span><span class='line'>Connected to localhost.
</span><span class='line'>Escape character is '^]'.
</span><span class='line'>* OK [CAPABILITY IMAP4rev1 LITERAL+ SASL-IR LOGIN-REFERRALS ID ENABLE STARTTLS AUTH=PLAIN] Dovecot ready.
</span><span class='line'>
</span><span class='line'>If you got "connection refused", make sure that Dovecot is configured to serve the imap protocol and listening on the expected interfaces/addresses. The simplest way to do that would be using doveconf(1):
</span><span class='line'>$ sudo doveconf protocols listen
</span><span class='line'>protocols = imap pop3 lmtp sieve
</span><span class='line'>listen = *, ::
</span><span class='line'>
</span><span class='line'>Next check that it also works from remote host:
</span><span class='line'>$ telnet imap.example.com 143
</span><span class='line'>Trying 1.2.3.4...
</span><span class='line'>Connected to imap.example.com.
</span><span class='line'>Escape character is '^]'.
</span><span class='line'>* OK [CAPABILITY IMAP4rev1 LITERAL+ SASL-IR LOGIN-REFERRALS ID ENABLE STARTTLS AUTH=PLAIN] Dovecot ready.
</span><span class='line'>
</span><span class='line'>Check that it's allowing logins
</span><span class='line'>% telnet localhost 143
</span><span class='line'>a login "username" "password"
</span><span class='line'>a OK Logged in.
</span><span class='line'>
</span><span class='line'>Check that it's allowing remote logins
</span><span class='line'>$ telnet imap.example.com 143
</span><span class='line'>a login "username" "password"
</span><span class='line'>
</span><span class='line'>Check that it finds INBOX
</span><span class='line'>b select inbox
</span><span class='line'>* FLAGS (\Answered \Flagged \Deleted \Seen \Draft)
</span><span class='line'>* OK [PERMANENTFLAGS (\Answered \Flagged \Deleted \Seen \Draft \*)] Flags permitted.
</span><span class='line'>* 1 EXISTS
</span><span class='line'>* 1 RECENT
</span><span class='line'>* OK [UIDVALIDITY 1106186941] UIDs valid
</span><span class='line'>* OK [UIDNEXT 2] Predicted next UID
</span><span class='line'>b OK [READ-WRITE] Select completed.
</span><span class='line'>
</span><span class='line'>Make a graceful exit
</span><span class='line'>e logout
</span><span class='line'>* BYE Logging out
</span><span class='line'>e OK Logout completed.
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Finishing the test installation</li>
</ul>


<p>最后我们要开启 ssl, 关闭明文密码验证, <a href="https://letsencrypt.org/">Let&rsquo;s Encrypt</a>可以提供免费的 SSL 证书:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// Enable the Jessie backports repo
</span><span class='line'>For jessie add this line
</span><span class='line'>deb http://ftp.debian.org/debian jessie-backports main
</span><span class='line'>to your source.list(/etc/sources.list)
</span><span class='line'>
</span><span class='line'>Run apt-get update
</span><span class='line'>
</span><span class='line'>// Temporarily stop apache
</span><span class='line'>$ sudo service apache2 stop
</span><span class='line'>
</span><span class='line'>// sudo certbot certonly --standalone -d example.com
</span><span class='line'>
</span><span class='line'>All generated keys and issued certificates can be found in /etc/letsencrypt/live/$domain.
</span><span class='line'>
</span><span class='line'>/etc/dovecot/conf.d/10-ssl.conf:
</span><span class='line'>ssl = yes 
</span><span class='line'>
</span><span class='line'>ssl_cert = &lt;/etc/letsencrypt/live/mail.tennshop.com/fullchain.pem
</span><span class='line'>ssl_key = &lt;/etc/letsencrypt/live/mail.tenneshop.com/privkey.pem
</span><span class='line'>
</span><span class='line'>/etc/dovecot/conf.d/10-auth.conf:
</span><span class='line'>disable_plaintext_auth = yes 
</span><span class='line'>
</span><span class='line'>Test using imaps port (assuming you haven't disabled imaps port):
</span><span class='line'>$ openssl s_client -connect imap.example.com:993
</span><span class='line'>* OK Dovecot ready.
</span><span class='line'>
</span><span class='line'>Test using imap port and STARTTLS command (works also with imap port):
</span><span class='line'>$ openssl s_client -connect imap.example.com:143 -starttls imap
</span><span class='line'>* OK Dovecot ready.</span></code></pre></td></tr></table></div></figure>


<h2>Mail</h2>

<p>现在我们可以在 Mac 上使用 Mail.app 来收信了，但还是不能发信，postfix 默认不支持外域发信，我们需要一种方法获取内域相同的权限。为了解决这个问题， Postfix 支持 SASL.</p>

<p>Configure SASL authentication in the Postfix SMTP server</p>

<p>由于 SASL 的实现和 Postfix 是分开的，所以在 Postfix SMTP 服务器上配置 SASL 授权会有两个不同的内容：</p>

<ul>
<li>配置 SASL 实现来提供一系列合适的机制来进行 SASL 认证，决定好使用哪个 SASL 实现后，配置认证的后端，它通过系统的密码文件或其他数据库来认证远端的 SMTP 终端；</li>
<li>配置 Postfix SMTP 服务器使能 SASL 认证，去授权终端中继邮件或控制终端可以使用哪些邮件发送地址;</li>
</ul>


<p>Which SASL Implementations are supported?</p>

<p>Currently the Postfix SMTP server supports the Cyrus SASL and Dovecot SASL implementations.</p>

<p>To find out what SASL implementations are compiled into Postfix, use the following commands:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% postconf -a (SASL support in the SMTP server)
</span><span class='line'>% postconf -A (SASL support in the SMTP+LMTP client)</span></code></pre></td></tr></table></div></figure>


<p>Configuring Dovecot SASL</p>

<p>Dovecot 独立地去认证它的 POP/IMAP 终端，Postfix 使用 Dovecot SASL 时会复用这部分配置。</p>

<p>Postfix 到 Dovecot SASL 的通信有两种途径:UNIX-domain socket or TCP socket。从更好的安全性角度出发，我们选择使用 UNIX-domain socket.</p>

<p>The following fragment for Dovecot version 2 assumes that the Postfix queue is under /var/spool/postfix/.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/dovecot/conf.d/10-master.conf:
</span><span class='line'>service auth {
</span><span class='line'>    ...
</span><span class='line'>    unix_listener /var/spool/postfix/private/auth {
</span><span class='line'>        mode = 0660
</span><span class='line'>        # Aussuming the default postfix user and group
</span><span class='line'>        user = postfix
</span><span class='line'>        group = postfix
</span><span class='line'>    }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>/etc/dovecot/conf.d/10-auth.conf
</span><span class='line'>auth_mechanisms = plain login</span></code></pre></td></tr></table></div></figure>


<p>Enabling SASL authentication and authorization in the Postfix SMTP server</p>

<p>默认 postfix 是使用 Cyrus SASL 实现，我们需要改成 dovecot</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/postfix/main.cf:
</span><span class='line'>smtpd_sasl_type = dovecot</span></code></pre></td></tr></table></div></figure>


<p>指定 Postfix 怎么和 Dovecot 认证服务器通信, 这里我们使用 UNIX-domain socket:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/postfix/main.cf:
</span><span class='line'>smtpd_sasl_path = private/auth</span></code></pre></td></tr></table></div></figure>


<p>开启 SASL 认证:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/postfix/main.cf:
</span><span class='line'>smtpd_sasl_auth_enable = yes</span></code></pre></td></tr></table></div></figure>


<p>重启下 postfix, 使用 SMTP 命令验证配置是否生效:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% telnet server.example.com 25
</span><span class='line'>...
</span><span class='line'>220 server.example.com ESMTP Postfix
</span><span class='line'>EHLO client.example.com
</span><span class='line'>250-server.example.com
</span><span class='line'>250-PIPELINING
</span><span class='line'>250-SIZE 10240000
</span><span class='line'>250-AUTH DIGEST-MD5 PLAIN CRAM-MD5
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>配置 Postfix SMTP 服务器的安全原则：</p>

<p>Unencrypted SMTP session</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/postfix/main.cf:
</span><span class='line'>smtpd_sasl_security_options = noanonymous</span></code></pre></td></tr></table></div></figure>


<p>Encrypted SMTP session</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/postfix/main.cf:
</span><span class='line'>smtpd_sasl_tls_security_options = $smtpd_sasl_security_options</span></code></pre></td></tr></table></div></figure>


<p>To offer SASL authentication only after a TLS-encrypted session has been established specify this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/postfix/main.cf:
</span><span class='line'>smtpd_tls_auth_only = yes</span></code></pre></td></tr></table></div></figure>


<p>After the client has authenticated with SASL, the Postfix SMTP server decides what the remote SMTP client will be authorized for. Examples of possible SMTP clients authorizations are:</p>

<ul>
<li>Send a message to a remote recipient.</li>
<li>Use a specific envelope sender in the MAIL FROM command.</li>
</ul>


<p>These permissions are not enabled by default.</p>

<p>Mail relay authorization</p>

<p>With permit_sasl_authenticated the Postfix SMTP server can allow SASL-authenticated SMTP clients to send mail to remote destinations. Examples:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># With Postfix 2.10 and later, the mail relay policy is
</span><span class='line'># preferably specified under smtpd_relay_restrictions.
</span><span class='line'>/etc/postfix/main.cf:
</span><span class='line'>smtpd_relay_restrictions =
</span><span class='line'>permit_mynetworks
</span><span class='line'>permit_sasl_authenticated
</span><span class='line'>reject_unauth_destination
</span><span class='line'># Older configurations combine relay control and spam control under
</span><span class='line'># smtpd_recipient_restrictions. To use this example with Postfix ≥
</span><span class='line'># 2.10 specify "smtpd_relay_restrictions=".
</span><span class='line'>/etc/postfix/main.cf:
</span><span class='line'>smtpd_recipient_restrictions =
</span><span class='line'>permit_mynetworks
</span><span class='line'>permit_sasl_authenticated
</span><span class='line'>reject_unauth_destination
</span><span class='line'>...other rules...</span></code></pre></td></tr></table></div></figure>


<p>Envelope sender address authorization</p>

<p>By default an SMTP client may specify any envelope sender address in the MAIL FROM command. That is because the Postfix SMTP server only knows the remote SMTP client hostname and IP address, but not the user who controls the remote SMTP client.</p>

<p>This changes the moment an SMTP client uses SASL authentication. Now, the Postfix SMTP server knows who the sender is. Given a table of envelope sender addresses and SASL login names, the Postfix SMTP server can decide if the SASL authenticated client is allowed to use a particular envelope sender address:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/postfix/main.cf:
</span><span class='line'>smtpd_sender_login_maps = hash:/etc/postfix/controlled_envelope_senders
</span><span class='line'>
</span><span class='line'>smtpd_recipient_restrictions =
</span><span class='line'>...
</span><span class='line'>reject_sender_login_mismatch
</span><span class='line'>permit_sasl_authenticated
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>The controlled_envelope_senders table specifies the binding between a sender envelope address and the SASL login names that own that address:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/postfix/controlled_envelope_senders
</span><span class='line'>    # envelope sender           owners (SASL login names)
</span><span class='line'>john@example.com            john@example.com
</span><span class='line'>helpdesk@example.com        john@example.com, mary@example.com
</span><span class='line'>postmaster                  admin@example.com
</span><span class='line'>@example.net                barney, fred, john@example.com, mary@example.com</span></code></pre></td></tr></table></div></figure>


<p>With this, the reject_sender_login_mismatch restriction above will reject the sender address in the MAIL FROM command if smtpd_sender_login_maps does not specify the SMTP client&rsquo;s login name as an owner of that address.</p>

<p>Testing SASL authentication in the Postfix SMTP server</p>

<p>To test the server side, connect (for example, with telnet) to the Postfix SMTP server port and you should be able to have a conversation as shown below.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% telnet server.example.com 25
</span><span class='line'>...
</span><span class='line'>220 server.example.com ESMTP Postfix
</span><span class='line'>EHLO client.example.com
</span><span class='line'>250-server.example.com
</span><span class='line'>250-PIPELINING
</span><span class='line'>250-SIZE 10240000
</span><span class='line'>250-ETRN
</span><span class='line'>250-AUTH DIGEST-MD5 PLAIN CRAM-MD5
</span><span class='line'>250 8BITMIME
</span><span class='line'>AUTH PLAIN AHRlc3QAdGVzdHBhc3M=
</span><span class='line'>235 Authentication successful</span></code></pre></td></tr></table></div></figure>


<p>To test this over a connection that is encrypted with TLS, use openssl s_client instead of telnet:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% openssl s_client -connect server.example.com:25 -starttls smtp
</span><span class='line'>...
</span><span class='line'>220 server.example.com ESMTP Postfix
</span><span class='line'>EHLO client.example.com
</span><span class='line'>...see above example for more...</span></code></pre></td></tr></table></div></figure>


<p>PLAIN 的授权方式要求用户名和密码一起base64编码提交， LOGIN 的话则是先提交base64编码的用户名，然后是base64编码的密码, base64编码的话可以找个<a href="https://www.base64encode.org/">在线编码工具</a>：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>auth login 
</span><span class='line'>334 VXNlcm5hbWU6
</span><span class='line'>c2VydmljZUBoZWVwLmNx
</span><span class='line'>334 UGFzc3dvcmQ6
</span><span class='line'>xxxxxxxx
</span><span class='line'>235 Authentication successful</span></code></pre></td></tr></table></div></figure>


<p>SMTP 命令列表如下：</p>

<p>HELO</p>

<p>客户端为标识自己的身份而发送的命令（通常带域名）</p>

<p>EHLO</p>

<p>使服务器可以表明自己支持扩展简单邮件传输协议 (ESMTP) 命令。</p>

<p>MAIL FROM</p>

<p>标识邮件的发件人；以 MAIL FROM: 的形式使用。</p>

<p>RCPT TO</p>

<p>标识邮件的收件人；以 RCPT TO: 的形式使用。</p>

<p>TURN</p>

<p>允许客户端和服务器交换角色，并在相反的方向发送邮件，而不必建立新的连接。</p>

<p>ATRN</p>

<p>ATRN (Authenticated TURN) 命令可以选择将一个或多个域作为参数。如果该会话已通过身份验证，则ATRN 命令一定会被拒绝。</p>

<p>SIZE</p>

<p>提供一种使 SMTP 服务器可以指出所支持的最大邮件大小的机制。兼容的服务器必须提供大小范围，以指出可以接受的最大邮件大小。客户端发送的邮件不应大于服务器所指出的这一大小。</p>

<p>ETRN</p>

<p>SMTP 的扩展。SMTP 服务器可以发送 ETRN 以请求另一台服务器发送它所拥有的任何电子邮件。</p>

<p>PIPELINING</p>

<p>提供发送命令流（而无需在每个命令之后都等待响应）的能力。</p>

<p>CHUNKING</p>

<p>替换 DATA 命令的 ESMTP 命令。该命令使 SMTP 主机不必持续地扫描数据的末尾，它发送带参数的 BDAT 命令，该参数包含邮件的总字节数。接收方服务器计算邮件的字节数，如果邮件大小等于 BDAT 命令发送的值时，则该服务器假定它收到了全部的邮件数据。</p>

<p>DATA</p>

<p>客户端发送的、用于启动邮件内容传输的命令。</p>

<p>DSN</p>

<p>启用传递状态通知的 ESMTP 命令。</p>

<p>RSET</p>

<p>使整个邮件的处理无效，并重置缓冲区。</p>

<p>VRFY</p>

<p>确认在邮件传递过程中可以使用邮箱；例如，vrfy ted 确认在本地服务器上驻留 Ted 的邮箱。该命令在 Exchange 实现中默认关闭。</p>

<p>HELP</p>

<p>返回 SMTP 服务所支持的命令列表。</p>

<p>QUIT</p>

<p>终止会话。</p>

<p>我们可以用 SMTP 命令来测试是否能在外域正常发送邮件:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt;MAIL FROM: sender@example.com
</span><span class='line'>
</span><span class='line'>&gt;250 sender &lt;sender@example.com&gt; ok
</span><span class='line'>
</span><span class='line'>&gt;RCPT to: recipient@domain.com
</span><span class='line'>
</span><span class='line'>&gt;250 recipient &lt;recipient@domain.com&gt; ok
</span><span class='line'>
</span><span class='line'>&gt;DATA
</span><span class='line'>
</span><span class='line'>&gt;354 go ahead
</span><span class='line'>
</span><span class='line'>&gt;Subject: Hi smtp mail
</span><span class='line'>
</span><span class='line'>&gt;hello mail
</span><span class='line'>
</span><span class='line'>&gt;.
</span><span class='line'>
</span><span class='line'>&gt;250 ok:  Message 1763097690 accepted</span></code></pre></td></tr></table></div></figure>


<p>一切都正常工作之后，我们就可以在 Mac 和 iPhone 上配置 Mail 来收发邮件了，由于我们只让 Dovecot 支持了 IMAP,所以收件服务器我们选择 imap。用户名和密码就是我们为 Dovecot 在 /etc/dovecot/users 中配置的用户名密码。邮件地址则是我们为 Postfix 添加的邮件地址，而且这些邮件邮件地址应该在/etc/postfix/controlled_envelop_senders中和SASL 用户做了关联，这个很好理解，就是登录成功的用户他可以用那几个邮件地址发送邮件。</p>

<h2>Reference:</h2>

<p><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-postfix-e-mail-server-with-dovecot#postfix">How To Set Up a Postfix E-Mail Server with Dovecot</a><br/>
<a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-postfix-on-ubuntu-16-04#conclusion">How To Install and Configure Postfix on Ubuntu 16.04</a><br/>
<a href="http://www.postfix.org/">Postfix</a><br/>
<a href="http://wiki.dovecot.org/">Dovecot</a><br/>
<a href="http://www.binarytides.com/linux-mail-command-examples/">Linux mail command examples – send mails from command line</a><br/>
<a href="http://www.cnblogs.com/cocowool/archive/2012/03/14/2395390.html">SMTP的相关命令</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Photos 框架的基本使用]]></title>
    <link href="http://DamianSheldon.github.io/blog/photos-framework-usage.html"/>
    <updated>2016-12-23T14:23:33+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/photos-framework-usage</id>
    <content type="html"><![CDATA[<p>从 iOS 9 开始 Apple 把 Asset Library 标记为废弃状态，并建议开发者使用 Photos 框架。</p>

<blockquote><p>The Assets Library framework is deprecated as of iOS 9.0. Instead, use the Photos framework instead, which in iOS 8.0 and later provides more features and better performance for working with a user’s photo library.</p></blockquote>

<p>不幸的是 Apple 并没有发布相关的使用指导文档，只有一个相关 Demo。使用的时候固然可以回头参考这个 Demo，但这样的效率不是很高，很多概念也容易忘记，所以这里做个简单的总结。</p>

<p>Photos 中有不少类，其中几个犹为关键。PHPhotoLibary 是我们操作 Photo Library 里面资源的入口对象，所有的操作都通过它完成。PHCollectionList 表示相册中的专题列表；PHAssetCollection 表示专题；PHAsset 表示资源，如 images, videos, and Live Photos.</p>

<p>我们基本的需求就是 CRUD, 这些操作是需要用户授权的，记得先获取权限再操作， 下面我们展示相关的代码片段。</p>

<h3>Create</h3>

<ol>
<li>创建一个资源</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PHPhotoLibrary.shared().performChanges({
</span><span class='line'>            PHAssetChangeRequest.creationRequestForAsset(from: image)
</span><span class='line'>        }, completionHandler: {success, error in
</span><span class='line'>            if !success { print("error creating asset: \(error)") }
</span><span class='line'>        })</span></code></pre></td></tr></table></div></figure>


<ol>
<li>创建一个资源到指定的专题</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PHPhotoLibrary.shared().performChanges({
</span><span class='line'>            let creationRequest = PHAssetChangeRequest.creationRequestForAsset(from: image)
</span><span class='line'>            if let assetCollection = self.assetCollection {
</span><span class='line'>            let addAssetRequest = PHAssetCollectionChangeRequest(for: assetCollection)
</span><span class='line'>            addAssetRequest?.addAssets([creationRequest.placeholderForCreatedAsset!] as NSArray)
</span><span class='line'>            }
</span><span class='line'>        }, completionHandler: {success, error in
</span><span class='line'>            if !success { print("error creating asset: \(error)") }
</span><span class='line'>        })</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<h3>Read (Fetch)</h3>

<p>获取资源是通过 PHAsset 提供的一系列以 fetchXXX 开头的类方法，选择哪个方法取决于需求，这里示例其中两个我觉得常用的方法。</p>

<ol>
<li><code>class func fetchAssets(with options: PHFetchOptions?) -&gt; PHFetchResult&lt;PHAsset&gt;</code></li>
</ol>


<p>我们可以用这个方法获取 Photo Library 里面所有的资源。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>let allPhotosOptions = PHFetchOptions()
</span><span class='line'>    allPhotosOptions.sortDescriptors = [NSSortDescriptor(key: "creationDate", ascending: true)]
</span><span class='line'>self.fetchResult = PHAsset.fetchAssets(with: allPhotosOptions)</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>class func fetchAssets(in assetCollection: PHAssetCollection, options: PHFetchOptions?) -&gt; PHFetchResult&lt;PHAsset&gt;</code></li>
</ol>


<p>我们可以用这个方法获取指定专题里面的资源。例如我们想获取 Camera Roll 这个专题里面的资源：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>let cameraRoll: PHFetchResult&lt;PHAssetCollection&gt; = PHAssetCollection.fetchAssetCollections(with: .smartAlbum, subtype: .smartAlbumUserLibrary, options: nil).firstObject
</span><span class='line'>let fetchResult = PHAsset.fetchAssets(in: cameraRoll, options: nil)</span></code></pre></td></tr></table></div></figure>


<h3>Update (Edit)</h3>

<p>编辑的基本的做法是先用资源请求一个 PHContentEditingInput，然后编辑资源，为了方便用户之后继续编辑或撤销可以实例化一个 PHAdjustmentData 对象来持有相关信息。编辑完成之后对于图片和视频需要实例化一个 PHContentEditingOutput 来完成输出，PHContentEditingOutput 的 adjustmentData 属性关联之前的 PHAdjustmentData, 并把编辑完成的内容输出到 PHContentEditingOutput 的 renderedContentURL。最后创建一个 PHAssetChangeRequest 对象，设置它的 contentEditingOutput 为
之前实例化的 PHContentEditingOutput。</p>

<p>这部分的代码会多点，具体可以查看 <a href="https://github.com/DamianSheldon/PhotosFrameworkUsage">Demo</a>.</p>

<h3>Delete</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PHPhotoLibrary.shared().performChanges({ 
</span><span class='line'>        PHAssetChangeRequest.deleteAssets([self.asset] as NSArray)
</span><span class='line'>        }) { (success, error) in
</span><span class='line'>    DispatchQueue.main.sync {
</span><span class='line'>        self.trashButton.isEnabled = success ? false : true
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    if success {
</span><span class='line'>        print("delete asset successfully")
</span><span class='line'>    }
</span><span class='line'>    else {
</span><span class='line'>        print("can't delete asset: \(error)")
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>完整 Demo</h3>

<p><a href="https://github.com/DamianSheldon/PhotosFrameworkUsage">PhotosFrameworkUsage</a></p>

<h3>Caveat</h3>

<p>使用过程中遇到一个坑，这里记一下。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>guard let inputImage = CIImage(contentsOf: input.fullSizeImageURL!)
</span><span class='line'>            else { fatalError("can't load input image to edit") }
</span><span class='line'>
</span><span class='line'>// Apply the filter.
</span><span class='line'>let outputImage = inputImage
</span><span class='line'>    .applyingOrientation(input.fullSizeImageOrientation)
</span><span class='line'>.applyingFilter(filterName, withInputParameters: nil)
</span><span class='line'>
</span><span class='line'>// List 1.
</span><span class='line'>let uiImage = UIImage(ciImage: outputImage)
</span><span class='line'>
</span><span class='line'>// List 2.
</span><span class='line'>if let cgImage = CIContext(options: nil).createCGImage(outputImage, from: outputImage.extent) {
</span><span class='line'>    let uiImage = UIImage(cgImage:cgImage)
</span><span class='line'>}
</span><span class='line'>else {
</span><span class='line'>    print("instance UIImage from CGImage failed!")    
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>// Ouput
</span><span class='line'>if let data = UIImageJPEGRepresentation(uiImage, 0.7) {
</span><span class='line'>    // NSData - (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically;
</span><span class='line'>    do {
</span><span class='line'>        try data.write(to: output.renderedContentURL)
</span><span class='line'>
</span><span class='line'>    } catch let error {
</span><span class='line'>        print("output filtered image to specify URL failed: \(error)")
</span><span class='line'>    }
</span><span class='line'>}
</span><span class='line'>else {
</span><span class='line'>    print("generate JPEG representation data failed")
</span><span class='line'>        return
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>这里的问题是直接用 CIImage 实例化  UIImage 会失败，得转成 CGImage 然后实例化 UIImage. 至于它的原因我暂时还不清楚。</p>

<p>Reference:<a href="http://stackoverflow.com/questions/29732886/uiimagejpegrepresentation-returns-nil">UIImageJPEGRepresentation returns nil</a></p>
]]></content>
  </entry>
  
</feed>
