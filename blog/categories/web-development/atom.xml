<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: web development | Hello World]]></title>
  <link href="http://DamianSheldon.github.io/blog/categories/web-development/atom.xml" rel="self"/>
  <link href="http://DamianSheldon.github.io/"/>
  <updated>2018-09-13T15:58:23+08:00</updated>
  <id>http://DamianSheldon.github.io/</id>
  <author>
    <name><![CDATA[Sheldon]]></name>
    <email><![CDATA[dongmeilianghy@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Web 面试题汇总(二)]]></title>
    <link href="http://DamianSheldon.github.io/blog/web-technical-interview-part-3.html"/>
    <updated>2018-09-13T10:20:22+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/web-technical-interview-part-3</id>
    <content type="html"><![CDATA[<h3>1.介绍js的基本数据类型。</h3>

<p>A:</p>

<ul>
<li>Six data types that are primitives:

<ul>
<li>Boolean. true and false.</li>
<li>null. A special keyword denoting a null value. Because JavaScript is case-sensitive, null is not the same as Null, NULL, or any other variant.</li>
<li>undefined. A top-level property whose value is not defined.</li>
<li>Number. An integer or floating point number. For example: 42 or 3.14159.</li>
<li>String. A sequence of characters that represent a text value. For example:  &ldquo;Howdy&rdquo;</li>
<li>Symbol (new in ECMAScript 2015). A data type whose instances are unique and immutable.</li>
</ul>
</li>
<li>and Object</li>
</ul>


<h3>2.介绍js有哪些内置对象？</h3>

<h3>3.说几条写JavaScript的基本规范？</h3>

<p>A:</p>

<ul>
<li>总是使用var声明变量</li>
<li>行末别忘了分号</li>
<li>使用标准而不是不标准的功能</li>
<li>使用驼峰命名（如：camelCaseNames）以及大写的常量（如：UPPERCASE），避免使用const关键字，因为IE不支持</li>
<li>使用命名空间技术</li>
<li>避免eval()除非反序列化（奇怪的是JSON解析并未提及）</li>
<li>避免对象上使用with(), 数组使用for in</li>
<li>使用对象以及数组字面量而不是更冗长的声明</li>
<li>要知道truthy和falsy规则</li>
<li>JavaScript资源中不使用IE条件注释</li>
<li>不修改内置对象的原型——这会让人颜面扫地，因为这是让JavaScript更加强大的功能之一，但你知道这会导致问题</li>
<li>小心使用闭包以及不要循环引用</li>
<li>同样，小心使用”this”</li>
</ul>


<p>Reference:<a href="https://www.zhangxinxu.com/wordpress/2012/07/google-html-css-javascript-style-guides/">翻译：谷歌HTML、CSS和JavaScript风格规范</a></p>

<h3>4.JavaScript原型，原型链 ? 有什么特点？</h3>

<p>A:</p>

<ul>
<li>原型：每个对象都有一个原型对象，它充当继承方法和属性来源的模板对象。</li>
<li>原型链：对象的原型对象也可能有原型，依此类推，便形成原型链。</li>
<li>特点：非常强大；非常灵活；</li>
</ul>


<!--more-->


<h3>5.JavaScript有几种类型的值？，你能画一下他们的内存图吗？</h3>

<p>A:</p>

<ul>
<li>栈类型：Undefined，Null，Boolean，Number、String</li>
<li>堆类型：对象、数组和函数</li>
</ul>


<h3>6.如何将字符串转化为数字，例如'12.3b'?</h3>

<h3>7.如何将浮点数点左边的数每三位添加一个逗号，如12000000.11转化为12,000,000.11?</h3>

<h3>8.如何实现数组的随机排序？</h3>

<h3>9.Javascript如何实现继承？</h3>

<h3>10.JavaScript继承的几种实现方式？</h3>

<h3>11.javascript创建对象的几种方式？</h3>

<h3>12.Javascript作用链域?</h3>

<h3>13.谈谈This对象的理解。</h3>

<h3>14.eval是做什么的？</h3>

<h3>15.什么是window对象? 什么是document对象?</h3>

<h3>16.null，undefined 的区别？</h3>

<h3>17.写一个通用的事件侦听器函数。</h3>

<h3>18.[&ldquo;1&rdquo;, &ldquo;2&rdquo;, &ldquo;3&rdquo;].map(parseInt) 答案是多少？</h3>

<h3>19.事件是？IE与火狐的事件机制有什么区别？ 如何阻止冒泡？</h3>

<h3>20.什么是闭包（closure），为什么要用它？</h3>

<h3>21.javascript 代码中的"use strict";是什么意思 ? 使用它区别是什么？</h3>

<h3>22.如何判断一个对象是否属于某个类？</h3>

<h3>23.new操作符具体干了什么呢?</h3>

<h3>24.用原生JavaScript的实现过什么功能吗？</h3>

<h3>25.Javascript中，有一个函数，执行时对象查找时，永远不会去查找原型，这个函数是？</h3>

<h3>26.JSON 的了解？</h3>

<h3>27.<code>[].forEach.call($$("*"),function(a){a.style.outline="1px solid #"+(~~(Math.random()*(1&lt;&lt;24))).toString(16)})</code> 能解释一下这段代码的意思吗？</h3>

<h3>28.js延迟加载的方式有哪些？</h3>

<h3>29.Ajax 是什么? 如何创建一个Ajax？</h3>

<h3>30.Ajax 解决浏览器缓存问题？</h3>

<h3>31.同步和异步的区别?</h3>

<h3>32.如何解决跨域问题?</h3>

<h3>33.页面编码和被请求的资源编码如果不一致如何处理？</h3>

<h3>34.服务器代理转发时，该如何处理cookie？</h3>

<h3>35.模块化开发怎么做?</h3>

<h3>36.AMD（Modules/Asynchronous-Definition）、CMD（Common Module Definition）规范区别？</h3>

<h3>37.requireJS的核心原理是什么？（如何动态加载的？如何避免多次加载的？如何 缓存的？）</h3>

<h3>38.JS模块加载器的轮子怎么造，也就是如何实现一个模块加载器？</h3>

<h3>39.谈一谈你对ECMAScript6的了解？</h3>

<h3>40.ECMAScript6 怎么写class么，为什么会出现class这种东西?</h3>

<h3>41.异步加载JS的方式有哪些？</h3>

<h3>42.documen.write和 innerHTML的区别?</h3>

<h3>43.DOM操作——怎样添加、移除、移动、复制、创建和查找节点?</h3>

<h3>44.<code>.call()</code> 和 <code>.apply()</code> 的区别？</h3>

<h3>45.数组和对象有哪些原生方法，列举一下？</h3>

<h3>46.JS 怎么实现一个类?怎么实例化这个类?</h3>

<h3>47.JavaScript中的作用域与变量声明提升？</h3>

<h3>48.如何编写高性能的Javascript？</h3>

<h3>49.那些操作会造成内存泄漏？</h3>

<h3>50.JQuery的源码看过吗？能不能简单概况一下它的实现原理？</h3>

<h3>51.jQuery.fn的init方法返回的this指的是什么对象？为什么要返回this？</h3>

<h3>52.jquery中如何将数组转化为json字符串，然后再转化回来？</h3>

<h3>53.jQuery 的属性拷贝(extend)的实现原理是什么，如何实现深拷贝？</h3>

<h3>54.jquery.extend 与 jquery.fn.extend的区别？</h3>

<h3>55.jQuery 的队列是如何实现的？队列可以用在哪些地方？</h3>

<h3>56.谈一下Jquery中的bind(),live(),delegate(),on()的区别？</h3>

<h3>57.JQuery一个对象可以同时绑定多个事件，这是如何实现的？</h3>

<h3>58.是否知道自定义事件。jQuery里的fire函数是什么意思，什么时候用？</h3>

<h3>59.jQuery 是通过哪个方法和 Sizzle 选择器结合的？（jQuery.fn.find()进入Sizzle）</h3>

<h3>60.针对 jQuery性能的优化方法？</h3>

<h3>61.Jquery与jQuery UI 有啥区别？</h3>

<h3>62.JQuery的源码看过吗？能不能简单说一下它的实现原理？</h3>

<h3>63.jquery 中如何将数组转化为json字符串，然后再转化回来？</h3>

<h3>64.jQuery和Zepto的区别？各自的使用场景？</h3>

<h3>65.针对 jQuery 的优化方法？</h3>

<h3>66.Zepto的点透问题如何解决？</h3>

<h3>67.需求：实现一个页面操作不会整页刷新的网站，并且能在浏览器前进、后退时正确响应。给出你的技术实现方案？</h3>

<h3>68.如何判断当前脚本运行在浏览器还是node环境中？</h3>

<h3>69.移动端最小触控区域是多大？</h3>

<h3>70.jQuery 的 slideUp动画 ，如果目标元素是被外部事件驱动, 当鼠标快速地连续触发外部元素事件, 动画会滞后的反复执行，该如何处理呢?</h3>

<h3>71.把 Script 标签 放在页面的最底部的body封闭之前 和封闭之后有什么区别？浏览器会如何解析它们？</h3>

<h3>72.移动端的点击事件的有延迟，时间是多久，为什么会有？ 怎么解决这个延时？（click 有 300ms 延迟,为了实现safari的双击事件的设计，浏览器要知道你是不是要双击操作。）</h3>

<h3>73.解释JavaScript中的作用域与变量声明提升？</h3>

<h3>74.Node.js的适用场景？</h3>

<h3>75.什么是“前端路由”?什么时候适合使用“前端路由”? “前端路由”有哪些优点和缺点?</h3>

<h3>76.检测浏览器版本版本有哪些方式？</h3>

<h3>77.What is a Polyfill?</h3>

<h3>78.做的项目中，有没有用过或自己实现一些 polyfill 方案（兼容性处理方案）？</h3>

<h3>79.我们给一个dom同时绑定两个点击事件，一个用捕获，一个用冒泡。会执行几次事件，会先执行冒泡还是捕获？</h3>

<h3>80.使用JS实现获取文件扩展名？</h3>

<h3>81.Webpack热更新实现原理?</h3>

<h3>82.请介绍一下JS之事件节流？</h3>

<h3>83.什么是JS的函数防抖？</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web 面试题汇总(二)]]></title>
    <link href="http://DamianSheldon.github.io/blog/web-technical-interview-part-2.html"/>
    <updated>2018-09-05T15:52:44+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/web-technical-interview-part-2</id>
    <content type="html"><![CDATA[<h3>1.介绍一下标准的CSS的盒子模型？低版本IE的盒子模型有什么不同的？</h3>

<p>A:每个元素被表示为一个矩形的方框，框的内容、内边距、边界和外边距像洋葱的膜那样，一层包着一层构建起来。</p>

<p>低版本IE的盒子模型的宽度包括框的内容、内边距和边界。</p>

<h3>2.CSS选择符有哪些？哪些属性可以继承？</h3>

<p>A:</p>

<ul>
<li><em>简单选择器</em>（Simple selectors）：通过元素类型、class 或 id 匹配一个或多个元素。</li>
<li><em>属性选择器</em>（Attribute selectors）：通过 属性 / 属性值 匹配一个或多个元素。</li>
<li><em>伪类</em>（Pseudo-classes）：匹配处于确定状态的一个或多个元素，比如被鼠标指针悬停的元素，或当前被选中或未选中的复选框，或元素是DOM树中一父节点的第一个子节点。</li>
<li><em>伪元素</em>（Pseudo-elements）:匹配处于相关的确定位置的一个或多个元素，例如每个段落的第一个字，或者某个元素之前生成的内容。 </li>
<li><em>组合器</em>（Combinators）：这里不仅仅是选择器本身，还有以有效的方式组合两个或更多的选择器用于非常特定的选择的方法。例如，你可以只选择divs的直系子节点的段落，或者直接跟在headings后面的段落。</li>
<li><em>多重选择器</em>（Multiple selectors）：这些也不是单独的选择器；这个思路是将以逗号分隔开的多个选择器放在一个CSS规则下面， 以将一组声明应用于由这些选择器选择的所有元素。</li>
</ul>


<p>哪些属性可以继承？</p>

<ul>
<li>所有元素可继承：visibility和cursor。</li>
<li>内联元素可继承：letter-spacing、word-spacing、white-space、line-height、color、font、font-family、font-size、font-style、font-variant、font-weight、text-decoration、text-transform、direction。</li>
<li>终端块状元素可继承：text-indent和text-align。</li>
<li>列表元素可继承：list-style、list-style-type、list-style-position、list-style-image。</li>
<li>表格元素可继承：border-collapse。</li>
</ul>


<h3>3.CSS优先级算法如何计算？</h3>

<p>A:CSS根据规则的重要性、专用性和源代码次序来计算优先级。</p>

<p>重要性和源代码次序相对简单，专用性是用四种不同的值（或组件）来衡量的，它们可以被认为是千位，百位，十位和个位:</p>

<ol>
<li>千位：如果声明是在style 属性中该列加1分（这样的声明没有选择器，所以它们的专用性总是1000。）否则为0。</li>
<li>百位：在整个选择器中每包含一个ID选择器就在该列中加1分。</li>
<li>十位：在整个选择器中每包含一个类选择器、属性选择器、或者伪类就在该列中加1分。</li>
<li>个位：在整个选择器中每包含一个元素选择器或伪元素就在该列中加1分。</li>
</ol>


<!--more-->


<h3>4.如何居中div？</h3>

<p>A:</p>

<ul>
<li>水平居中</li>
<li>水平垂直居中</li>
</ul>


<h4>水平居中</h4>

<p>给div设置一个宽度，然后添加margin:0 auto属性。</p>

<p><figure class='code'><figcaption><span>html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>div{
</span><span class='line'>    width:200px;
</span><span class='line'>    margin:0 auto;
</span><span class='line'>}
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>

<h4>水平垂直居中</h4>

<ul>
<li>容器的宽高确定</li>
</ul>


<p><figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>// 确定容器的宽高 宽500 高 300 的层
</span><span class='line'>// 设置层的外边距
</span><span class='line'>
</span><span class='line'>div {
</span><span class='line'>    position: relative;     /* 相对定位或绝对定位均可 */
</span><span class='line'>    width:500px;
</span><span class='line'>    height:300px;
</span><span class='line'>    top: 50%;
</span><span class='line'>    left: 50%;
</span><span class='line'>    margin: -150px 0 0 -250px;          /* 外边距为自身宽高的一半 */
</span><span class='line'>    background-color: pink;         /* 方便看效果 */
</span><span class='line'> }
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>

<ul>
<li>容器的宽高未知</li>
</ul>


<p><figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code> // 未知容器的宽高，利用 `transform` 属性
</span><span class='line'>
</span><span class='line'>div {
</span><span class='line'>    position: absolute;     /* 相对定位或绝对定位均可 */
</span><span class='line'>    width:500px;
</span><span class='line'>    height:300px;
</span><span class='line'>    top: 50%;
</span><span class='line'>    left: 50%;
</span><span class='line'>    transform: translate(-50%, -50%);
</span><span class='line'>    background-color: pink;         /* 方便看效果 */
</span><span class='line'>}
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>

<ul>
<li>利用 flex 布局</li>
</ul>


<p><figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code> // 利用 flex 布局
</span><span class='line'> // 实际使用时应考虑兼容性
</span><span class='line'>
</span><span class='line'>.container {
</span><span class='line'>    display: flex;
</span><span class='line'>    align-items: center;            /* 垂直居中 */
</span><span class='line'>    justify-content: center;        /* 水平居中 */
</span><span class='line'>
</span><span class='line'> }
</span><span class='line'>.container div {
</span><span class='line'>    width: 100px;
</span><span class='line'>    height: 100px;
</span><span class='line'>    background-color: pink;         /* 方便看效果 */
</span><span class='line'> }  
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>

<h3>5.display有哪些值？说明他们的作用。</h3>

<p>A:display 所有可能的值太多了，这里说下常见的:</p>

<table>
<thead>
<tr>
<th style="text-align:left;"> display </th>
<th style="text-align:left;"> 作用 </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> none </td>
<td style="text-align:left;"> 元素不显示，并从文档流中移除。 </td>
</tr>
<tr>
<td style="text-align:left;"> inline </td>
<td style="text-align:left;"> 行内元素类型。默认宽度为内容宽度，不可设置宽高，同行显示。 </td>
</tr>
<tr>
<td style="text-align:left;"> inline-block </td>
<td style="text-align:left;"> 默认宽度为内容宽度，可以设置宽高，同行显示。 </td>
</tr>
<tr>
<td style="text-align:left;"> block </td>
<td style="text-align:left;"> 块类型。默认宽度为父元素宽度，可设置宽高，换行显示。 </td>
</tr>
<tr>
<td style="text-align:left;"> list-item </td>
<td style="text-align:left;"> 象块类型元素一样显示，并添加样式列表标记。 </td>
</tr>
<tr>
<td style="text-align:left;"> table </td>
<td style="text-align:left;"> 元素会作为块级表格来显示。 </td>
</tr>
</tbody>
</table>


<h3>6.position的值? relative和absolute定位原点是？</h3>

<p>A: position  = static | relative | absolute | sticky | fixed</p>

<p>relative: The element is positioned according to the normal flow of the document, and then offset relative to itself based on the values of top, right, bottom, and left.</p>

<p>absolute: The element is removed from the normal document flow, and no space is created for the element in the page layout. It is positioned relative to its closest positioned ancestor, if any; otherwise, it is placed relative to the initial containing block. Its final position is determined by the values of top, right, bottom, and left.</p>

<h3>7.请解释一下CSS3的Flexbox（弹性盒布局模型），以及适用场景？</h3>

<p>A:Flexbox is a one-dimensional layout method for laying out items in rows or columns. Items flex to fill additional space and shrink to fit into smaller spaces. </p>

<p>适用场景:</p>

<ul>
<li>Vertically centering a block of content inside its parent.</li>
<li>Making all the children of a container take up an equal amount of the available width/height, regardless of how much width/height is available.</li>
<li>Making all columns in a multiple column layout adopt the same height even if they contain a different amount of content.</li>
</ul>


<h3>8.用纯CSS创建一个三角形的原理是什么？</h3>

<p>A:采用的是均分原理。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>.triangle{  
</span><span class='line'>     width:0;  
</span><span class='line'>     height:0;  
</span><span class='line'>     margin:0 auto;  
</span><span class='line'>     border:6px solid transparent;  
</span><span class='line'>     border-top: 6px solid red;  
</span><span class='line'> }
</span><span class='line'>
</span><span class='line'>// 第二种写法：
</span><span class='line'>
</span><span class='line'>.triangle{  
</span><span class='line'>     width:0;  
</span><span class='line'>     height:0;  
</span><span class='line'>     margin:0 auto;  
</span><span class='line'>     border-width:6px;
</span><span class='line'>     border-color:red transparent transparent transparent;
</span><span class='line'>     border-style:solid dashed dashed dashed;//为了兼容IE6，把没有的边框都设置为虚线
</span><span class='line'> }
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>

<h3>9.一个满屏 品 字布局 如何设计?</h3>

<p>A:方式一：上面的 div 宽100%，下面的两个 div 分别宽50%，然后用 float 或者 inline 使其不换行即可；方式二：上面的 div 宽100%，内含一个 div 水平居中，下面的div，内含两个 div,使用 absolute 定位。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>// 方式一
</span><span class='line'>&lt;!DOCTYPE html&gt;
</span><span class='line'>&lt;html&gt;
</span><span class='line'>&lt;head&gt;
</span><span class='line'>    &lt;meta charset="utf-8"&gt;
</span><span class='line'>    &lt;title&gt;满屏品字布局&lt;/title&gt;
</span><span class='line'>    &lt;style type="text/css"&gt;
</span><span class='line'>        *{
</span><span class='line'>            margin: 0;
</span><span class='line'>            padding: 0;
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>        html,body{
</span><span class='line'>            height: 100%;/*此设置非常关键，因为默认的body，HTML高度为0，所以后面设置的div的高度无法用百分比显示*/
</span><span class='line'>        }       
</span><span class='line'>
</span><span class='line'>        .header{
</span><span class='line'>            height:50%; /*此步结合html,body高度为100%，解决元素相对窗口的定位问题*/
</span><span class='line'>            width: 50%;     
</span><span class='line'>            background: #ccc;           
</span><span class='line'>            margin:0 auto;
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>        .main{
</span><span class='line'>            width: 100%;
</span><span class='line'>            height: 50%;
</span><span class='line'>            background: #ddd;
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>        .main .left,.main .right{
</span><span class='line'>            float: left;/*采用float方式，对元素进行左右定位*/
</span><span class='line'>            width:50%;/*此步解决元素相对窗口的定位问题*/
</span><span class='line'>            height:100%;/*此步解决元素相对窗口的定位问题*/
</span><span class='line'>            background: yellow;
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>        .main .right{
</span><span class='line'>            background: green;
</span><span class='line'>        }
</span><span class='line'>    &lt;/style&gt;
</span><span class='line'>&lt;/head&gt;
</span><span class='line'>&lt;body&gt;
</span><span class='line'>&lt;div class="header"&gt;&lt;/div&gt;
</span><span class='line'>&lt;div class="main"&gt;
</span><span class='line'>    &lt;div class="left"&gt;&lt;/div&gt;
</span><span class='line'>    &lt;div class="right"&gt;&lt;/div&gt;
</span><span class='line'>&lt;/div&gt;
</span><span class='line'>&lt;/body&gt;
</span><span class='line'>&lt;/html&gt;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>&lt;!DOCTYPE html&gt;
</span><span class='line'>&lt;html&gt;
</span><span class='line'>&lt;head&gt;
</span><span class='line'>&lt;meta charset="utf-8"&gt;
</span><span class='line'>    &lt;title&gt;满屏品字布局&lt;/title&gt;
</span><span class='line'>    &lt;style type="text/css"&gt;
</span><span class='line'>        body{  
</span><span class='line'>          height: 1200px;  
</span><span class='line'>      }  
</span><span class='line'>      .main {  
</span><span class='line'>          position: fixed;  /*此步解决元素相对窗口的定位问题*/
</span><span class='line'>          left: 0;  
</span><span class='line'>          top: 0;  
</span><span class='line'>          height: 100%;  
</span><span class='line'>          width: 100%;  
</span><span class='line'>      }  
</span><span class='line'>      .wrapper-up {  
</span><span class='line'>          height: 50%;  
</span><span class='line'>      }  
</span><span class='line'>
</span><span class='line'>      .wrapper-down {  
</span><span class='line'>          height: 50%;  
</span><span class='line'>          position: relative;  
</span><span class='line'>      }  
</span><span class='line'>      .div-square-up {  
</span><span class='line'>          width: 50%;  
</span><span class='line'>          margin: 0 auto;  
</span><span class='line'>          border: 2px solid red;  
</span><span class='line'>          height: 96%;  
</span><span class='line'>          box-sizing: border-box;  
</span><span class='line'>      }  
</span><span class='line'>
</span><span class='line'>      .div-square-left {  
</span><span class='line'>          position: absolute;  /*此步解决元素左右定位问题*/
</span><span class='line'>          left: 0;  
</span><span class='line'>          width: 48%;  
</span><span class='line'>          height: 100%;  
</span><span class='line'>          box-sizing: border-box;  
</span><span class='line'>          border: 2px solid red;  
</span><span class='line'>      }  
</span><span class='line'>
</span><span class='line'>      .div-square-right {  
</span><span class='line'>          position: absolute;   /*此步解决元素左右定位问题*/
</span><span class='line'>          right: 0;  
</span><span class='line'>          width: 48%;  
</span><span class='line'>          height: 100%;  
</span><span class='line'>          border: 2px solid red;  
</span><span class='line'>          box-sizing: border-box;  
</span><span class='line'>      }  
</span><span class='line'>    &lt;/style&gt;
</span><span class='line'>&lt;/head&gt;
</span><span class='line'>&lt;body&gt;
</span><span class='line'>    &lt;div class="main"&gt;  
</span><span class='line'>         &lt;div class="wrapper-up"&gt;  
</span><span class='line'>           &lt;div class="div-square-up"&gt;&lt;/div&gt;  
</span><span class='line'>         &lt;/div&gt;  
</span><span class='line'>         &lt;div class="wrapper-down"&gt;  
</span><span class='line'>           &lt;div class="div-square-left"&gt;&lt;/div&gt;  
</span><span class='line'>           &lt;div class="div-square-right"&gt;&lt;/div&gt;  
</span><span class='line'>         &lt;/div&gt;  
</span><span class='line'>    &lt;/div&gt; 
</span><span class='line'>&lt;/body&gt;
</span><span class='line'>&lt;/html&gt;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>

<h3>10.css多列等高如何实现？</h3>

<p>A:利用padding-bottom|margin-bottom正负值相抵；
设置父容器设置超出隐藏（overflow:hidden），这样子父容器的高度就还是它里面的列没有设定padding-bottom时的高度，当它里面的任 一列高度增加了，则父容器的高度被撑到里面最高那列的高度，其他比这列矮的列会用它们的padding-bottom补偿这部分高度差。</p>

<h3>11.经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么，常用hack的技巧？</h3>

<p>A:
经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么?</p>

<ul>
<li>png24位的图片在iE6浏览器上出现背景，解决方案是做成PNG8.</li>
<li>浏览器默认的margin和padding不同。解决方案是加一个全局的<code>*{margin:0;padding:0;}</code>来统一。</li>
<li>IE6双边距bug:块属性标签float后，又有横行的margin情况下，在ie6显示margin比设置的大。浮动ie产生的双倍距离 <code>#box{ float:left; width:10px; margin:0 0 0 100px;}</code>，这种情况之下IE会产生20px的距离，解决方案是在float的标签样式控制中加入 ——<code>_display:inline;</code>将其转化为行内属性。利用 <code>_</code> 这个符号只有ie6会识别的渐进识别的方式，从总体中逐渐排除局部。</li>
<li>IE下,可以使用获取常规属性的方法来获取自定义属性,也可以使用getAttribute()获取自定义属性;Firefox下,只能使用getAttribute()获取自定义属性。解决方法:统一通过getAttribute()获取自定义属性。</li>
<li>IE下,even对象有x,y属性,但是没有pageX,pageY属性;Firefox下,event对象有pageX,pageY属性,但是没有x,y属性。解决方法：（条件注释）缺点是在IE浏览器下可能会增加额外的HTTP请求数。</li>
<li>超链接访问过后hover样式就不出现了 被点击访问过的超链接样式不在具有hover和active了解决方法是改变CSS属性的排列顺序:L-V-H-A :  <code>a:link {} a:visited {} a:hover {} a:active {}</code></li>
</ul>


<p>常用hack的技巧？</p>

<p>由于不同厂商的流览器或某浏览器的不同版本（如IE6-IE11,Firefox/Safari/Opera/Chrome等），对CSS的支持、解析不一样，导致在不同浏览器的环境中呈现出不一致的页面展现效果。这时，我们为了获得统一的页面效果，就需要针对不同的浏览器或不同版本写特定的CSS样式，我们把这个针对不同的浏览器/不同版本写相应的CSS code的过程，叫做CSS hack!</p>

<p>CSS Hack大致有3种表现形式：CSS属性前缀法、选择器前缀法以及IE条件注释法（即HTML头部引用if IE）。</p>

<ul>
<li>属性前缀法(即类内部Hack)：例如 IE6能识别下划线和星号，IE7能识别星号，但不能识别下划线，IE6~IE10都认识"\9"，但firefox前述三个都不能认识。</li>
<li>选择器前缀法(即选择器Hack)：例如 IE6能识别<code>*html .class{}</code>，IE7能识别<code>*+html .class{}</code>或者<code>*:first-child+html .class{}</code>。</li>
<li>IE条件注释法(即HTML条件注释Hack)(注：IE10+已经不再支持条件注释)： 这类Hack不仅对CSS生效，对写在判断语句里面的所有代码都会生效。</li>
</ul>


<p><figure class='code'><figcaption><span>css</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>.bb{
</span><span class='line'>    background-color:red;/*所有识别*/
</span><span class='line'>    background-color:#00deff\9; /*IE6、7、8识别*/
</span><span class='line'>    +background-color:#a200ff;/*IE6、7识别*/
</span><span class='line'>    _background-color:#1e0bd1;/*IE6识别*/
</span><span class='line'>}
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>

<h3>12.li与li之间有看不见的空白间隔是什么原因引起的？有什么解决办法？</h3>

<p>A:浏览器的默认行为是把inline元素间的空白字符（空格换行tab）渲染成一个空格，也就是我们上面的代码<code>&lt;li&gt;</code>换行后会产生换行字符，而它会变成一个空格，当然空格就占用一个字符的宽度。</p>

<p>解决办法:可以将 ul 的字符间隔消除，将 li 内的字符间隔设为默认。</p>

<p><figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>.wrap ul{letter-spacing: -5px;}
</span><span class='line'>.wrap ul li{letter-spacing: normal;}
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>

<h3>13.为什么要初始化CSS样式。</h3>

<p>A:因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面显示差异。</p>

<h3>14.absolute的containing block(容器块)计算方式跟正常流有什么不同？</h3>

<p>A:</p>

<p>The process for identifying the containing block depends entirely on the value of the element's position property:</p>

<ol>
<li>If the position property is static or relative, the containing block is formed by the edge of the content box of the nearest ancestor element that is a block container(such as an inline-block, block, or list-item element) or which establishes a formatting context (such as a table container, flex container, grid container, or the block container itself).</li>
<li>If the position property is absolute, the containing block is formed by the edge of the padding box of the nearest ancestor element that has a position value other than static (fixed, absolute, relative, or sticky).</li>
<li>If the position property is fixed, the containing block is established by the viewport (in the case of continuous media) or the page area (in the case of paged media).</li>
<li><p>If the position property is absolute or fixed, the containing block may also be formed by the edge of the padding box of the nearest ancestor element that has the following:</p>

<ol>
<li>A transform or perspective value other than none</li>
<li>A will-change value of transform or perspective</li>
<li>A filter  value other than none or a will-change value of filter (only works on Firefox).</li>
</ol>
</li>
</ol>


<p>Reference:<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block">Layout and the containing block</a></p>

<h3>15.CSS里的visibility属性有个collapse属性值是干嘛用的？在不同浏览器下有什么区别？</h3>

<p>A: 对于普通元素 visibility:collapse; 会将元素完全隐藏，不占据页面布局空间，与display:none;表现相同。如果目标元素为table，visibility:collapse;将table隐藏，但是会占据页面布局空间。</p>

<p>仅在Firefox下起作用,IE会显示元素,Chrome会将元素隐藏,但是占据空间.</p>

<h3>16.position跟display、margin collapse、overflow、float这些特性相互叠加后会怎么样？</h3>

<p>A:</p>

<ul>
<li>如果元素的display为none，那么元素不被渲染，position，float不起作用；</li>
<li>如果元素拥有<code>position:absolute;</code>或者<code>position:fixed;</code>属性那么元素将为绝对定位，float不起作用；</li>
<li>如果元素float属性不是none，元素会脱离文档流，根据float属性值来显示，有浮动；</li>
<li>绝对定位、inline-block属性的元素，margin不会和垂直方向上的其他元素margin折叠；</li>
</ul>


<h3>17.对BFC规范(块级格式化上下文：block formatting context)的理解？</h3>

<p>A:块格式化上下文（Block Formatting Context，BFC） 是Web页面的可视化CSS渲染的一部分，是布局过程中生成块级盒子的区域，也是浮动元素与其他元素的交互限定区域。</p>

<p>块格式化上下文包含创建它的元素内部的所有内容。块格式化上下文对浮动定位与清除浮动都很重要。浮动定位和清除浮动时只会应用于同一个BFC内的元素。浮动不会影响其它BFC中元素的布局，而清除浮动只能清除同一BFC中在它前面的元素的浮动。外边距折叠（Margin collapsing）也只会发生在属于同一BFC的块级元素之间。</p>

<p>Reference:<a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context">块格式化上下文</a></p>

<h3>18.css定义的权重</h3>

<p>A:</p>

<ol>
<li>Thousands: Score one in this column if the declaration is inside a style attribute (such declarations don&rsquo;t have selectors, so their specificity is always simply 1000.) Otherwise 0.</li>
<li>Hundreds: Score one in this column for each ID selector contained inside the overall selector.</li>
<li>Tens: Score one in this column for each class selector, attribute selector, or pseudo-class contained inside the overall selector.</li>
<li>Ones: Score one in this column for each element selector or pseudo-element contained inside the overall selector.</li>
</ol>


<h3>19.请解释一下为什么需要清除浮动？清除浮动的方式?</h3>

<p>A:清除浮动是为了清除使用浮动元素产生的影响。浮动的元素，高度会塌陷，而高度的塌陷使我们页面后面的布局不能正常显示。</p>

<p>清除浮动的方式:</p>

<ul>
<li>The clearfix hack</li>
<li>Using overflow</li>
<li>display: flow-root</li>
</ul>


<p>Reference:<a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Floats">Floats</a></p>

<h3>20.什么是外边距合并？</h3>

<p>A:外边距合并指的是，当两个垂直外边距相遇时，它们将形成一个外边距。合并后的外边距的高度等于两个发生合并的外边距的高度中的较大者。</p>

<h3>21.zoom:1的清除浮动原理?</h3>

<p>A:当设置了zoom的值之后，所设置的元素就会就会扩大或者缩小，高度宽度就会重新计算了，这里一旦改变zoom值时其实也会发生重新渲染，运用这个原理，也就解决了ie下子元素浮动时候父元素不随着自动扩大的问题。</p>

<h3>22.移动端的布局用过媒体查询吗？</h3>

<h3>23.使用 CSS 预处理器吗？喜欢那个？</h3>

<h3>24.CSS优化、提高性能的方法有哪些？</h3>

<p>A:</p>

<p>作者：赵望野
链接：<a href="https://www.zhihu.com/question/19886806/answer/50285495">https://www.zhihu.com/question/19886806/answer/50285495</a>
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>

<ul>
<li><strong>加载性能</strong>: 这个方面相关的 best practice 太多了，网上随便找一找就是一堆资料，比如不要用 import 啊，压缩啊等等，主要是从减少文件体积、减少阻塞加载、提高并发方面入手的，任何 hint 都逃不出这几个大方向。</li>
<li><strong>选择器性能</strong>: 可以参考 GitHub 的这个分享 <a href="https://speakerdeck.com/jonrohan/githubs-css-performance%EF%BC%8C%E4%BD%86">https://speakerdeck.com/jonrohan/githubs-css-performance%EF%BC%8C%E4%BD%86</a> selector 的对整体性能的影响可以忽略不计了，selector 的考察更多是规范化和可维护性、健壮性方面，很少有人在实际工作当中会把选择器性能作为重点关注对象的，但也像 GitHub 这个分享里面说的一样——知道总比不知道好。</li>
<li><strong>渲染性能</strong>: 渲染性能是 CSS 优化最重要的关注对象。页面渲染 junky 过多？看看是不是大量使用了 text-shadow？是不是开了字体抗锯齿？CSS 动画怎么实现的？合理利用 GPU 加速了吗？什么你用了 Flexible Box Model？有没有测试换个 layout 策略对 render performance 的影响？这个方面搜索一下 CSS render performance 或者 CSS animation performance 也会有一堆一堆的资料可供参考。</li>
<li><strong>可维护性、健壮性</strong>: 命名合理吗？结构层次设计是否足够健壮？对样式进行抽象复用了吗？优雅的 CSS 不仅仅会影响后期的维护成本，也会对加载性能等方面产生影响。这方面可以多找一些 OOCSS（不是说就要用 OOCSS，而是说多了解一下）等等不同 CSS Strategy 的信息，取长补短。</li>
</ul>


<h3>25.浏览器是怎样解析CSS选择器的？</h3>

<p>A:按照从上到下，从右到左的顺序解析。</p>

<h3>26.在网页中的应该使用奇数还是偶数的字体？为什么呢？</h3>

<p>A:一般来说，由于各种终端设备的分辨率是偶数的，设计上普遍采用偶数像素体系，奇数像素体系受到排挤，主要的冲突表现在：奇数像素宽度的东西，无法在偶数像素元素内居中显示，总是要差一个像素。</p>

<h3>27.margin和padding分别适合什么场景使用？</h3>

<p>A:margin是用来隔开元素与元素的间距；padding是用来隔开元素与内容的间隔。</p>

<h3>28.抽离样式模块怎么写，说出思路，有无实践经验？</h3>

<h3>29.元素竖向的百分比设定是相对于容器的高度吗？</h3>

<p>A:如果是height的话，是相对于容器高度，如果是padding-height,margin-height则是相对于容器的宽度。</p>

<h3>30.全屏滚动的原理是什么？用到了CSS的那些属性？</h3>

<p>A:可以利用css3和div的绝对定位来实现。用到了 position, transform.</p>

<p>Reference:<a href="http://www.alloyteam.com/2015/04/quan-ping-gun-dong-xiao-guo-h5fullscreenpage-js/">全屏滚动效果</a></p>

<h3>31.什么是响应式设计？响应式设计的基本原理是什么？如何兼容低版本的IE？</h3>

<p>A:Responsive web design (RWD) is an approach to web design that makes web pages render well on a variety of devices and window or screen sizes.</p>

<h3>32.视差滚动效果，如何给每页做不同的动画？（回到顶部，向下滑动要再次出现，和只出现一次分别怎么做？）</h3>

<p>A:</p>

<ul>
<li>利用background-attachment属性实现。 background-attachment: fixed || scroll || local 默认情况下，此属性取值scroll，页面滚动时，内容和背景一起运动，如果取值fixed，背景相对浏览器固定。</li>
<li>通过js控制 在页面滚动过程中，我们获取页面的scrollTop的值，根据不同参数值去设置各自scene的top值，这样滚动页面的时候，不同的速度就出来了</li>
</ul>


<p>Reference:<a href="http://www.alloyteam.com/2014/01/parallax-scrolling-love-story/">视差滚动的爱情故事</a></p>

<h3>33.<code>::before</code> 和 <code>:after</code>中双冒号和单冒号 有什么区别？解释一下这2个伪元素的作用。</h3>

<p>A: 单冒号(:)用于CSS3伪类，双冒号(::)用于CSS3伪元素。（伪元素由双冒号和伪元素名称组成）双冒号是在当前规范中引入的，用于区分伪类和伪元素。不过浏览器需要同时支持旧的已经存在的伪元素写法，比如:first-line、:first-letter、:before、:after等，而新的在CSS3中引入的伪元素则不允许再支持旧的单冒号的写法。</p>

<p>想让插入的内容出现在其它内容前，使用::before，否者，使用::after；</p>

<h3>34.如何修改chrome记住密码后自动填充表单的黄色背景 ？</h3>

<p>A:</p>

<p><figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>input:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill {
</span><span class='line'>    background-color: rgb(250, 255, 189); /* #FAFFBD; */
</span><span class='line'>    background-image: none;
</span><span class='line'>    color: rgb(0, 0, 0);
</span><span class='line'>}
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>

<h3>35.你对line-height是如何理解的？</h3>

<p>A:“行高”顾名思意指一行文字的高度。具体来说是指两行文字间基线之间的距离。</p>

<p>Reference:<a href="https://www.zhangxinxu.com/wordpress/2009/11/css%E8%A1%8C%E9%AB%98line-height%E7%9A%84%E4%B8%80%E4%BA%9B%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8F%8A%E5%BA%94%E7%94%A8/">css行高line-height的一些深入理解及应用</a></p>

<h3>36.设置元素浮动后，该元素的display值是多少？</h3>

<p>A: 自动变成了 display:block.</p>

<h3>37.怎么让Chrome支持小于12px 的文字？</h3>

<p>A:目前Chrome浏览器已经取消了最小字体限制。</p>

<h3>38.让页面里的字体变清晰，变细用CSS怎么做？</h3>

<p>A: <code>-webkit-font-smoothing: antialiased;</code></p>

<h3>39.font-style属性可以让它赋值为“oblique” oblique是什么意思？</h3>

<p>A:倾斜的字体样式</p>

<h3>40.position:fixed;在android下无效怎么处理？</h3>

<h3>41.如果需要手动写动画，你认为最小时间间隔是多久，为什么？</h3>

<p>A:多数显示器默认频率是60Hz，即1秒刷新60次，所以理论上最小间隔为1/60＊1000ms ＝ 16.7ms</p>

<h3>42.display:inline-block 什么时候会显示间隙</h3>

<p>A:真正意义上的inline-block水平呈现的元素间，换行显示或空格分隔的情况下会有间距。</p>

<p>Reference:<a href="https://www.zhangxinxu.com/wordpress/2012/04/inline-block-space-remove-%E5%8E%BB%E9%99%A4%E9%97%B4%E8%B7%9D/">去除inline-block元素间间距的N种方法</a></p>

<h3>43.overflow: scroll时不能平滑滚动的问题怎么处理？</h3>

<p>A: <code>-webkit-overflow-scrolling: touch;</code> </p>

<h3>44.有一个高度自适应的div，里面有两个div，一个高度100px，希望另一个填满剩下的高度。</h3>

<p>A: <a href="https://www.whitebyte.info/programming/css/how-to-make-a-div-take-the-remaining-height">How to make a div take the remaining height</a></p>

<h3>45.png、jpg、gif 这些图片格式解释一下，分别什么时候用。有没有了解过webp？</h3>

<p>A:</p>

<p>png:
 优点:无损压缩，有透明选项，压缩效率高于bmp 缺点:一般体积比同尺寸的90%压缩率的jpg要大很多(通常是5倍以上),但人眼很难识别其中的区别 用途:最常见的无损压缩图片格式,如果是经常对某图片进行编辑保存,要求图片数据100%完整,或需要透明效果(给PS当素材或用作图标等)则推荐使用</p>

<p>jpg/jpeg:
 优点:体积比png小，打开速度比png快 缺点:属于有损压缩，每次保存都会产生数据损失(jpeg artifacts)，故不适合用于多次编辑保存。压缩率过高图像会失真 用途:网络上最最常见的格式，也是静态图片(不只是照片)就常用的保存格式，就算是同一小组开发的jp2(相当于jpg第2代)也无法取代它。一般如果肉眼无法识别与png的差别和没有特殊要求就用jpg。</p>

<p>gif:</p>

<p>优点:支持动画以及透明，文件小
缺点:色域不广，只有256色
用途:动态图</p>

<p>webp:WebP是谷歌开发的一种新图片格式，同时支持有损和无损压缩的、使用直接色的、点阵图。
从名字就可以看出来它是为Web而生的，什么叫为Web而生呢？就是说相同质量的图片，WebP具有更小的文件体积。现在网站上充满了大量的图片，如果能够降低每一个图片的文件大小，那么将大大减少浏览器和服务器之间的数据传输量，进而降低访问延迟，提升访问体验。</p>

<h3>46.什么是Cookie 隔离？（或者说：请求资源的时候不要让它带cookie怎么做）</h3>

<p>A:如果静态文件都放在主域名下，那静态文件请求的时候都带有的cookie的数据提交给server的，非常浪费流量，所以不如隔离开。</p>

<p>因为cookie有域的限制，因此不能跨域提交请求，利用这点，可以将静态文件放在非主要域名下，这样便隔开了。请求头中就不会带有cookie数据，这样可以降低请求头的大小，降低请求时间，从而达到降低整体请求延时的目的。</p>

<p>同时这种方式不会将cookie传入Web Server，也减少了Web Server对cookie的处理分析环节，提高了webserver的http请求的解析速度。</p>

<h3>47.style标签写在body后与body前有什么区别？</h3>

<p>A:从有html标准以来到目前为止（2017年5月），标准一直是规定style元素不应出现在body元素中。
不过网页浏览器一直有容错设计。如果style元素出现在body元素，最终效果和style元素出现在head里是一样的。但是可能引起界面闪烁、重绘或重新布局。</p>

<h3>48.什么是CSS 预处理器 / 后处理器？</h3>

<p>A:预处理器例如：LESS、Sass、Stylus，用来预编译Sass或less，增强css代码的复用性，提高工作效率。</p>

<p>后处理器例如：PostCSS，通常被视为在完成的样式表中根据CSS规范处理CSS，让其更有效；目前最常做的是给CSS属性添加浏览器私有前缀，实现跨浏览器兼容性的问题。</p>

<h3>49.rem布局的优缺点?</h3>

<p>A:</p>

<p>优点：大小不受层次元素字体影响<br/>
缺点：字体不会跟随缩放；需要使用像素值兼容部分浏览器，不便于维护。</p>

<h2>Reference:</h2>

<ul>
<li><a href="https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions/Questions-and-Answers">前端开发面试题</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web 面试题汇总(一)]]></title>
    <link href="http://DamianSheldon.github.io/blog/web-technical-interview-part-1.html"/>
    <updated>2018-09-03T17:26:10+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/web-technical-interview-part-1</id>
    <content type="html"><![CDATA[<h3>1.Doctype作用？标准模式与兼容模式各有什么区别?</h3>

<p>A: 告知浏览器的解析器用什么文档标准解析这个文档。DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。</p>

<h3>2.HTML5 为什么只需要写 &lt;!DOCTYPE HTML>？</h3>

<p>A: HTML5 不基于 SGML，因此不需要对DTD进行引用，但是需要doctype来规范浏览器的行为（让浏览器按照它们应该的方式来运行；而HTML4.01基于SGML,所以需要对DTD进行引用，才能告知浏览器文档所使用的文档类型。</p>

<h3>3.行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？</h3>

<p>A:</p>

<ul>
<li>行内元素有：a b span img input select strong（强调的语气）</li>
<li>块级元素有：div ul ol li dl dt dd h1 h2 h3 h4…p</li>
<li>常见的空元素：br hr img input link meta</li>
<li>鲜为人知的空元素：area base col command embed keygen param source track wbr</li>
</ul>


<h3>4.页面导入样式时，使用link和@import有什么区别？</h3>

<p>A:</p>

<ul>
<li>link属于XHTML标签，除了加载CSS外，还能用于定义RSS, 定义rel连接属性等作用；而@import是CSS提供的，只能用于加载CSS;</li>
<li>页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载;</li>
<li>import是CSS2.1 提出的，只在IE5以上才能被识别，而link是XHTML标签，无兼容问题;</li>
<li>link支持使用js控制DOM去改变样式，而@import不支持;</li>
</ul>


<h3>5.介绍一下你对浏览器内核的理解？</h3>

<h3>6.简述一下你对HTML语义化的理解？</h3>

<p>A:用正确的标签做正确的事情。</p>

<ul>
<li>html语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;</li>
<li>即使在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的;搜索引擎的爬虫也依赖于HTML标记</li>
<li>确定上下文和各个关键字的权重，利于SEO;</li>
<li>使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。</li>
</ul>


<h3>7.HTML5的离线储存怎么使用，工作原理能不能解释一下？</h3>

<h3>8.浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？</h3>

<!--more-->


<h3>9.请描述一下 cookies，sessionStorage 和 localStorage 的区别？</h3>

<h3>10.iframe有那些缺点？</h3>

<p>A:</p>

<ul>
<li>iframe会阻塞主页面的Onload事件；</li>
<li>搜索引擎的检索程序无法解读这种页面，不利于SEO；</li>
<li>iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。</li>
</ul>


<p>使用iframe之前需要考虑这两个缺点。如果需要使用iframe，最好是通过javascript 动态给iframe添加src属性值，这样可以绕开以上两个问题。</p>

<h3>11.HTML5的form如何关闭自动完成功能？</h3>

<p>A: 给不想要提示的 form 或某个 input 设置为 autocomplete=off。</p>

<h3>12.如何实现浏览器内多个标签页之间的通信?</h3>

<h3>13.webSocket如何兼容低浏览器？</h3>

<h3>14.页面可见性（Page Visibility API） 可以有哪些用途？</h3>

<p>A: 通过 visibilityState 的值检测页面当前是否可见，以及打开网页的时间等;在页面被切换到其他后台进程的时候，自动暂停音乐或视频的播放；</p>

<h3>15.如何在页面上实现一个圆形的可点击区域？</h3>

<p>A:</p>

<ol>
<li>map+area或者svg</li>
<li>border-radius</li>
<li>纯js实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等</li>
</ol>


<h3>16.实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果。</h3>

<p>A:</p>

<p><figure class='code'><figcaption><span>html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>&lt;div style="height:1px;overflow:hidden;background:red"&gt;&lt;/div&gt;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>

<h3>17.网页验证码是干嘛的，是为了解决什么安全问题?</h3>

<p>A:区分用户是计算机还是人。</p>

<p>可以防止恶意破解密码、刷票、论坛灌水；有效防止黑客对某一个特定注册用户用暴力破解方式进行不断的登陆尝试。</p>

<h3>18.title与h1的区别、b与strong的区别、i与em的区别？</h3>

<p>A:</p>

<ul>
<li>title属性没有明确意义只表示是个标题，h1则表示层次明确的标题，对页面信息的抓取也有很大的影响。</li>
<li>b 元素用来吸引读者的注意力到文本，却不表示该文本更重要；strong 元素表示内容更重要。</li>
<li>i 内容展示为斜体，em表示强调的文本。</li>
</ul>


<h3>19.Label的作用是什么？是怎么用的？</h3>

<p>A:label标签来定义表单控制间的关系,当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。</p>

<p><figure class='code'><figcaption><span>html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>&lt;label for="Name"&gt;Number:&lt;/label&gt;
</span><span class='line'>&lt;input type="text" name="Name" id="Name"/&gt;
</span><span class='line'>
</span><span class='line'>&lt;label&gt;Date:&lt;input type="text" name="B"/&gt;&lt;/label&gt;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>

<h2>Reference:</h2>

<ul>
<li><a href="https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions/Questions-and-Answers">前端开发面试题</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web 开发问题汇总(三)]]></title>
    <link href="http://DamianSheldon.github.io/blog/web-development-notes-part-three.html"/>
    <updated>2018-04-13T11:07:25+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/web-development-notes-part-three</id>
    <content type="html"><![CDATA[<h3>1.How to send email in java?</h3>

<p>A:</p>

<pre><code class="java">import java.util.*;
import javax.mail.*;
import javax.mail.internet.*;
import javax.activation.*;

public class SendEmail {

   public static void main(String [] args) {    
      // Recipient's email ID needs to be mentioned.
      String to = "abcd@gmail.com";

      // Sender's email ID needs to be mentioned
      String from = "web@gmail.com";

      // Assuming you are sending email from localhost
      String host = "localhost";

      // Get system properties
      Properties properties = System.getProperties();

      // Setup mail server
      properties.setProperty("mail.smtp.host", host);

      // Get the default Session object.
      Session session = Session.getDefaultInstance(properties);

      try {
         // Create a default MimeMessage object.
         MimeMessage message = new MimeMessage(session);

         // Set From: header field of the header.
         message.setFrom(new InternetAddress(from));

         // Set To: header field of the header.
         message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));

         // Set Subject: header field
         message.setSubject("This is the Subject Line!");

         // Now set the actual message
         message.setText("This is actual message");

         // Send message
         Transport.send(message);
         System.out.println("Sent message successfully....");
      } catch (MessagingException mex) {
         mex.printStackTrace();
      }
   }
}
</code></pre>

<p>Reference:<a href="http://www.tutorialspoint.com/java/java_sending_email.htm">Java - Sending Email</a><br/>
<a href="https://stackoverflow.com/questions/3649014/send-email-using-java">Send email using java</a></p>

<!--more-->


<h3>2.Eclipse error: &lsquo;Failed to create the Java Virtual Machine&rsquo;</h3>

<p>A:安装了 Eclipse 提示的升级后再重新打开时，出现上面的报错。Google 一圈后显示可能是 eclipse.ini 的锅，正好我安装了 cpp, java 和 jee 三个版本，尝试打开 java 版本的，正常打开，于是对比它们的 eclipse.ini 文件:</p>

<pre><code>$ cp ~/eclipse/jee-oxygen/Eclipse.app/Contents/Eclipse/eclipse.ini  ~/eclipse-workspace/jee-eclipse.ini
cp ~/eclipse/java-oxygen/Eclipse.app/Contents/Eclipse/eclipse.ini ~/eclipse-workspace/java-eclipse.ini

$ diff eclipse-workspace/jee-eclipse.ini eclipse-workspace/java-eclipse.ini
3,4d2
&lt; --launcher.library
&lt; /Users/dongmeiliang/.p2/pool/plugins/org.eclipse.equinox.launcher.cocoa.macosx.x86_64_1.1.551.v20171108-1834
6a5,6
&gt; --launcher.library
&gt; /Users/dongmeiliang/.p2/pool/plugins/org.eclipse.equinox.launcher.cocoa.macosx.x86_64_1.1.551.v20171108-1834
8c8
&lt; org.eclipse.epp.package.jee.product
---
&gt; org.eclipse.epp.package.java.product
18,23d17
&lt; -javaagent:/Users/dongmeiliang/.p2/pool/plugins/com.zeroturnaround.eclipse.optimizer.plugin_1.0.11/agent/eclipse-optimizer-agent.jar
&lt; -server
&lt; -XX:PermSize=256m
&lt; -XX:MaxPermSize=256m
&lt; -XX:+UseParallelGC
&lt; -Xverify:none
32c26
&lt; -Xms512m
---
&gt; -Xms256m
</code></pre>

<p>总共有五处不同，细看之后发现只有两处可能会产生影响，先尝试将 <code>-Xms512m</code> 改成 <code>-Xms256m</code>，问题仍然存在，将文件恢复原样，再尝试将</p>

<pre><code>&lt; -javaagent:/Users/dongmeiliang/.p2/pool/plugins/com.zeroturnaround.eclipse.optimizer.plugin_1.0.11/agent/eclipse-optimizer-agent.jar
&lt; -server
&lt; -XX:PermSize=256m
&lt; -XX:MaxPermSize=256m
&lt; -XX:+UseParallelGC
&lt; -Xverify:none
</code></pre>

<p>删除，问题顺利解决。</p>

<p>Reference:<a href="https://stackoverflow.com/questions/7302604/eclipse-error-failed-to-create-the-java-virtual-machine">Eclipse error: &lsquo;Failed to create the Java Virtual Machine&rsquo;</a></p>

<h3>3.<code>Warning: mysqli::__construct(): (HY000/2002): No such file or directory in /code/index.php on line 8 Connection failed: No such file or directory</code></h3>

<p>A:问题出现的原因：
当主机填写为localhost时MySQL会采用 unix domain socket连接，当主机填写为127.0.0.1时MySQL会采用TCP/IP的方式连接。使用Unix socket的连接比TCP/IP的连接更加快速与安全。这是MySQL连接的特性，可以参考官方文档的说明<a href="https://dev.mysql.com/doc/refman/5.6/en/connecting.html#id471316">4.2.2. Connecting to the MySQL Server</a>:</p>

<blockquote><p>On Unix, MySQL programs treat the host name localhost specially, in a way that is
likely different from what you expect compared to other network-based programs.
For connections to localhost, MySQL programs attempt to connect to the local server
by using a Unix socket file. This occurs even if a &ndash;port or -P option is given to
specify a port number. To ensure that the client makes a TCP/IP connection to the
local server, use &ndash;host or -h to specify a host name value of 127.0.0.1, or the IP
address or name of the local server. You can also specify the connection protocol
explicitly, even for localhost, by using the &ndash;protocol=TCP option.</p></blockquote>

<p>这个问题有以下几种解决方法：</p>

<ol>
<li>使用TCP/IP代替Unix socket。即在连接的时候将localhost换成127.0.0.1。</li>
<li>修改MySQL的配置文件my.cnf，指定mysql.socket的位置： /var/lib/mysql/mysql.sock (你的mysql.socket路径)。   </li>
<li>直接在php建立连接的时候指定my.socket的位置（官方文档：mysqli_connect）。比如： <code>$db = new MySQLi('localhost', 'root', 'root', 'my_db', '3306', '/var/run/mysqld/mysqld.sock')</code></li>
</ol>


<p>Reference:<a href="https://segmentfault.com/q/1010000000328531">mysqli不能使用localhost，请问这是怎么回事？</a></p>

<h3>4.超链接元素的 onclick 方法直接使用表单元素的名字调用其 submit 方法。</h3>

<p>A:</p>

<pre><code class="html">&lt;form name="bm_form" action="/delete_bms" method="POST"&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;a href="https://www.google.com"&gt;https://www.google.com&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;input type="checkbox" name="del_me" value="https://www.google.com" /&gt;&lt;/td&gt;
    &lt;/tr&gt;

    &lt;tr&gt;
        &lt;td&gt;&lt;a href="https://www.twitter.com"&gt;https://www.twitter.com&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;input type="checkbox" name="del_me" value="https://www.twitter.com" /&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/form&gt;

&lt;a href="#" onclick="bm_form.submit();"&gt;Delete BM&lt;/a&gt;
</code></pre>

<p>这里展示了可以直接使用表单元素的名字直接来提交的技巧。</p>

<h3>5.Ionic - Cannot find module “.”</h3>

<p>A:Just remove all imports that have /umd at the final.
In my case, I changed: 
<code>import { IonicPageModule } from 'ionic-angular/umd';</code>
To: 
<code>import { IonicPageModule } from 'ionic-angular';</code></p>

<p>Reference:<a href="https://stackoverflow.com/questions/43236971/ionic-2-runtime-error-cannot-find-module">Ionic 2 - Runtime error Cannot find module “.”</a></p>

<h3>6.Google maps report google is not define in ionic app.</h3>

<p>A:</p>

<ol>
<li>go to your project and do “ionic plugin add cordova-plugin-whitelist”</li>
<li>add CSP meta</li>
</ol>


<pre><code>&lt;meta http-equiv="Content-Security-Policy" content="script-src 'self' https://maps.googleapis.com/ https://maps.gstatic.com/ https://mts0.googleapis.com/ 'unsafe-inline' 'unsafe-eval'"&gt;
</code></pre>

<p>Live reload unfortunately seems not work, I get this error:</p>

<pre><code>Refused to load the script 'http://localhost:35729/livereload.js?snipver=1' because it violates the following Content Security Policy directive: "script-src 'self' https://maps.googleapis.com/ https://maps.gstatic.com/ https://mts0.googleapis.com/ 'unsafe-inline' 'unsafe-eval'".
</code></pre>

<p>After some google, update CSP meta works, new CSP meta as follow:</p>

<pre><code>  &lt;meta http-equiv="Content-Security-Policy" content="script-src localhost:35729 'self' https://maps.googleapis.com/ https://maps.gstatic.com/ https://mts0.googleapis.com/ 'unsafe-inline' 'unsafe-eval'"&gt;
</code></pre>

<p>Reference:<a href="https://forum.ionicframework.com/t/ionic-google-maps-referenceerror-google-is-not-defined/22550">Ionic + Google Maps: ReferenceError: google is not defined</a><br/>
<a href="https://forum.ionicframework.com/t/solution-for-livereload-problems-with-new-csp-rules/25449">Solution for livereload problems with new CSP rules</a></p>

<h3>7.Error: No provider for Navbar!</h3>

<p>A:Normally navbar don&rsquo;t provide with injector, we should access like follow:</p>

<pre><code>// Template
&lt;ion-navbar #navbar color="primary"&gt;
    &lt;ion-title&gt;Whatever&lt;/ion-title&gt;
    &lt;ion-buttons right&gt;
      &lt;button icon-only ion-button&gt;
        &lt;ion-icon name='pause'&gt;&lt;/ion-icon&gt;
      &lt;/button&gt;
    &lt;/ion-buttons&gt;
&lt;/ion-navbar&gt;
</code></pre>

<pre><code>// Typescript
export class Page {

@ViewChild('navbar') navBar: Navbar;

}
</code></pre>

<p>Reference:<a href="https://forum.ionicframework.com/t/error-in-homepage-class-homepage-caused-by-no-provider-for-navbar/82530">Error in ./HomePage class HomePage - caused by: No provider for Navbar!</a></p>

<h3>8.How to custom back button of ionic app?</h3>

<p>A:</p>

<pre><code>&lt;ion-header&gt;
  &lt;ion-navbar color='danger' hideBackButton&gt;
    &lt;ion-title&gt;product page&lt;/ion-title&gt;
        &lt;ion-buttons left&gt;
        &lt;button ion-button navPop icon-only&gt;
              &lt;ion-icon ios="ios-arrow-forward" md="md-arrow-forward"&gt;&lt;/ion-icon&gt;
        &lt;/button&gt;
    &lt;/ion-buttons&gt;
  &lt;/ion-navbar&gt;
&lt;/ion-header&gt;
</code></pre>

<p>Reference:<a href="https://forum.ionicframework.com/t/change-default-ion-navbar-back-button-ios/47342">Change default ion-navbar “back” button ios</a></p>

<h3>9.How to make a div take the remaining height?</h3>

<p>A:</p>

<ol>
<li>Absolute Positioning</li>
<li>Tables</li>
<li>CSS3 calc</li>
</ol>


<p>Absolute Positioning</p>

<p>```
// html</p>

<div id="inner_fixed">
    I have a fixed height
</div>


<p> </p>

<div id="inner_remaining">
    I take up the remaining height
</div>


<pre><code>
<figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>html, body {
</span><span class='line'>        height: 100%;
</span><span class='line'>        width: 100%;
</span><span class='line'>        margin: 0;
</span><span class='line'>    }
</span><span class='line'>     
</span><span class='line'>    #inner_fixed {
</span><span class='line'>        height: 100px;
</span><span class='line'>        background-color: grey;
</span><span class='line'>    }
</span><span class='line'>     
</span><span class='line'>    #inner_remaining {
</span><span class='line'>        background-color: #DDDDDD;    
</span><span class='line'>     
</span><span class='line'>        position: absolute;
</span><span class='line'>        top: 100px;
</span><span class='line'>        bottom: 0;
</span><span class='line'>        width: 100%; 
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>

pros

* easy to implement
* intuitive

cons

* tedious to maintain (hard-coded positions)

Tables
</code></pre>

<p>// html</p>

<div id="outer">
    <div id="inner_fixed">
        I have a fixed height
    </div>
 
    <div id="inner_remaining">
        I take up the remaining height
    </div>
</div>


<pre><code>
<figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>html, body, #outer {
</span><span class='line'>        height: 100%;
</span><span class='line'>        width: 100%;
</span><span class='line'>        margin: 0;
</span><span class='line'>    }
</span><span class='line'>     
</span><span class='line'>    #outer {
</span><span class='line'>        display: table;
</span><span class='line'>    }
</span><span class='line'>     
</span><span class='line'>    #inner_fixed {
</span><span class='line'>        height: 100px;
</span><span class='line'>        background-color: grey;
</span><span class='line'>     
</span><span class='line'>        display: table-row;
</span><span class='line'>    }
</span><span class='line'>     
</span><span class='line'>    #inner_remaining {
</span><span class='line'>        background-color: #DDDDDD;
</span><span class='line'>     
</span><span class='line'>        display: table-row;    
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>

pros

* rather “clean” solution
* no hard-coded values, other elements can change their height

cons

* might cause some side-effects with the layout

CSS3 calc
</code></pre>

<p>// html</p>

<div id="inner_fixed">
    I have a fixed height
</div>


<p> </p>

<div id="inner_remaining">
    I take up the remaining height
</div>


<pre><code>
<figure class='code'><figcaption><span>css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>html, body {
</span><span class='line'>        height: 100%;
</span><span class='line'>        width: 100%;
</span><span class='line'>        margin: 0;
</span><span class='line'>    }
</span><span class='line'>     
</span><span class='line'>    #inner_fixed {
</span><span class='line'>        height: 100px;
</span><span class='line'>        background-color: grey;
</span><span class='line'>    }
</span><span class='line'>     
</span><span class='line'>    #inner_remaining {
</span><span class='line'>        background-color: #DDDDDD;
</span><span class='line'>     
</span><span class='line'>        height: calc(100% - 100px);    
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>

pros

* easy to implement
* less code than the other solutions

cons

* the calc function is rather new (no support for older browsers)
* tedious to maintain (hard-coded height)

Reference:[How to make a div take the remaining height](https://www.whitebyte.info/programming/css/how-to-make-a-div-take-the-remaining-height)  

###10.Property 'of' does not exist on type 'typeof Observable
A:
for Angular &gt;= 6.0.0
uses RxJS 6.0.0 
</code></pre>

<p>import { of } from &lsquo;rxjs&rsquo;;</p>

<pre><code>
And its usage has been changed, you no longer call it off of Observable:
</code></pre>

<p>of(&lsquo;token&rsquo;);</p>

<pre><code>
for Angular &lt;= 5.x.xx
</code></pre>

<p>import &lsquo;rxjs/add/observable/of&rsquo;;</p>

<p>Observable.of(&lsquo;token&rsquo;);</p>

<p>```</p>

<p>Reference:<a href="https://stackoverflow.com/questions/38067580/property-of-does-not-exist-on-type-typeof-observable">Property &lsquo;of&rsquo; does not exist on type &lsquo;typeof Observable</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web 开发问题汇总(二)]]></title>
    <link href="http://DamianSheldon.github.io/blog/web-development-notes-part-two.html"/>
    <updated>2018-01-04T10:08:36+08:00</updated>
    <id>http://DamianSheldon.github.io/blog/web-development-notes-part-two</id>
    <content type="html"><![CDATA[<h3>1.Uncaught TypeError: Cannot read property &lsquo;msie&rsquo; of undefined</h3>

<p>A:The $.browser method has been removed as of jQuery 1.9.</p>

<blockquote><p>jQuery.browser() removed</p>

<p>The jQuery.browser() method has been deprecated since jQuery 1.3 and is removed in 1.9. If needed, it is available as part of the jQuery Migrate plugin. We recommend using feature detection with a library such as Modernizr.</p>

<p>— jQuery Core 1.9 Upgrade Guide.</p></blockquote>

<p>As stated in the Upgrade Guide you can try using the <a href="https://github.com/jquery/jquery-migrate/">jQuery Migrate plugin</a> to restore this functionality and let jQuery Tools work.</p>

<p>Reference:<a href="http://stackoverflow.com/questions/14923301/uncaught-typeerror-cannot-read-property-msie-of-undefined-jquery-tools">Uncaught TypeError: Cannot read property &lsquo;msie&rsquo; of undefined - jQuery tools</a></p>

<h3>2.The superclass “javax.servlet.http.HttpServlet” was not found on the Java Build Path in Eclipse</h3>

<p>A:To include http-servlet into your class path, you have two options:</p>

<pre><code>1. In this solution, you can add desired server runtime into your application as project facet. As runtime servers have already servlet runtime dependencies, they get included into your project and hence error is gone.
2. Another option is include the servlet dependency through maven itself. This will also fix the error.
</code></pre>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
    &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;
    &lt;version&gt;2.5&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>Reference:<a href="https://howtodoinjava.com/tools/eclipse/solved-the-superclass-javax-servlet-http-httpservlet-was-not-found-on-the-java-build-path-in-eclipse/">The superclass “javax.servlet.http.HttpServlet” was not found on the Java Build Path in Eclipse</a></p>

<h3>3.Dynamic Web Module 3.1 requires Java 1.7 or newer</h3>

<p>A:</p>

<p>Step1:<br/>
Make sure your Java Project is configured probably to use Java 1.7.
Right click your project > Properties > Java Compiler and set “Compiler compliance level” to 1.7</p>

<p>Step2:<br/>
Java Build Path. Click “Edit“. And change it to “Java 7”</p>

<p>Step3:<br/>
Next from the menu on the left select Project Facets > Java and set its version to 1.7</p>

<p>Extra Tips:<br/>
If you have maven project try updating source and target version of java compiler to 1.7 in pom.xml file.</p>

<p>Reference:<a href="https://crunchify.com/how-to-solve-dynamic-web-module-3-1-requires-java-1-7-or-newer-in-eclipse/">How to solve “Dynamic Web Module 3.1 requires Java 1.7 or newer” in Eclipse</a></p>

<h3>4.How to display available goals of maven plugin?</h3>

<p>A:</p>

<blockquote><p>Recent Maven plugins have generally an help goal to have in the command line the description of the plugin, with their parameters and types. For instance, to understand the javadoc goal, you need to call:</p></blockquote>

<pre><code class="bash">$ mvn javadoc:help -Ddetail -Dgoal=javadoc
</code></pre>

<p>It works of course for Maven core plugins. to list all goals of the archetype plugin :</p>

<pre><code class="bash">$ mvn archetype:help
</code></pre>

<p>And it works also for third party plugins. For example, to display all goals of the spring-boot plugin :</p>

<pre><code class="bash">$ mvn spring-boot:help
</code></pre>

<p>Reference:<a href="https://stackoverflow.com/questions/1674524/how-to-display-a-list-of-available-goals">How to display a list of available goals?</a></p>

<h3>5.Not a java source folder</h3>

<p>A:以 maven-archetype-webapp 为原型新建工程，建好的工程没有 java 目录，于是在 src/main 下新建 java 目录，之后新建 Filter 或 Servlet 时提示 Not a java source folder.尝试右击 java 目录 > Build Path > Use as Source Folder 依然未生效，只得将目录删除恢复原状想其他办法。</p>

<p>于是选中工程 > Properties > Java Build Path > Source， 里面提示 src/main/java build path entries are missing, 嗯，有了新的线索，于是将这些丢失的入口都删除了，再重新创建 java source folder, 这样问题得到了解决，感觉这个问题像是 eclipse 的一个 bug.</p>

<!--more-->


<h3>6.Thymeleaf 如何支持遍历枚举</h3>

<p>A:</p>

<blockquote><p>The java.util.List class isn’t the onlyvalue that can be used for iteration in Thymeleaf. There is a quite complete set of objects that are considered iterable by a th:each attribute:</p>

<ul>
<li>Any object implementing java.util.Iterable</li>
<li>Any object implementing java.util.Enumeration .</li>
<li>Any object implementing java.util.Iterator , whose values will be used as they are returned by the iterator, without the need to cache all values in memory.</li>
<li>Any object implementing java.util.Map . When iterating maps, iter variables will be of class java.util.Map.Entry . Any array.</li>
<li>Any other object will be treated as if it were a single-valued list containing the object itself.</li>
</ul>
</blockquote>

<p>上面就是可选方案，一开始我没看仔细，以为 Enumeration 可以直接遍历，之后细看是实现 java.util.Enumeration 的对象，这样综合来看将 Enumeration 转化成 List 是不错的选择。</p>

<p>```html</p>

<p><div th:each="attr: ${java.util.Collections.list(#httpServletRequest.attributeNames)}">
```</p>

<p>Reference:<a href="https://github.com/thymeleaf/thymeleaf/issues/321">please allow to iterate java.util.Enumeration</a></p>

<h3>7.Call method with iter vaiable as argument in thymeleaf</h3>

<p>A:</p>

<pre><code class="html">&lt;ul th:each="name : ${names}"&gt;
    &lt;li
        th:text="|${name} = ${#session.getAttribute(
        name )}|"&gt;uid
        = 502&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>Reference:<a href="http://forum.thymeleaf.org/invoking-a-method-on-model-with-parameter-td4026846.html">invoking a method on model with parameter</a></p>

<h3>8.Hiding text using text-indent</h3>

<p>A:</p>

<pre><code class="html">&lt;style type="text/css"&gt;

h1 a {
    text-decoration: none;
    position: absolute; /* Depending on your placement */
    width: 260px;
    height: 100px;
    bottom: 0px; /* Depending on your placement */
    background: url(images/aext-logo.png) no-repeat left top;
    text-indent: -99999px;
}

&lt;/style&gt;

&lt;h1&gt;&lt;a href="http://aext.net"&gt;AEXT.NET&lt;/a&gt;&lt;/h1&gt;
</code></pre>

<p>在尝试过程中发现要设置 width 和 height 才能生效，可以注意下。</p>

<p>Reference:<a href="http://bloggingexperiment.com/css-text-indent-style-your-html-form">CSS text-indent: An Excellent Trick To Style Your HTML Form</a></p>

<h3>9.SEVERE: Exception starting filter</h3>

<p>A:详细错误信息如下：</p>

<pre><code>Apr 08, 2018 10:28:48 AM org.apache.catalina.core.StandardContext filterStart
SEVERE: Exception starting filter [DispatchFilter]
java.lang.ClassNotFoundException: com.tenneshop.bookmark.web.filter.DispatchFilter
    at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1291)
    at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1119)
    at org.apache.catalina.core.DefaultInstanceManager.loadClass(DefaultInstanceManager.java:544)
    at org.apache.catalina.core.DefaultInstanceManager.loadClassMaybePrivileged(DefaultInstanceManager.java:525)
    at org.apache.catalina.core.DefaultInstanceManager.newInstance(DefaultInstanceManager.java:150)
    at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:264)
    at org.apache.catalina.core.ApplicationFilterConfig.&lt;init&gt;(ApplicationFilterConfig.java:108)
    at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:4590)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5233)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1419)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)
    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at java.lang.Thread.run(Thread.java:745)

Apr 08, 2018 10:28:48 AM org.apache.catalina.core.StandardContext startInternal
SEVERE: One or more Filters failed to start. Full details will be found in the appropriate container log file
Apr 08, 2018 10:28:48 AM org.apache.catalina.core.StandardContext startInternal
SEVERE: Context [/bookmark] startup failed due to previous errors
</code></pre>

<p>从错误信息来看问题的原因是类找不到，于是可以到部署的目标路径下确认 <code>com.tenneshop.bookmark.web.filter.DispatchFilter</code>是否存在。从 eclipse 输出的 debug 日志中找到部署的目标路径：</p>

<pre><code>Apr 08, 2018 10:28:38 AM org.apache.catalina.startup.VersionLoggerListener log
INFO: Command line argument: -Dwtp.deploy=/Users/dongmeiliang/eclipse-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps
</code></pre>

<p>发现类确实不存在，重新 <code>$ mvn compile</code> 之后问题解决。回想下发觉问题产生的原因是我在终端 <code>$ mvn clean</code>，然后在 eclipse 中 refresh  project ，最后直接就 debug on server 导致没有包含编译的类。</p>

<p>Reference:<a href="https://stackoverflow.com/questions/32692321/tomcat-severe-exception-starting-filter-corsfilter-classnotfoundexception">Tomcat SEVERE: Exception starting filter CorsFilter, ClassNotFoundException</a></p>

<h3>10.如何改变 server context path?</h3>

<p>A:用 mvn 新建工程时，artifactId 写成了 package name，之后在访问 web 时就略显尴尬，可以通过 Window > Show View > Servers > Double click specific server > Modules > Edit target web module。</p>

<h3>11.Eclipse error: “The import XXX cannot be resolved”</h3>

<p>A:With me it helped changing the compiler compliance level. For unknown reasons it was set to 1.6 and I changed it to 1.8.
Once at project level right click on project > Properties > Java Compiler, while in Eclipse click on menu Window > Preferences > Java > Compiler.</p>

<p>Reference:<a href="https://stackoverflow.com/questions/4322893/eclipse-error-the-import-xxx-cannot-be-resolved">Eclipse error: “The import XXX cannot be resolved”</a></p>

<h3>12.Index downloads are disabled, search result may be incomplete.</h3>

<p>A:</p>

<ol>
<li>In Eclipse, click <strong>on Windows > Preferences</strong>, and then choose <strong>Maven</strong> in the left side.</li>
<li>Check the box &ldquo;<strong>Download repository index updates on startup</strong>&rdquo;.</li>
<li>Optionally, check the boxes <strong>Download Artifact Sources</strong> and <strong>Download Artifact JavaDoc</strong>.</li>
<li>Click <strong>OK</strong>. The warning won&rsquo;t appear anymore.</li>
<li>Restart Eclipse.</li>
</ol>


<p>Reference:<a href="https://stackoverflow.com/questions/24252256/how-do-i-enable-index-downloads-in-eclipse-for-maven-dependency-search">How do I enable index downloads in Eclipse for Maven dependency search? </a></p>

<h3>13.How to Iterate Over a Map in Java</h3>

<p>A:There are at least 4 method to iterate over a map, one is Iterating over entries using For-Each loop.</p>

<pre><code class="java">Map&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;();
for (Map.Entry&lt;Integer, Integer&gt; entry : map.entrySet()) {
    System.out.println("Key = " + entry.getKey() + ", Value = " + entry.getValue());
}
</code></pre>

<p>Reference:<a href="http://www.sergiy.ca/how-to-iterate-over-a-map-in-java/">How to Iterate Over a Map in Java</a></p>

<h3>14.How to get the row count of ResultSet?</h3>

<p>A:</p>

<pre><code class="java">Statement s = cd.createStatement();
ResultSet r = s.executeQuery("SELECT COUNT(*) AS rowcount FROM FieldMaster");
r.next();
int count = r.getInt("rowcount");
r.close();
System.out.println("MyTable has " + count + " row(s).");
</code></pre>

<p>Reference:<a href="https://stackoverflow.com/questions/7886462/how-to-get-row-count-using-resultset-in-java">How to get row count using ResultSet in Java?</a></p>

<h3>15.How to Generate random words in Java?</h3>

<p>A:</p>

<pre><code class="java">public static String[] generateRandomWords(int numberOfWords)
{
    String[] randomStrings = new String[numberOfWords];
    Random random = new Random();
    for(int i = 0; i &lt; numberOfWords; i++)
    {
        char[] word = new char[random.nextInt(8)+3]; // words of length 3 through 10. (1 and 2 letter words are boring.)
        for(int j = 0; j &lt; word.length; j++)
        {
            word[j] = (char)('a' + random.nextInt(26));
        }
        randomStrings[i] = new String(word);
    }
    return randomStrings;
}
</code></pre>

<p>Reference:<a href="https://stackoverflow.com/questions/4951997/generating-random-words-in-java">Generating random words in Java?</a></p>
]]></content>
  </entry>
  
</feed>
